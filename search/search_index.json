{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"blog/2019/04/08/deep-learning-atlas/","title":"Deep Learning Atlas","text":"<p>Introduction to deep learning and neural network architectures including convolutional and recurrent networks.  Slides for a presentation I gave the 4Developers conference in Warsaw, Poland.</p>","tags":["neural networks","convolutional","recurrent"]},{"location":"blog/2019/04/08/deep-learning-atlas/#abstract","title":"Abstract","text":"<p>What are neural networks? What makes them recurrent or convolutional? This talk will give you an introduction to and a whirlwind tour of the field of Deep Learning. We'll start by explaining how simple artificial neural networks work and how they learn though backpropagation. We'll then go over different network architectures used in computer vision, sequence analysis, neural machine translation and other areas.</p>","tags":["neural networks","convolutional","recurrent"]},{"location":"blog/2019/04/08/deep-learning-atlas/#talk-recording","title":"Talk recording","text":"","tags":["neural networks","convolutional","recurrent"]},{"location":"blog/2019/05/26/python-project-maturity-checklist/","title":"Python project maturity checklist","text":"<p>Did you write a cool and useful Python script? Would you like to share it with the community, but you're not sure how to go about that? If so, then this is the article for you. We'll go over a list of simple steps which can turn your script into a fully fledged open-source project.</p> <p>The Python community has created a rich ecosystem of tools, which can help you during the development and upkeep of your project. Complete the steps in this checklist, and your project will be easier to maintain and you'll be ready to take contributions from the community.</p> <p>This is an opinionated article. I will run though a long list of tools and practices, I've had good experience with. Some of your favorite tools may be left out, some of my choices you may find unnecessary. Feel free to adapt the list to your liking and leave a comment below.</p> <p>I tried to complete the entire checklist in my small open-source project named <code>gym-demo</code>. Feel free to use it as a reference and submit PRs if you find room for improvement.</p> <p></p>","tags":["python","tooling","validation","testing"]},{"location":"blog/2019/05/26/python-project-maturity-checklist/#define-your-command-line-interface-cli","title":"\u2611 Define your command-line interface (CLI)","text":"<p>If you're going to provide a command-line utility, then you need to define a friendly command-line user interface. Your interface will be more intuitive for users if it follows the GNU conventions for command line arguments.</p> <p>There are many ways to parse command line arguments, but my favorite by far is to use the <code>docopt</code> module developed by Vladimir Keleshev. It allows you to define your entire interface in the form of a docstring at the beginning of your script, like so:</p> <pre><code>\"\"\"Usage: gym_demo.py [--steps=NN --no-render --observations] ENV_NAME\nShow a random agent playing in a given OpenAI environment.\nArguments:\n  ENV_NAME          Name of the Gym environment to run\nOptions:\n  -h --help\n  --steps=&lt;STEPS&gt;   How many iteration to run for.  [default: 5000]\n  --no-render       Don't render the environment graphically.\n  --observations    Print environment observations.\n\"\"\"\n</code></pre> <p>Later you can just call the <code>docopt(__doc__)</code> command and use the argument values:</p> <pre><code>import docopt\n\narguments = docopt(__doc__)\nsteps = int(arguments.get(\"--steps\"))\nrender_env = not arguments.get(\"--no-render\")\nprint_observations = arguments.get(\"--observations\")\nenv_name = arguments.get(\"ENV_NAME\")\n</code></pre> <p>Note</p> <p>I usually start with Docopt by copying one of the examples and modifying it to my needs.</p> <p></p>","tags":["python","tooling","validation","testing"]},{"location":"blog/2019/05/26/python-project-maturity-checklist/#structure-your-code","title":"\u2611  Structure your code","text":"<p>Python has established conventions for most things, this includes the layout of your code directory and naming of some files and directories. Follow these conventions to make your project easier to understand by other Python developers.</p>","tags":["python","tooling","validation","testing"]},{"location":"blog/2019/05/26/python-project-maturity-checklist/#code-layout","title":"Code layout","text":"<p>The basic directory structure of your project should resemble this:</p> <pre><code>package-name\n\u251c\u2500\u2500 LICENSE\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 main_module_name\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 main.py\n\u251c\u2500\u2500 tests\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 test_main.py\n\u251c\u2500\u2500 requirements.txt\n\u2514\u2500\u2500 setup.py\n</code></pre> <p>The <code>package-name</code> directory contains all of the sources of your package. Usually this is the root directory of your project repository, containing all other files. Choose your package name wisely and check if it's available on PyPI, as this will be the name people will use to install your package using:</p> <pre><code>pip install package-name\n</code></pre> <p>The <code>main_module_name</code> directory is the directory which will be copied into your user's <code>site-packages</code> when your package is installed. You can define more than one module if you need to, but it's good practice to nest them under a single module with an identifiable name.</p> <p>According to the Python style guide PEP8:</p> <p>Modules should have short, all-lowercase names. Underscores can be used in the module name if it improves readability. Python packages should also have short, all-lowercase names, although the use of underscores is discouraged.</p> <p>If possible, the name of your package and the name of it's main module should be the same. Since underscores are discouraged in package names, you can use <code>my-project</code> as the package name and <code>my_project</code> as the main module name.</p>","tags":["python","tooling","validation","testing"]},{"location":"blog/2019/05/26/python-project-maturity-checklist/#code-structure","title":"Code structure","text":"<p>Whether you're writing code in Python or any other language, you should follow Clean Code principals. One of the most important ideas behind clean code it to split up your logic into short functions, each with a single responsibility.</p> <p>Your functions should take zero, one or at most two arguments. If your functions have more than 2 parameters, that's a well known code-smell. It indicates that your function is probably trying to do more than one thing and you should split it up into smaller sub-functions.</p> <p>Note</p> <p>Still need more than two parameters? Perhaps your function parameters are related and should come into your function as a single data structure? Or perhaps you should refactor your code so your functions become methods of an object?</p> <p>In Python, you can sometimes get away with more than two parameters, if you specify default values for the extra ones. This is better, but you should still consider if the function shouldn't be split.</p> <p>Small functions with a single responsibility and few parameters are easy to write unit-tests for. We'll come back to this.</p>","tags":["python","tooling","validation","testing"]},{"location":"blog/2019/05/26/python-project-maturity-checklist/#define-a-__main__-function","title":"Define a <code>__main__</code> function","text":"<p>If you're writing a command-line utility, you should create a separate function which handles the parsing of user input and initiating the logic of your utility. You can call this function <code>main()</code> or anything else you think fits.</p> <p>This logic should be placed in the <code>__main__</code> block of your script:</p> <pre><code>if __name__ == \"__main__\":\n    main()\n</code></pre> <p>Note</p> <p>The condition <code>__name__ == \"__main__\"</code> is only true if you're calling the script directly. It's not true if you include the same Python file as a library module: <code>from my_module import main</code>.</p> <p>The advantage of splitting the main logic into a separate <code>main()</code> function is that you'll be able to use the <code>main</code> function as an entry point. We'll come back to this when talking about <code>entry_points</code>.</p> <p></p>","tags":["python","tooling","validation","testing"]},{"location":"blog/2019/05/26/python-project-maturity-checklist/#write-a-setuppy-file","title":"\u2611 Write a <code>setup.py</code> file","text":"<p>Python has a mature and well maintained packaging utility called <code>setuptools</code>. A <code>setup.py</code> file is the build script for <code>setuptools</code> and every Python project should have one.</p> <p>Writing a basic <code>setup.py</code> file is very easy, all the file has to do is to call the <code>setup</code> method with appropriate information about your project.</p> <p>This example comes from my <code>gym-demo</code> project:</p> setup.py<pre><code>    #!/usr/bin/env python\n    import os\n\n    from setuptools import setup\n\n    setup(\n        name=\"gym-demo\",\n        version=\"0.2.1\",\n        description=\"Explore OpenAI Gym environments.\",\n        long_description=open(\n            os.path.join(os.path.abspath(os.path.dirname(__file__)), \"README.md\")\n        ).read(),\n        long_description_content_type=\"text/markdown\",\n        author=\"Michal Karzynski\",\n        author_email=\"github@karzyn.com\",\n        packages=[\"gym_demo\"],\n        install_requires=[\"setuptools\", \"docopt\"],\n    )\n</code></pre> <p>The example above assumes you have a <code>long_description</code> of your project in a markdown <code>README.md</code> file in the same directory. If you don't, you can specify <code>long_description</code> as a string.</p> <p>More information can be found in the Python packaging tutorial.</p>","tags":["python","tooling","validation","testing"]},{"location":"blog/2019/05/26/python-project-maturity-checklist/#using-a-setuppy-file","title":"Using a <code>setup.py</code> file","text":"<p>Once you have a <code>setup.py</code> file, you can use it to build your Python project's distribution packages like so:</p> <pre><code>$ pip install setuptools wheel\n$ python setup.py sdist\n$ python setup.py bdist_wheel\n</code></pre> <p>The <code>sdist</code> command creates a source distribution (such as a tarball or zip file with Python source code). <code>bdist_wheel</code> creates a binary Wheel distribution file which your users may download from PyPI in the future. Both distribution files will be placed in the <code>dist</code> subdirectory.</p> <p>Note</p> <p>The <code>bdist_wheel</code> command comes from the <code>wheel</code> package.</p> <p>During development another <code>setup.py</code> command is even more useful:</p> <pre><code>$ source my_venv/bin/activate\n(my_venv)$ python setup.py develop\n</code></pre> <p>This command installs your project inside a virtual environment named <code>my_venv</code>, but it does so without copying any files. It links your source directory with your <code>site-packages</code> directory by creating a link file (such as <code>my-project.egg-link</code>). This is very useful, because you can work on your source code directly and test it in your virtual env without reinstalling the project after each change.</p> <p>You can find out about other <code>setup.py</code> commands by running:</p> <pre><code>$ python setup.py --help-commands\n</code></pre> <p>Note</p> <p>If you're not using virtual environments you're missing out.  I would also recommend using <code>virtualenvwrapper</code> tools.  Alternatively you can switch to the new <code>pipenv</code> tool.</p> <p></p>","tags":["python","tooling","validation","testing"]},{"location":"blog/2019/05/26/python-project-maturity-checklist/#add-entry_points-for-your-script-command","title":"\u2611 Add <code>entry_points</code> for your script command","text":"<p>If you're writing a command-line utility, you should create a console script entry point for your command. This will create an executable launcher for your script, which users can easily call at the command line.</p> <p>To do this, just add an <code>entry_points</code> argument to the <code>setup()</code> call in your <code>setup.py</code> file.  For example, the following <code>console_scripts</code> entry will create an executable named <code>my-command</code> (or <code>my-command.exe</code> on Windows) and place it in the <code>bin</code> path of your environment. This means your users can just use <code>my-command</code> after they install your package.</p> <p>setup.py<pre><code>setup(\n    # other arguments here...\n    entry_points={\"console_scripts\": [\"my-command = my_module.main:main\"]},\n)\n</code></pre> <code>my_module.main:main</code> specifies which function to call and where to find it. <code>my_module.main</code> specifies the path to the Python file <code>main.py</code> in <code>my_module</code>. And <code>:main</code> denotes the <code>main()</code> function inside <code>main.py</code>. This is the \"Python path\" syntax and if you know which PEP it's defined in, leave me a note in the comments. Thanks.</p> <p>Note</p> <p>There are other cool things <code>entry_points</code> can do. You can use it to customize build commands of <code>setup.py</code> and even to distribute discoverable services for other tools (such as parsers for a specific file format, etc.).</p> <p>Read more about automated script creation in the <code>setuptools</code> docs.</p> <p></p>","tags":["python","tooling","validation","testing"]},{"location":"blog/2019/05/26/python-project-maturity-checklist/#create-a-requirementstxt-file","title":"\u2611 Create a <code>requirements.txt</code> file","text":"<p>You should provide your users with information about which other packages your package will require to work properly. The right place to put this information is inside <code>setup.py</code> as an <code>install_requires</code> list.</p> setup.py<pre><code>setup(\n    # other arguments here...\n    install_requires=[\"colorful\", \"docopt\"],\n)\n</code></pre> <p>It's also very useful to inform your users which versions of each dependency you tested your package with. A good way to do this is to put a requirements file in your repository. The file is usually named <code>requirements.txt</code> and should contain the list of your dependencies along with version numbers, for example:</p> requirements.txt<pre><code>colorful==0.5.0\ndocopt==0.6.2\n</code></pre> <p>Users can then install these precise versions of your dependencies by running:</p> <pre><code>$ pip install -r requirements.txt\n</code></pre> <p>Note</p> <p>It may be useful to create a separate <code>requirements_test.txt</code> file for dependencies used only during testing and development.</p> <p>The easiest way to generate a <code>requirements.txt</code> file is to run the <code>pip freeze</code> command. Be careful with this though, as it will list all installed packages, whether they are dependencies of your package, the dependencies of these dependencies, or simply unrelated packages you installed in your environment.</p> <p></p>","tags":["python","tooling","validation","testing"]},{"location":"blog/2019/05/26/python-project-maturity-checklist/#set-up-a-git-repo","title":"\u2611 Set up a Git repo","text":"<p>It's time to put your code under source-control. Everyone is using Git these days, so let's roll with it.</p> <p>Let's start by adding a Python-specific <code>.gitignore</code> file to the root of your project.</p> <pre><code>$ curl https://raw.githubusercontent.com/github/gitignore/master/Python.gitignore &gt; .gitignore\n</code></pre> <p>You can now create your repo and add all files:</p> <pre><code>$ git init\n$ git add --all\n</code></pre> <p>Verify that only files you want are being added to the repo with <code>git status</code> and create your initial commit.</p> <pre><code>$ git commit -m 'Initial commit'\n</code></pre> <p>More sample <code>.gitignore</code> files may be found in the GitHub gitignore repo.</p> <p></p>","tags":["python","tooling","validation","testing"]},{"location":"blog/2019/05/26/python-project-maturity-checklist/#use-black-to-format-your-code","title":"\u2611 Use Black to format your code","text":"<p>The Python community is very lucky for many reasons and one of them is the early adoption of a common code-style guide the PEP8. This is a great blessing, because we don't have to argue which coding style is better, we don't have to define a different style for each project, in each company, etc. We have PEP8 and we should all just stick to PEP8.</p> <p>To that end, \u0141ukasz Langa crated Black - the uncompromising code formatter. You should install it, run it over your code and then re-run before every commit. Using Black is as easy as:</p> <pre><code>(my_venv) $ pip install black\n(my_venv) $ black my_module\nAll done! \u2728 \ud83c\udf70 \u2728\n1 file reformatted, 7 files left unchanged.\n</code></pre> <p>You may disagree with some of the formatting decisions Black makes. I would say, that it's better to have a consistent style, rather then a prettier, but inconsistent one. Let's just all use Black and get along. \u263a</p> <p></p>","tags":["python","tooling","validation","testing"]},{"location":"blog/2019/05/26/python-project-maturity-checklist/#set-up-pre-commit-hooks","title":"\u2611 Set up pre-commit hooks","text":"<p>The best way to run Black and any other code formatters is to use <code>pre-commit</code>. This is a tool which is triggered every time you <code>git commit</code> and runs code-linters and formatters on any modified files.</p> <p>Install <code>pre-commit</code> as usual:</p> <pre><code>(my_venv) $ pip install pre-commit\n</code></pre> <p>You configure <code>pre-commit</code> by creating a file named <code>.pre-commit-config.yaml</code> in the root directory of your project. A simple configuration, which only runs black would look like this:</p> .pre-commit-config.yaml<pre><code>repos:\n- repo: https://github.com/ambv/black\n  rev: stable\n  hooks:\n    - id: black\n</code></pre> <p>You can generate a sample config by calling <code>pre-commit sample-config</code>.</p> <p>Set up a Git pre-commit hook by calling <code>pre-commit install</code>.</p> <p>From now on, each time you run <code>git commit</code> Black will be called to check your style. If your style is off, <code>pre-commit</code> will prevent you form committing your code and <code>black</code> will reformat it.</p> <pre><code>(my_venv) $ git commit\nblack....................................................................Failed\nhookid: black\n\nFiles were modified by this hook. Additional output:\n\nreformatted gym_demo/demo.py\nAll done! \u2728 \ud83c\udf70 \u2728\n1 file reformatted.\n</code></pre> <p>Now simply re-add the reformatted file with <code>git add</code> and commit again.</p> <p></p>","tags":["python","tooling","validation","testing"]},{"location":"blog/2019/05/26/python-project-maturity-checklist/#code-linters","title":"\u2611 Code linters","text":"<p>Python has a great set of code linters, which can help you avoid making common mistakes and keep your style in line with PEP8 and other standard conventions. Many of these tools are maintained by the Python Code Quality Authority.</p> <p>My favorite Python linting tool is Flake8, which checks for compliance with PEP8. It's base functionality can be extended by installing some of its many plugins. My favorite Flake8 plugins are listed below.</p> requirements_test.txt<pre><code>flake8\nflake8-blind-except\nflake8-bugbear\nflake8-builtins\nflake8-comprehensions\nflake8-debugger\nflake8-docstrings\nflake8-isort\nflake8-quotes\nflake8-string-format\n</code></pre> <p>Once you install all those packages, you can simply run <code>flake8</code> to check your code.</p> <pre><code>(my_venv) $ flake8\n./my_package/my_module.py:1:1: D100 Missing docstring in public module\n</code></pre> <p>You can configure Flake8 by adding a <code>[flake8]</code> configuration section to <code>setup.cfg</code>, <code>tox.ini</code>, or <code>.flake8</code> files in your project's root directory.</p> tox.ini<pre><code>[flake8]\nmax-line-length=88\nmax-complexity=6\ninline-quotes=double\n; ignore:\n; C812 - Missing trailing comma\n; C813 - Missing trailing comma in Python 3\n; D104 - Missing docstring in public package\nignore=C812,C813,D104\n</code></pre> <p>There are other code linters you may find interesting. For example Bugbear finds common sources of bugs, while Bandit finds common security issues in Python code. You can use them both as a Flake8 plugins of course.</p> <p></p>","tags":["python","tooling","validation","testing"]},{"location":"blog/2019/05/26/python-project-maturity-checklist/#create-a-toxini-config","title":"\u2611 Create a <code>tox.ini</code> config","text":"<p><code>tox</code> is a great tool, which aims to standardize testing in Python. You can use it to setup a virtual environment for testing your project, create a package, install the package along with its dependencies and then run tests and linters. All of this is automated, so you just need to type one <code>tox</code> command.</p> <pre><code>$ tox\nGLOB sdist-make: my-project/setup.py\npy3 create: my-project/.tox/py3\npy3 installdeps: -Urrequirements.txt, -Urrequirements_test.txt\npy3 inst: my-project/.tox/.tmp/package/1/my-project-0.0.1.zip\npy3 installed: flake8==3.7.7,flake8-comprehensions==2.1.0,flake8-debugger==3.1.0,flake8-docstrings==1.3.0,my-project==0.0.1\npy3 run-test-pre: PYTHONHASHSEED='1354964057'\npy3 run-test: commands[0] | flake8 my_project\n__________________________________________________________________________________________________________________________________________________________ summary ___________________________________________________________________________________________________________________________________________________________\n  py3: commands succeeded\n  congratulations :)\n</code></pre> <p><code>tox</code> is quite configurable, so you can decide which commands are executed or use your <code>requirements.txt</code> by creating a <code>tox.ini</code> configuration file. The following simple example runs <code>flake8</code> and <code>pytest</code> in a Python3 venv.</p> tox.ini<pre><code>[tox]\nenvlist=py3\n\n[testenv]\ndeps=\n  -Urrequirements.txt\n  -Urrequirements_test.txt\ncommands=\n  flake8\n  pytest tests/\n\n[pytest]\ntimeout=300\n\n[flake8]\nmax-line-length=88\nmax-complexity=6\ninline-quotes=double\n; ignore:\n; C812 - Missing trailing comma\n; C813 - Missing trailing comma in Python 3\n; D104 - Missing docstring in public package\nignore=C812,C813,D104,D400,E203\n</code></pre> <p>Note</p> <p>You can use <code>tox</code> to easily run tests on multiple Python versions if they are installed in your system. Just extend the <code>envlist</code>, e.g. <code>envlist=py35,py36,py37</code>.</p> <p>If you automate testing using <code>tox</code>, you will be able to just run that one command in your continuous integration environment. Make sure you run <code>tox</code> on every commit you want to merge.</p> <p></p>","tags":["python","tooling","validation","testing"]},{"location":"blog/2019/05/26/python-project-maturity-checklist/#refactor-your-code-to-be-unit-testable-and-add-tests","title":"\u2611 Refactor your code to be unit-testable and add tests","text":"<p>Using unit tests is one of the best practices you can adopt. Writing unit tests for your function gives you a chance to take one more look your code. Perhaps the function is too complex and should be simplified? Perhaps there's a bug you didn't notice before or an edge-case you didn't consider?</p> <p>Writing good unit tests is an art and it takes time, but it's an investment which pays off many times over, especially on a large project which you maintain over a long period. For one, unit-tests make refactoring much easier and less scary. Also, you can learn to write your tests before you write your program (test-driven development), which is a very satisfying way to code.</p> <p>I would recommend using the PyTest framework for writing your unit tests. It's easy to get started with and it's very powerful and configurable. Writing a simple unit-test is as simple as creating a <code>test</code> directory with <code>test_*.py</code> files. A simple test looks like this:</p> tests/test_main.py<pre><code>\"\"\"Test suite for my-project.\"\"\"\nimport pytest\nfrom my_project import my_function\n\ndef test_my_function():\n    result = my_function()\n    assert result == \"Hello World!\"\n</code></pre> <p>Running the tests is as simple as typing <code>pytest</code>:</p> <pre><code>(my_venv) $ pip install pytest\n(my_venv) $ pytest\n=========================== test session starts ===========================\nplatform darwin -- Python 3.7.2, pytest-4.5.0, py-1.7.0, pluggy-0.11.0\nrootdir: my-project, inifile: tox.ini\nplugins: timeout-1.3.3, cov-2.7.1\ntimeout: 300.0s\ntimeout method: signal\ntimeout func_only: False\ncollected 255 items\n\ntests/test_main.py .......                                          [100%]\n\n======================= 7 passed in 0.35 seconds ========================\n</code></pre> <p>Make sure to add the <code>pytest</code> command to your <code>tox.ini</code> file.</p> <p></p>","tags":["python","tooling","validation","testing"]},{"location":"blog/2019/05/26/python-project-maturity-checklist/#add-docstrings-and-documentation","title":"\u2611 Add <code>docstrings</code> and documentation","text":"<p>Writing good documentation is very important for your users. You should start by making sure each function and module are described by a docstring. The docstring should describe what the function should do in an imperative mood sentence. For example:</p> <pre><code>def hello_world() -&gt; Text:\n    \"\"\"Return a greeting.\"\"\"\n    return(\"Hello World!\")\n</code></pre> <p>The parameters and return values of your functions should also be included in docstrings:</p> <pre><code>def get_columns_count_and_width(strings: List[Text]) -&gt; Tuple[int, int]:\n    \"\"\"Calculate how to break a list of strings into multiple columns.\n\n    Calculate the optimal column width and number of columns\n    to display a list of strings on screen.\n\n    :param strings: list of strings\n    :return: a tuple with the number of columns and column width\n    \"\"\"\n    ...\n</code></pre> <p>Note</p> <p>Notice, that I'm also using Python3 type annotations to specify parameter and return types.</p> <p>Use the <code>flake8-docstrings</code> plugin to verify all your functions have a docstring.</p> <p>If your project grows larger, you will probably want to create a full-fledged documentation site. You can use Sphinx or the simpler MkDocs to generate the documentation and host the site on Read the docs or GitHub Pages.</p> <p></p>","tags":["python","tooling","validation","testing"]},{"location":"blog/2019/05/26/python-project-maturity-checklist/#add-type-annotations-and-a-mypy-verification-step","title":"\u2611 Add type annotations and a MyPy verification step","text":"<p>Python 3.5 added the option to annotate your code with type information. This is a very useful and clean type of documentation and you should use.</p> <p>For example, <code>my_function</code> below takes a unicode string as an argument and returns a <code>dict</code> of strings mapping to numeric or textual values.</p> <pre><code>def my_function(name: Text) -&gt; Mapping[str, Union[int, float, Text]]:\n    ...\n</code></pre> <p>Mypy is the static type checker for Python. If you type-annotate your code, <code>mypy</code> will run through it and make sure that you're using the right parameter types when calling functions.</p> <pre><code>(my_venv) $ mypy --config-file=tox.ini my_module\nmy_module/main.py:43:27: error: Argument 1 to \"my_function\" has incompatible type \"int\"; expected \"List[str]\"\n</code></pre> <p>You can add a call to <code>mypy</code> to your <code>tox</code> configuration to verify that you're not introducing any type-related mistakes in your commits.</p> <p></p>","tags":["python","tooling","validation","testing"]},{"location":"blog/2019/05/26/python-project-maturity-checklist/#upload-to-github","title":"\u2611 Upload to GitHub","text":"<p>Alright. If you completed all the previous steps and checked all the boxes, your code is ready to be shared with the world!</p> <p>Most open-source projects are hosted on GitHub, so your project should probably join them. Follow these instructions to setup a repo on GitHub and push your project there.</p> <p>Note</p> <p>Microsoft recently acquired GitHub, which makes some people sceptical, if this should still remain the canonical place for open-source projects online. You can consider GitLab as an alternative. So far however, Microsoft have been good stewards of GitHub.</p> <p></p>","tags":["python","tooling","validation","testing"]},{"location":"blog/2019/05/26/python-project-maturity-checklist/#add-readme-and-license-files","title":"\u2611 Add README and LICENSE files","text":"<p>The first thing people see when they visit your project's repository is the contents of the <code>README.md</code> file. GitHub and GitLab do a good job of rendering Markdown-formatted text, so you can include links, tables, pictures, etc.</p> <p>Make sure you have a README file and that it contains information about:</p> <ul> <li>what does your project do?</li> <li>how to use it (with examples)?</li> <li>how can people contribute code to your project?</li> <li>what's the license of the code?</li> <li>links to other relevant documentation</li> </ul> <p>More tips on writing a README here.</p> <p>The other critically important file you should include is <code>LICENSE</code>. Without this file, no one will be able to legally use your code.</p> <p>If you're not sure what license to choose, use the MIT license. It's just 160 words, read it. It's simple and permissive and lets everyone use your code however they want.</p> <p>More info about choosing a license here.</p> <p></p>","tags":["python","tooling","validation","testing"]},{"location":"blog/2019/05/26/python-project-maturity-checklist/#add-a-continuous-integration-service","title":"\u2611 Add a continuous integration service","text":"<p>OK, now that your project is online and you prepared a <code>tox</code> configuration, it's time to set up a continuous integration service. This will run your style-checking, static code analysis and unit-tests on every pull request (PR) made to your repository.</p> <p>There are many CI services available for free for open-source projects. I'm partial to Travis myself, but Circle CI or AppVeyor are commonly used alternatives.</p> <p>Setting up Travis CI for your repository is as simple as adding a hidden YAML configuration file named <code>.travis.yaml</code>. For example, the following installs and runs <code>tox</code> on your project in a Linux virtual machine:</p> .travis.yaml<pre><code>language: python\nos: linux\ninstall:\n  - pip install tox\nscript:\n  - tox\ngit:\n  depth: false\nbranches:\n  only:\n  - \"master\"\ncache:\n  directories:\n    - $HOME/.cache/pip\n</code></pre> <p>All you need to do after commiting <code>.travis.yaml</code> to your repo, is to log into Travis and activate the CI service for your project.</p> <p>Note</p> <p>You can set up branch protection on <code>master</code> to require status checks to pass before a PR can be merged.</p> <p>If you'd like to run your CI on multiple versions of Python or multiple operating systems, you can set up a test matrix like so:</p> .travis.yaml<pre><code>matrix:\n  include:\n  - os: linux\n    sudo: false\n    python: '3.6'\n    script: tox -e py36\n  - os: linux\n    dist: xenial\n    python: '3.7'\n    sudo: true\n    script: tox -e py37\n</code></pre> <p>Travis has fairly good documentation, which explains its many settings with configuration examples. You can test your configuration on a PR, where you modify the <code>.travis.yaml</code> file. Travis will rerun its CI job on every change, so you can tweak settings to your liking.</p> <p>A completed Travis run will look like this example.</p> <p></p>","tags":["python","tooling","validation","testing"]},{"location":"blog/2019/05/26/python-project-maturity-checklist/#add-a-requirements-updater","title":"\u2611 Add a requirements updater","text":"<p>Breaking changes in dependencies are a common problem in all software development. Your code was working just fine a while ago, but if you try to build it today, it fails, because some package it uses changed in an unforeseen way.</p> <p>One way of working around this is to freeze all the dependency versions in your <code>requirements.txt</code> files, but this just puts the problem off into the future.</p> <p>The best way to deal with changing dependencies it to use a service, which periodically bumps versions in your <code>requirements.txt</code> files and creates a pull request with each version change. Your automated CI can test your code against the new dependencies and let you know if you're running into problems.</p> <p>Single package version changes are usually relatively easy to deal with, so you can fix your code, if needed before updating the dependency version. This allows you to painlessly keep track of the changes in all the projects you depend on.</p> <p>I use the PyUp service for this. The service requires no configuration, you just need to sign up using your GitHub credentials and activate it for your repository. PyUp will detect you <code>requirements.txt</code> files and start issuing PRs to keep dependencies up to date with PyPI.</p> <p>Note</p> <p>There are alternative services, which also do a good job of updating dependencies. GitHub recently acquired Dependabot, which works with Python and other languages and is free for all projects (not only open-source).</p> <p></p>","tags":["python","tooling","validation","testing"]},{"location":"blog/2019/05/26/python-project-maturity-checklist/#add-test-coverage-checker","title":"\u2611 Add test coverage checker","text":"<p>Python unit-testing frameworks have the ability to determine which lines and branches of code were hit when running unit tests. This coverage report is very useful, as it lets you know how much of your code is being exercised by tests and which parts are not.</p> <p>If you install the <code>pytest-cov</code> module, you can use the <code>--cov</code> argument to <code>pytest</code> to generate a coverage report.</p> <pre><code>(my_venv) $ pip install pytest pytest-cov\n(my_venv) $ pytest --cov=my_module tests/\n========================== test session starts ==========================\n\ntests/test_main.py ...................................             [100%]\n\n------------ coverage: platform darwin, python 3.7.2-final-0 ------------\nName                     Stmts   Miss  Cover\n--------------------------------------------\nmy_module/__init__.py        0      0   100%\nmy_module/main.py           77     17    78%\nmy_module/utils.py          41      0   100%\n--------------------------------------------\nTOTAL                      118     17    86%\n\n====================== 255 passed in 1.25 seconds =======================\n</code></pre> <p>If you add the <code>--cov-report=html</code> argument, you can generate an HTML version of the coverage report, which you can find in the <code>htmlcov/index.html</code> file after running tests.</p> <pre><code>(my_venv) $ pytest --cov=my_module --cov-report=html tests/\n</code></pre>","tags":["python","tooling","validation","testing"]},{"location":"blog/2019/05/26/python-project-maturity-checklist/#track-test-coverage-over-time","title":"Track test coverage over time","text":"<p>Online services, such as Coveralls or Codecov can track your code coverage with every commit and on every pull request. You can decide not to accept PRs which decrease your code coverage. See an example report here.</p> <p>In order to start using Coveralls, sign up using your GitHub credentials and set up tracking for your repository.</p> <p>You can report your coverage using the <code>coveralls-python</code> package, which provides the <code>coveralls</code> command. You can test it manually by specifying the <code>COVERALLS_REPO_TOKEN</code> environment variable. You can find your token by going to your repository's settings on the Coveralls site.</p> <pre><code>(my_venv) $ pip install coveralls\n(my_venv) $ pytest --cov=my_module --cov-report=html tests/\n(my_venv) $ COVERALLS_REPO_TOKEN=__my_repo_token__ coveralls\nSubmitting coverage to coveralls.io...\nCoverage submitted!\nJob #167.2\nhttps://coveralls.io/jobs/49180746\n</code></pre> <p>When running on Travis, <code>coveralls</code> will be able to detect which repository is being tested, so you don't have to (and shouldn't) put <code>COVERALLS_REPO_TOKEN</code> into your <code>tox.ini</code> file. Instead use the <code>-</code> prefix for the command to allow it fail if you are running <code>tox</code> locally.</p> tox.ini<pre><code>commands=\n  ...\n  pytest --cov=my_module --cov-report=html tests/\n  - coveralls\n</code></pre> <p></p>","tags":["python","tooling","validation","testing"]},{"location":"blog/2019/05/26/python-project-maturity-checklist/#automated-code-review","title":"\u2611 Automated code review","text":"<p>The best thing you can do when working as a team is to thoroughly review each other's code. You should point out any mistakes, parts of code which are difficult to understand or badly documented, or anything else which doesn't quite smell right.</p> <p>If you're working alone, or would like another pair of eyes, you can set up one of the services providing automated code review. These services are still evolving and are not providing a huge value yet, but sometimes they catch something your code linters missed.</p> <p>Setting up a service like Code Climate Quality or Codacy is very simple. Just set up an account using your GitHub credentials, add your repository and configure your preferences.</p> <p>A report can look like this example.</p> <p></p>","tags":["python","tooling","validation","testing"]},{"location":"blog/2019/05/26/python-project-maturity-checklist/#publish-your-project-on-pypi","title":"\u2611 Publish your project on PyPI","text":"<p>So, now you're ready to publish your project on PyPI. This is quite a simple operation, unless your package is larger than 60MB or you selected a name, which is already taken.</p> <p>Before you publish a package, create a release version. Start by bumping your version number to a higher value. Make sure you follow the semantic versioning rules and add the version number to <code>setup.py</code>.</p> <p>The next step is to create a release on GitHub. This will create a tag you can use to look up the code associated with a specific version of your package.</p> <p>Now you'll need to set up an account on the Test version of PyPI.</p> <p>Note</p> <p>You should always start by uploading your package to the test version of PyPI. You should then test your package from test PyPI on multiple environments to make sure it works, before posting it on the official PyPI.</p> <p>Use the following instructions to create your packages and upload them to test PyPI:</p> <pre><code>(my_venv) $ pip install twine\n(my_venv) $ rm -rf dist       # remove previously built packages, if any exist\n(my_venv) $ python setup.py bdist_wheel\n(my_venv) $ python setup.py sdist\n(my_venv) $ twine check dist/*\nChecking distribution dist/my-package-0.2.2-py3-none-any.whl: Passed\nChecking distribution dist/my-package-0.2.2.tar.gz: Passed\n\n(my_venv) $ twine upload --repository-url https://test.pypi.org/legacy/ dist/*\nEnter your username: my_username\nEnter your password:\nUploading distributions to https://test.pypi.org/legacy/\nUploading my_package-0.2.2-py3-none-any.whl\nUploading my-package-0.2.2.tar.gz\n</code></pre> <p>You can now visit your project page on test PyPI under the URL: https://test.pypi.org/project/my-package/</p> <p>Once you test your package thoroughly, you can repeat the same steps for the official version of PyPI. Just change the upload command to:</p> <pre><code>(my_venv) $ twine upload dist/*\n</code></pre> <p>Congratulations, your project is now online and fully ready to be used by the community!</p> <p></p>","tags":["python","tooling","validation","testing"]},{"location":"blog/2019/05/26/python-project-maturity-checklist/#advertise-your-project","title":"\u2611 Advertise your project","text":"<p>OK, you're done. Take to Twitter, Facebook, LinkedIn or wherever else your potential users and contributors may be and let them know about your project.</p> <p>Congratulations and good luck!</p>","tags":["python","tooling","validation","testing"]},{"location":"blog/2019/07/11/from-python-script-to-open-source-project/","title":"From Python script to open-source project","text":"<p>Talk discussing state-of-the-art tools and techniques to convert your script into a full open-source project.</p> <p>Slides for a presentation I gave the EuroPython 2019 conference in Basel, Switzerland.</p>","tags":["open-source","python","tooling","europython"]},{"location":"blog/2019/07/11/from-python-script-to-open-source-project/#abstract","title":"Abstract","text":"<p>The Python community has a rich set of tools which can help verify the quality of your code through automated code-review and linting. You can benefit by taking advantage of this ecosystem. Complete the steps in this checklist, and your project will be easier to maintain, you'll be ready to take contributions from the community and those contributions will be up to high standards. Your project will also keep up with other projects on PyPI and you will be alerted if any new release causes an incompatibility with your code.</p> <p>The same checklist can be used for non open-source projects as well.</p> <p>The project maturity checklist includes:</p> <ul> <li>Properly structure your code</li> <li>Use a setup.py file</li> <li>Add entry_points for your script command</li> <li>Create a requirements.txt file</li> <li>Use Black to format your code</li> <li>Create a tox.ini config and include code linters</li> <li>Set up a Git repo</li> <li>Refactor your code to be unit-testable and add tests</li> <li>Add missing docstrings</li> <li>Add type annotations and a MyPy verification step</li> <li>Upload to GitHub</li> <li>Add a continuous integration service (e.g. Travis)</li> <li>Add a requirements updater (e.g. pyup.bot)</li> <li>Add test coverage checker (e.g. coveralls)</li> <li>Add a Readme file and documentation</li> <li>Publish your project on PyPI</li> <li>Advertise your project</li> </ul>","tags":["open-source","python","tooling","europython"]},{"location":"blog/2019/07/11/from-python-script-to-open-source-project/#talk-recording","title":"Talk recording","text":"","tags":["open-source","python","tooling","europython"]},{"location":"blog/2019/07/11/from-python-script-to-open-source-project/#related-article","title":"Related article","text":"<p>For more information check out this blog post.</p>","tags":["open-source","python","tooling","europython"]},{"location":"blog/2019/07/20/neuroevolution---genetic-algorithms-for-neural-networks/","title":"Neuroevolution - genetic algorithms for neural networks","text":"<p>I recently gave a workshop at the International Summer School on Deep Learning in Gda\u0144sk, Poland.  It was a hands-on introduction to neuroevolution, a technique which attempts to find the optimal architecture and hyperparameters for a neural network using genetic algorithms.</p>","tags":["machine learning","neural networks","genetic algorithms"]},{"location":"blog/2019/07/20/neuroevolution---genetic-algorithms-for-neural-networks/#workshop-exercises","title":"Workshop exercises","text":"<p>You can find materials for the workshop exercises here.</p>","tags":["machine learning","neural networks","genetic algorithms"]},{"location":"blog/2019/07/20/neuroevolution---genetic-algorithms-for-neural-networks/#workshop-recording","title":"Workshop recording","text":"","tags":["machine learning","neural networks","genetic algorithms"]},{"location":"blog/2019/07/20/neuroevolution---genetic-algorithms-for-neural-networks/#references","title":"References","text":"<p>Stanley, K. O., &amp; Miikkulainen, R. (2002). Evolving Neural Networks through Augmenting Topologies. Evolutionary Computation, 10(2), 99\u2013127. doi.org/10.1162/106365602320169811</p> <p>Stanley, K. O., &amp; Miikkulainen, R. (2002). Efficient Evolution of Neural Network Topologies. In Proceedings of the 2002 Congress on Evolutionary Computation, CEC 2002 (Vol. 2, pp. 1757\u20131762). IEEE. doi.org/10.1109/CEC.2002.1004508</p> <p>Stanley, K. O., &amp; Miikkulainen, R. (2002). Efficient Reinforcement Learning Through Evolving Neural Network Topologies. In Proceedings of the Genetic and Evolutionary Computation Conference (GECCO 2002), pp. 569\u2013577. doi.org/10.1109/CEC.2002.1004508</p> <p>Gauci, J., &amp; Stanley, K. O. (2010). Autonomous Evolution of Topographic Regularities in Artificial Neural Networks. Neural Computation, 22(7), 1860\u20131898. doi.org/10.1162/neco.2010.06-09-1042</p> <p>Stanley, K. O., D'Ambrosio, D. B., &amp; Gauci, J. (2009). A Hypercube-Based Encoding for Evolving Large-Scale Neural Networks. Artificial Life, 15(2), 185\u2013212. doi.org/10.1162/artl.2009.15.2.15202</p> <p>Miikkulainen, R., Liang, J., Meyerson, E., Rawal, A., Fink, D., Francon, O., \u2026 Hodjat, B. (2017). Evolving Deep Neural Networks. arxiv.org/abs/1703.00548</p> <p>Zoph, B., &amp; Le, Q. V. (2016). Neural Architecture Search with Reinforcement Learning. arxiv.org/abs/1611.01578</p> <p>Pham, H., Guan, M. Y., Zoph, B., Le, Q. V., &amp; Dean, J. (2018). Efficient Neural Architecture Search via Parameter Sharing. arxiv.org/abs/1802.03268</p> <p>Wistuba, M. (2019). Deep Learning Architecture Search by Neuro-Cell-Based Evolution with Function-Preserving Mutations. In Lecture Notes in Computer Science (Vol. 11052 LNAI, pp. 243\u2013258). doi.org/10.1007/978-3-030-10928-8_15</p> <p>Liang, X., Lin, L., Shen, X., Feng, J., Yan, S., &amp; Xing, E. P. (2017). Interpretable Structure-Evolving LSTM. In Proceedings of the 30th IEEE Conference on Computer Vision and Pattern Recognition (CVPR 2017), pp. 1010\u20131019. doi.org/10.1109/CVPR.2017.234</p>","tags":["machine learning","neural networks","genetic algorithms"]},{"location":"blog/2022/07/14/managing-ml-experiment-configurations-with-hydra/","title":"Managing ML experiment configurations with Hydra","text":"<p>Talk about managing complex data science experiment configurations with Hydra.</p> <p>Slides for a presentation I gave the EuroPython 2022 conference in Dublin, Ireland.</p>","tags":["machine learning","hydra","mlflow","europython"]},{"location":"blog/2022/07/14/managing-ml-experiment-configurations-with-hydra/#abstract","title":"Abstract","text":"<p>Data science experiments have a lot of moving parts. Datasets, models, hyperparameters all have multiple knobs and dials. This means that keeping track of the exact parameter values can be tedious or error prone.</p> <p>Thankfully you're not the only ones facing this problem and solutions are becoming available. One of them is Hydra from Meta AI Research. Hydra is an open-source application framework, which helps you handle complex configurations in an easy and elegant way. Experiments written with Hydra are traceable and reproducible with minimal boilerplate code.</p> <p>In my talk I will go over the main features of Hydra and the OmegaConf configuration system it is based on. I will show examples of elegant code written with Hydra and talk about ways to integrate it with other open-source tools such as MLFlow.</p>","tags":["machine learning","hydra","mlflow","europython"]},{"location":"blog/2022/07/14/managing-ml-experiment-configurations-with-hydra/#talk-recording","title":"Talk recording","text":"","tags":["machine learning","hydra","mlflow","europython"]},{"location":"blog/2023/07/20/neural-network-architectures-of-llms-and-diffusion-models/","title":"Neural network architectures of LLMs and Diffusion Models","text":"<p>Talk discussing architectures of generative neural networks: Large Language Models and Diffusion Models.</p> <p>Slides for a presentation I gave the EuroPython 2023 conference in Prague, Czechia.</p>","tags":["neural networks","attention","diffusion","GenAI","LLM","europython"]},{"location":"blog/2023/07/20/neural-network-architectures-of-llms-and-diffusion-models/#abstract","title":"Abstract","text":"<p>Neural networks have revolutionized AI, enabling machines to learn from data and make intelligent decisions. In this talk, we'll explore two popular architectures: Attention models and Diffusion models.</p> <p>First up, we'll discuss Attention models and how they've contributed to the success of large language models like ChatGPT. We'll explore how the Attention mechanism helps GPT focus on specific parts of a text sequence and how this mechanism has been applied to different tasks in natural language processing.</p> <p>Next, we'll dive into Diffusion models, a class of generative models that have shown remarkable performance in image synthesis. We'll explain how they work and their potential applications in the creative industry.</p> <p>By the end of the talk, you'll have a better understanding of these cutting-edge neural network architectures.</p>","tags":["neural networks","attention","diffusion","GenAI","LLM","europython"]},{"location":"blog/2023/07/20/neural-network-architectures-of-llms-and-diffusion-models/#talk-recording","title":"Talk recording","text":"","tags":["neural networks","attention","diffusion","GenAI","LLM","europython"]},{"location":"blog/2000/04/15/hipoteza-gai/","title":"Hipoteza Gai","text":"<p>By\u0142a, jest i b\u0119dzie obrazem absolutnego pi\u0119kna. Jest tworem doskona\u0142ym, \u017cywio\u0142em w makroskali, ogniem syntezy, podzielnym atomem. Oczy jej to gwiazdy, galaktyki to jej cia\u0142o, z gracj\u0105 obracaj\u0105ce si\u0119 w jedenastu wymiarach czasoprzestrzeni. Na imi\u0119 jej Kosmos.</p> <p>Pi\u0119kna i niesko\u0144czona a\u017c po swe granice, jest brzemienna - w jej stelarnym \u0142onie p\u0105czkuje \u017cycie. W mineralnym bezkresie budzi si\u0119 samoreplikuj\u0105cy tw\u00f3r, kt\u00f3ry potrafi przezwyci\u0119\u017cy\u0107 jednokierunkowo\u015b\u0107 strza\u0142ki czasu, odwr\u00f3ci\u0107 prawa rosn\u0105cego chaosu i przekaza\u0107 informacj\u0119 o sobie przysz\u0142o\u015bci.</p> <p>W ten spos\u00f3b \u017cycie pope\u0142nia grzech pierworodny - samym swoim istnieniem, swoj\u0105 istot\u0105 sprzeciwia si\u0119 swojej matce, swojej stw\u00f3rczyni. Kosmos istnia\u0142a by istnie\u0107 m\u00f3g\u0142 chaos, by wzrasta\u0107 m\u00f3g\u0142 nieporz\u0105dek, a swej niesko\u0144czonej tw\u00f3rczej wenie wykreowa\u0142a byt, kt\u00f3ry tej podstawie si\u0119 sprzeciwi\u0142. Byt, kt\u00f3ry uparcie \u017cyje wbrew czasowi. \u017bycie to czas p\u0142yn\u0105cy wstecz we wszech\u015bwiecie czasu rosn\u0105cej entropii.</p> <p>Wirion. Doskona\u0142y tw\u00f3r antyenrtopijnej informatyki. Jak ka\u017cde inne \u017cycie, sk\u0142ada si\u0119 z informacji i otaczaj\u0105cej j\u0105 tarczy samozachowawczej. Kto powie, \u017ce jego \u017cywotno\u015b\u0107 mo\u017ce by\u0107 kwestionowana na podstawie braku samowystarczalno\u015bci, wskazuje jedynie na swoj\u0105 ignorancj\u0119, lub heterotroficzn\u0105 nie\u017cywotno\u015b\u0107. Czym jest \u017cycie je\u015bli nie bezwzgl\u0119dnym d\u0105\u017ceniem do przeciwstawienia si\u0119 tymczasowo\u015bci.</p> <p>Czym jest \u017cycie je\u015bli nie informacj\u0105, kt\u00f3rej jedyn\u0105 gwarancj\u0105 istnienia, zar\u00f3wno w czasie jak i przestrzeni, jest replikacja. Prowadzimy \u017cycie i\u015bcie wirusie. Jeste\u015bmy infekcj\u0105, kt\u00f3rej uleg\u0142a Kosmos. Kt\u00f3rej uleg\u0142a Gaja.</p> <p>Gaja - ogr\u00f3d porz\u0105dku, oaza \u0142adu. Pi\u0119kna, dynamiczna homeostaza - Eden. To tu dojrza\u0142 wirus informacji, przybra\u0142 jednolit\u0105 form\u0119 i nazwa\u0142 j\u0105 bosk\u0105. W swej niesamowitej ignorancji stworzy\u0142 Boga i w\u0142o\u017cy\u0142 w jego usta s\u0142owa. W swojej bosko-ludzkiej schizofrenii wm\u00f3wi\u0142 sobie, \u017ce jego matka jest jego w\u0142asno\u015bci\u0105 i ma ni\u0105 rozporz\u0105dza\u0107 wedle w\u0142asnego uznania.</p> <p>Niestety wypowiedziawszy te s\u0142owa B\u00f3g skona\u0142. Nie pozostawi\u0142 po sobie niczego boskiego, a jedynie ludzkie twory \u017c\u0105dne ludzkich uciech - szcz\u0119\u015bcia, w\u0142adzy, pieni\u0119dzy. Ludzie.</p> <p>Nie kochaj\u0105 swojej matki, nie czcz\u0105 jej. Uznali j\u0105 za tw\u00f3r podrz\u0119dny, po kt\u00f3rym si\u0119 st\u0105pa. Nie pr\u00f3buj\u0105 jej zrozumie\u0107, pos\u0142ucha\u0107, odnale\u017a\u0107 jej skr\u0119powanej, zaniedbanej duszy. Uznali j\u0105 za trwalsz\u0105 od nich i stali si\u0119 bezwzgl\u0119dnymi, obligatoryjnymi paso\u017cytami.</p> <p>Musz\u0105 zauwa\u017cy\u0107, \u017ce nie Ziemia jest cz\u0119\u015bci\u0105 nich, ale oni cz\u0119\u015bci\u0105 Ziemi.</p>"},{"location":"blog/2001/03/15/questions-without-answers/","title":"Questions without Answers","text":"<p>If we base our belief systems on the humble assumption that the complexities of the world are ontologically beyond our understanding, then maybe our belief systems will make more sense and end up causing less suffering. -MOBY</p> <p>Do questions seek answers or do answers spawn questions? Whichever way it is people have always strived to explain the world around them. Never in history have they come to a consensus and the reason for this is simple. There is NO universal key insight into existence which could elucidate reality.</p> <p>There are no universal, self-sufficient truths and values, except maybe for the Decalogueian few accepted by most cultures. Even these however are put into question, as proven by growing acceptance of abortion and euthanasia, despite the most basic rule 'do not kill'.</p> <p>The truth is, there is no absolute system which can lead people through life. Various have been created, embodied in the numerous mythologies and theologies, but the only success they had was the slaughter of nonbelievers and destruction of their monuments.</p> <p>The only way to unite people is to make them understand, that some questions may not be answered, in a way which is universally valid. People may of course hold their own beliefs but they should not impose them on others. I myself am especially fond of the scientific method, because it doesn't accept anything a priori. It humbly creates testable hypotheses and examines them. They are rejected if they fail and if they don't, they become accepted to be true. All scientific truth is transitory, lasting only until a better (simpler or more exact) hypothesis is made or contradictory evidence arises.</p> <p>Science, by definition however, may not address some questions. Questions such as: what happens after death?, what lies outside of the universe?, what happened before time started? lie beyond the scope of cognition. These problems are untestable, therefore the only answer to them is: There is no answer. Some people reject this and to them I say: Afterlife is orange... It's as good an answer as any.</p> <p>There is no way of rejecting the scientific method and the conclusions it provides without overstepping Arystotelian logic. This does not mean that what science states has any claim to the Truth. After all we may all be disembodied brains in dusty jars hidden away in an old God's attic.</p>"},{"location":"blog/2001/05/15/jak-poznaje-swiat/","title":"Jak poznaj\u0119 \u015bwiat?","text":""},{"location":"blog/2001/05/15/jak-poznaje-swiat/#potrzeba-oparcia","title":"Potrzeba oparcia","text":"<p>Jak ka\u017cdy chyba, chc\u0119 pozna\u0107 \u015bwiat, w kt\u00f3rym \u017cyj\u0119. Gromadzenie wiedzy o nim doprowadzi\u0142o mnie jednak w pewnym momencie do wniosku, \u017ce bardzo wiele kwestii jest r\u00f3\u017cnie opisywanych przez r\u00f3\u017cnych ludzi, wiele informacji zdaje si\u0119 by\u0107 wzgl\u0119dnymi. Istnienie sprzecznych ze sob\u0105 informacji na jeden temat prowadzi do wniosku, \u017ce kto\u015b musi si\u0119 myli\u0107. W ko\u0144cu musi istnie\u0107 jaka\u015b jedna prawda, nie mog\u0105 istnie\u0107 r\u00f3\u017cne prawdy jednocze\u015bnie.</p> <p>Ta konkluzja prowadzi\u0142a mnie do systematycznego poszukiwania wszelkich dogmat\u00f3w i odrzucania ich. Chcia\u0142em stworzy\u0107 system prawdy, kt\u00f3ry nie opiera\u0142by si\u0119 na \u017cadnych wyssanych z palca za\u0142o\u017ceniach, a jedynie na tym czego mo\u017cemy by\u0107 pewni. W pierwszej kolejno\u015bci odrzuci\u0142em systemy religijne, nast\u0119pnie wszystkie teorie b\u0119d\u0105ce irracjonalnymi, i wszystko co zawiera\u0142o wewn\u0119trzn\u0105 sprzeczno\u015b\u0107 logiczn\u0105 lub niepewno\u015b\u0107, kt\u00f3rej nie mo\u017cna by\u0142o usun\u0105\u0107 drog\u0105 weryfikacji. Pozosta\u0142y mi matematyka, logika oraz w\u0142asne do\u015bwiadczenia.</p> <p>Kt\u00f3rego\u015b razu rozmawiaj\u0105c ze znajomymi opowiedzia\u0142em im o moich poszukiwaniach. M\u00f3j przyjaciel zada\u0142 mi jednak pytanie, kt\u00f3re mnie zaskoczy\u0142o - 'A sk\u0105d wiesz, \u017ce to co widzisz jest prawdziwe? Mo\u017ce, ja to widz\u0119 inaczej?'. U\u015bwiadomi\u0142em sobie, \u017ce nawet te, nie kwestionowane na og\u00f3\u0142 przez ludzi racjonalnych warto\u015bci nie s\u0105 pewne. Nawet logika wymaga pewnych za\u0142o\u017ce\u0144, ba... nawet stwierdzenie, \u017ce widz\u0119 rzeczywisto\u015b\u0107 ich wymaga.</p> <p>Teoretycznie rzecz ujmuj\u0105c, gdyby wszczepi\u0107 cz\u0142owiekowi do pnia nerwowego odpowiedni\u0105 ilo\u015b\u0107 elektrod sterowanych przez pot\u0119\u017cny komputer mo\u017cna sprawi\u0107, by prze\u017cywa\u0142 on \u015bwiat istniej\u0105cy tylko w programie komputera. Co interesuj\u0105ce, gdyby program by\u0142 wystarczaj\u0105co dobrze opracowany nasz badany nigdy i w \u017caden spos\u00f3b nie m\u00f3g\u0142by sprawdzi\u0107, \u017ce jego \u015bwiat jest jedynie symulacj\u0105 [1].</p> <p>Mo\u017cliwe staje si\u0119 zatem nawet kwestionowanie prawdy tego co stanowi nasze jedyne po\u0142\u0105czenie ze \u015bwiatem - naszych dozna\u0144 zmys\u0142owych, a co za tym idzie - kwestionowanie realno\u015bci \u015bwiata. C\u00f3\u017c nam wtedy pozostaje? Jedyne, czego chyba w \u017caden spos\u00f3b nie mog\u0119 podda\u0107 w w\u0105tpliwo\u015b\u0107 to to, \u017ce istniej\u0119. Moja \u015bwiadomo\u015b\u0107 jest tak silnie obecna, \u017ce nawet gdyby wszystko co mnie otacza odesz\u0142o w niebyt, ja nadal mia\u0142bym swoje my\u015bli. A skoro my\u015bl\u0119, wi\u0119c jestem.</p>"},{"location":"blog/2001/05/15/jak-poznaje-swiat/#jak-najmniej-zaozen","title":"Jak najmniej za\u0142o\u017ce\u0144","text":"<p>Okaza\u0142o si\u0119, \u017ce nie mog\u0119 stworzy\u0107 systemu prawdy pozbawionego jakichkolwiek za\u0142o\u017ce\u0144, wi\u0119c zdecydowa\u0142em si\u0119 przyj\u0105\u0107 jedno, kt\u00f3re zreszt\u0105 przyjmuj\u0105 wszyscy poza solipsystami [2]. Moim za\u0142o\u017ceniem jest to, \u017ce \u015bwiat istnieje. Jako\u015b\u0107 jego istnienia jest dla mnie nie istotna, czy jest to symulacja komputerowa, czy \u015bwiat rzeczywisty, jest on dla mnie jedynym i realnym.</p> <p>Wszystkie pozosta\u0142e informacje jakie posiadam maj\u0105 dla mnie status teorii wysuwanych na podstawie obserwacji \u015bwiata. Do najwa\u017cniejszych z nich nale\u017c\u0105 logika i matematyka.</p> <p>W\u0142a\u015bciwie wydaje si\u0119 to naturalne, \u017ce matematyka wywodzi si\u0119 z obserwacji \u015bwiata, ale zatrzymam si\u0119 tu na chwil\u0119. Z obserwacji, \u017ce dwa kamienie i dwa kamienie to cztery kamienie, a nast\u0119pnie wyabstrahowaniu tej w\u0142a\u015bciwo\u015bci od wszystkich zbior\u00f3w dwu kamieni, ludzi i dowolnych innych zbior\u00f3w dwuelementowych tworzymy teori\u0119: 2+2=4. Ta teoria za ka\u017cdym razem si\u0119 sprawdza. Podobnie prawa logiki, takie jak to\u017csamo\u015b\u0107 rzeczy samej ze sob\u0105, wykluczenie jednoczesnego istnienia dwu sprzeczno\u015bci, etc., potwierdzaj\u0105 si\u0119 w codziennej praktyce. Przez to zdecydowa\u0142em przyj\u0105\u0107 te teorie za baz\u0119 (narz\u0119dzia) do wysuwania i pr\u00f3bowania innych hipotez.</p>"},{"location":"blog/2001/05/15/jak-poznaje-swiat/#empiryzm","title":"Empiryzm","text":"<p>Wspomnia\u0142em ju\u017c kr\u00f3tko o subiektywno\u015bci ludzkiej obserwacji \u015bwiata. Ka\u017cdy cz\u0142owiek patrzy przez pryzmat swoich do\u015bwiadcze\u0144, oraz (co nawet wa\u017cniejsze) emocji. Powoduje to, \u017ce jego obserwacja mo\u017ce odbiega\u0107 znacznie od obserwacji innego cz\u0142owieka, o innym stosunku emocjonalnym do obserwowanego obiektu. Klasycznym przyk\u0142adem takich rozwa\u017ca\u0144 jest kwestia okre\u015blenia koloru lub smaku badanego obiektu. R\u00f3\u017cni ludzie mog\u0105 te warto\u015bci odbiera\u0107 inaczej, np. ten sam smak mo\u017ce si\u0119 jednej osobie wydawa\u0107 s\u0142odki i przyjemny, innej md\u0142y i przykry. Barwy, d\u017awi\u0119ki, temperatura i wszystkie inne cechy naszego otoczenia podlegaj\u0105 takiej samej subiektywizacji w akcie percepcji.</p> <p>Poza tym zmys\u0142y ludzkie mog\u0105 okre\u015bla\u0107 np. temperatur\u0119 jedynie w kategoriach por\u00f3wnawczych - zimniejszy, cieplejszy, a nie w kategoriach liczbowych. Te nie obiektywne, wzgl\u0119dne dane nie mog\u0105, si\u0142\u0105 rzeczy by\u0107 podstaw\u0105 do odkrywania prawdy o \u015bwiecie. </p> <p>Z tego wzgl\u0119du pos\u0142ugujemy si\u0119 instrumentami badawczymi. Urz\u0105dzenia, w odr\u00f3\u017cnieniu od percepcji s\u0105 cz\u0119\u015bci\u0105 badanego \u015bwiata i nie maj\u0105 do niego \u017cadnego stosunku emocjonalnego. Dobrze skonstruowana suwmiarka za ka\u017cdym razem pokazuje ten sam wynik, dok\u0142adnie taki sam jak ka\u017cda inna podobnie przygotowana suwmiarka na ca\u0142ym \u015bwiecie. Wynik ten nie tylko jest powtarzalny, ale r\u00f3wnie\u017c liczbowy i bezwzgl\u0119dny.</p> <p>Jest jeszcze jeden wa\u017cny pow\u00f3d dla kt\u00f3rego pos\u0142ugiwanie si\u0119 instrumentami badawczymi jest konieczne. Rozwa\u017cmy zmys\u0142 wzroku. Dzi\u0119ki naszym oczom potrafimy obserwowa\u0107 widzialn\u0105 cz\u0119\u015b\u0107 spektrum elektromagnetycznego. Ca\u0142o\u015b\u0107 tego spektrum rozci\u0105ga si\u0119 mi\u0119dzy 10<sup>-14</sup> m a 10<sup>7</sup> m. \u015awiat\u0142o, kt\u00f3re obserwujemy zawiera si\u0119 w przedziale 5 * 10<sup>-7 </sup>m - 7 * 10<sup>-7 </sup>m, jest wi\u0119c dos\u0142ownie znikome. Podobnie wygl\u0105da sytuacja dotycz\u0105ca odleg\u0142o\u015bci; nieuzbrojone oko nie potrafi obserwowa\u0107 ani bardzo ma\u0142ych, ani bardzo du\u017cych obiekt\u00f3w.</p> <p>Dla mnie empiryzm jest nie tylko najlepszym, ale r\u00f3wnie\u017c jedynym sposobem na w miar\u0119 obiektywn\u0105 obserwacj\u0119 \u015bwiata.</p>"},{"location":"blog/2001/05/15/jak-poznaje-swiat/#metoda-naukowa","title":"Metoda naukowa","text":"<p>W pe\u0142nej zgodzie z moimi  za\u0142o\u017ceniami pozostaje tak zwana metoda naukowa, czyli spos\u00f3b odkrywania \u015bwiata oparty na obserwacjach i wysuwaniu na ich podstawie hipotez. W nauce \u017cadna zasada ani nawet prawo nie jest przyjmowane za ostatecznie prawdziwe. Ca\u0142a nauka stanowi jedynie zbi\u00f3r najlepszych spo\u015br\u00f3d stworzonych dotychczas teorii.</p> <p>Aby teoria zas\u0142ugiwa\u0142a na miano naukowej musi ona spe\u0142nia\u0107 trzy warunki. Po pierwsze musi pozostawa\u0107 w zgodzie z obserwacjami, a po drugie nie mo\u017ce zawiera\u0107 wewn\u0119trznej sprzeczno\u015bci logicznej. Trzeci warunek jest moim zdaniem najwa\u017cniejszy, gdy\u017c cz\u0119sto si\u0119 o nim zapomina. Ka\u017cda hipoteza musi by\u0107 falsyfikowalna, dzi\u0119ki czemu staje si\u0119 mo\u017cliwe jej obalenie. Hipotezy, kt\u00f3rych nie da si\u0119 obali\u0107 nie mog\u0105 pretendowa\u0107 do miana prawdy, gdy\u017c mog\u0105 g\u0142osi\u0107 praktycznie wszystko, a ich s\u0142uszno\u015bci, tudzie\u017c braku wykaza\u0107 si\u0119 nie da. W tych kategoriach teoria 2+2=4 jest dobr\u0105 teori\u0105 naukow\u0105, gdy\u017c gdyby kiedykolwiek uda\u0142o si\u0119 wykaza\u0107 \u017ce dwie odr\u0119bne jednostki i dwie inne odr\u0119bne jednostki nie stanowi\u0105 czterech, to teori\u0119 mo\u017cna by odrzuci\u0107. Z drugiej strony stwierdzenie 'B\u00f3g istnieje' nie jest falsyfikowaln\u0105 teori\u0105. Przes\u0142anie zawarte w tym zdaniu mo\u017ce by\u0107 r\u00f3wnie dobrze prawdziwe jak i fa\u0142szywe i w \u017caden spos\u00f3b nie da si\u0119 zweryfikowa\u0107.</p> <p>W miar\u0119 jak na podstawie obserwacji i istniej\u0105cych ju\u017c teorii, naukowcy buduj\u0105 nowe, powstaj\u0105 coraz bardziej z\u0142o\u017cone modele. Model taki b\u0119d\u0105cy logicznym wyprowadzeniem wniosk\u00f3w z teorii musi pos\u0142ugiwa\u0107 si\u0119 aparatem matematycznym. Ka\u017cdy model upraszcza rzeczywisto\u015b\u0107, ale by to osi\u0105gn\u0105\u0107 konieczne jest wyeliminowanie wielu czynnik\u00f3w wp\u0142ywaj\u0105cych na dan\u0105 sytuacj\u0119 w realnym \u015bwiecie. Bardzo cz\u0119sto wp\u0142ywu danej okoliczno\u015bci nie da si\u0119 w pe\u0142ni usun\u0105\u0107 i trzeba go w\u0142\u0105czy\u0107 do teorii jako warto\u015b\u0107 zmienn\u0105. Warto\u015bci te musz\u0105 by\u0107 opisane nie tylko jako\u015bciowo, ale r\u00f3wnie\u017c ilo\u015bciowo, poniewa\u017c w przeciwnym razie wyci\u0105ganie wniosk\u00f3w z modelu i testowanie hipotez staje si\u0119 jedynie spekulacj\u0105. Dopiero zastosowanie \u015bci\u015ble okre\u015blonych warto\u015bci wszystkich zmiennych pozwala jednoznacznie okre\u015bli\u0107 czy model znajduje odwzorowanie w rzeczywisto\u015bci.</p>"},{"location":"blog/2001/05/15/jak-poznaje-swiat/#granice-poznania","title":"Granice poznania","text":"<p>Kwesti\u0119 granic poznania chcia\u0142bym om\u00f3wi\u0107 z dwu perspektyw. Po pierwsze, istnieje pewne wbudowane ograniczenie metody naukowej, na kt\u00f3re ju\u017c zwr\u00f3ci\u0142em uwag\u0119 - mianowicie nie mo\u017cna uj\u0105\u0107 naukowo niczego, co nie jest sprawdzalne [3]. M\u00f3wi\u0142em ju\u017c o problemie jaki sprawia pytanie o istnienie Boga, ale jest tych pyta\u0144 znacznie wi\u0119cej: co si\u0119 dzieje z nami po \u015bmierci?, co le\u017cy poza granicami naszego wszech\u015bwiata?, co si\u0119 wydarzy\u0142o 'zanim' zacz\u0105\u0142 istnie\u0107 czas?, etc.</p> <p>\u017badna teoria wystawiona w odpowiedzi na te pytania nie b\u0119dzie weryfikowalna, wi\u0119c wszystkie mo\u017cemy uzna\u0107 za r\u00f3wnie prawdziwe lub r\u00f3wnie fa\u0142szywe. Z mojego punktu widzenia na te pytania po prostu nie ma odpowiedzi. Wed\u0142ug mnie mo\u017cemy \u017cy\u0107 spokojniej, je\u015bli to zaakceptujemy.</p> <p>Drugi aspekt granic poznania jest du\u017co mniej uniwersalny, poniewa\u017c dotyczy poznania indywidualnego. W miar\u0119 jak zdobywamy wiedz\u0119, rozszerzaj\u0105 si\u0119 nasze horyzonty! Brzmi to jak banalny truizm, ale ma powa\u017cne konsekwencje. Aby je zobrazowa\u0107 pos\u0142u\u017c\u0119 si\u0119 ilustracj\u0105. Wyobra\u017amy sobie, \u017ce ca\u0142kowita ilo\u015b\u0107 wiedzy to olbrzymia, ciemna przestrze\u0144, kt\u00f3r\u0105 roz\u015bwietlamy w miar\u0119 poznawania. W pocz\u0105tkowym momencie naszych poszukiwa\u0144 przestrze\u0144, kt\u00f3r\u0105 rozja\u015bniamy jest ma\u0142a i stopniowo ro\u015bnie. Gdzie ko\u0144czy si\u0119 zasi\u0119g naszego \u015bwiat\u0142a widzimy czer\u0144 niewiedzy, a w miar\u0119 jak ro\u015bnie obj\u0119to\u015b\u0107 naszej m\u0105dro\u015bci ro\u015bnie te\u017c powierzchnia tej czerni. W dotychczasowej historii ludzko\u015bci wiele ciemno\u015bci ju\u017c zosta\u0142o o\u015bwieconej, wi\u0119c mo\u017cemy zobaczy\u0107 ogrom niezg\u0142\u0119bionej przestrzeni jaka nas otacza.</p> <p>Niestety nie mo\u017cemy posi\u0105\u015b\u0107 ca\u0142kowitej wiedzy o \u015bwiecie, wi\u0119c musimy w \u017cyciu przyj\u0105\u0107 jedn\u0105 z dwu postaw, kt\u00f3re nazwa\u0142em obrazowo kul\u0105 i szpikulcem. Kula to taka osoba, kt\u00f3ra tocz\u0105c si\u0119 po powierzchni niewiedzy, stara si\u0119 rozsun\u0105\u0107 jej granice r\u00f3wnomiernie w ka\u017cdym kierunku. Taka osoba w moim modelu przypomina planet\u0119 odbijaj\u0105c\u0105 \u015bwiat\u0142o gwiazd, potrafi ona wspaniale przekazywa\u0107 wiedz\u0119 dzieciom i idealnie komunikuje si\u0119 z innymi kulami.</p> <p>W odr\u00f3\u017cnieniu od kuli szpikulec, to osoba, kt\u00f3ra na horyzoncie niewiedzy obiera sobie jeden lub kilka punkt\u00f3w i dr\u0105\u017cy je do granic swoich mo\u017cliwo\u015bci, zaniedbuj\u0105c pozosta\u0142e obszary. Taka osoba przypomina wieloramienn\u0105 gwiazd\u0119, kt\u00f3ra \u015bwieci na otaczaj\u0105ce j\u0105 planety przekazuj\u0105c im energi\u0119 informacji. To w\u0142a\u015bnie takie osoby mog\u0105 posuwa\u0107 post\u0119p naukowy, to one specjalizuj\u0105 si\u0119 w swoim w\u0105skim polu, oddaj\u0105c \u017cycie przesuwaniu granic ludzkiej wiedzy jeszcze dalej w obszary ciemno\u015bci. Takie osoby niestety porozumie\u0107 si\u0119 mog\u0105 dobrze tylko z innymi szpikulcami i to skierowanymi w podobnym kierunku. Ich \u017cycie wydaje mi si\u0119 po\u015bwi\u0119ceniem, ale dla najszczytniejszego z mo\u017cliwych cel\u00f3w.</p>"},{"location":"blog/2001/05/15/jak-poznaje-swiat/#swiat-subiektywny","title":"\u015awiat subiektywny","text":"<p>Dochodzimy wreszcie do celu, ku kt\u00f3remu prowadzi\u0142em te majacz\u0105ce rozmy\u015blania. \u015awiat obiektywny jest fascynuj\u0105cy i najprawdopodobniej przeznacz\u0119 swoje \u017cycie na zg\u0142\u0119bianie jego tajemnic, ale nie jest to \u015bwiat, w kt\u00f3rym my \u017cyjemy.</p> <p>Ludzie s\u0105 intelektualnie najwy\u017cej rozwini\u0119tym gatunkiem na naszej planecie. Dzi\u0119ki naszym rozwini\u0119tym m\u00f3zgom potrafimy postrzega\u0107 \u015bwiat jako pewn\u0105 rzeczywisto\u015b\u0107 w kt\u00f3rej istniejemy. Mo\u017cemy w my\u015blach odseparowa\u0107 w\u0142asne ja od otoczenia [4] - mamy \u015bwiadomo\u015b\u0107.</p> <p>Prostsze zwierz\u0119ta postrzegaj\u0105 \u015bwiat jedynie jak zbi\u00f3r bod\u017ac\u00f3w, kt\u00f3re mog\u0105 by pozytywne, lub negatywne i wywo\u0142ywa\u0107 okre\u015blone reakcje. Bod\u017ace neutralne nie istniej\u0105 dla nich w og\u00f3le, np. je\u015bli grupa zwierz\u0105t mieszka blisko lotniska, to ca\u0142kowicie ignoruje samoloty nie stanowi\u0105ce dla nich ani zagro\u017cenia, ani potencjalnej korzy\u015bci. Takie postrzeganie \u015bwiata jedynie poprzez odbi\u00f3r r\u00f3\u017cnorakich stymuli wydaje mi si\u0119 by\u0107 charakterystyczny dla istot pozbawionych samo\u015bwiadomo\u015bci. Ich reakcje przebiegaj\u0105 na zasadzie automatycznej, dzi\u0119ki prostym o\u015brodkom nerwowym.</p> <p>Ludzie na drodze ewolucji zachowali starsze ewolucyjnie struktury m\u00f3zgowe, dlatego r\u00f3wnie\u017c do\u015bwiadczamy pewnych zwierz\u0119cych bod\u017ac\u00f3w i instynkt\u00f3w. Jest to na przyk\u0142ad powodem irracjonalnej obawy przed ciemno\u015bci\u0105 lub nag\u0142ym ha\u0142asem. Dla nas jednak, te bod\u017ace maj\u0105 inn\u0105 struktur\u0119, docieraj\u0105 do \u015bwiadomo\u015bci, wp\u0142ywaj\u0105 na ni\u0105 i wywo\u0142uj\u0105 r\u00f3\u017cne stany emocjonalne. Nasz strach to ju\u017c nie tylko dyrektywa: uciekaj!; jest to raczej pewien stan duchowy, zmieniaj\u0105cy to jak postrzegamy rzeczywisto\u015b\u0107 - w ciemno\u015bci ka\u017cdy cie\u0144 przybiera z\u0142owrogie kszta\u0142ty.</p> <p>Og\u00f3lnie rzecz ujmuj\u0105c, te r\u00f3\u017cne stany zmieniaj\u0105ce nasz\u0105 percepcj\u0119 \u015bwiata to nasze emocje. Dlatego emocje s\u0105 tak cz\u0119sto irracjonalne, wynikaj\u0105 one ze zderzenia naszych dwu sprzecznych rzeczywisto\u015bci - tej, o kt\u00f3rej wiemy, \u017ce istnieje poza nami oraz tej zwierz\u0119cej. Trudno jest odci\u0105\u0107 od emocji, praktycznie zawsze nam towarzysz\u0105 zmieniaj\u0105c nasz obraz \u015bwiata. </p> <p>Ta emocjonalna perspektywa to w\u0142a\u015bnie nasz ludzki subiektywny \u015bwiat, kt\u00f3ry nigdy nie pokrywa si\u0119 w pe\u0142ni ze \u015bwiatem obiektywnym, badaniem kt\u00f3rego zajmuje si\u0119 nauka. Jedynym sposobem przedstawienia tego \u015bwiata jest odwo\u0142anie si\u0119 do sztuki. Niezale\u017cnie od rodzaju i gatunku - czy jest to malarstwo, rze\u017aba, muzyka, teatr; czy przedstawia ona pewne odbicie rzeczywisto\u015bci, czy jest czyst\u0105 abstrakcj\u0105 to w\u0142a\u015bnie sztuka odwo\u0142uje si\u0119 do naszych stan\u00f3w emocjonalnych. Nawet tak, zdawa\u0142oby si\u0119, obiektywna forma sztuki jak\u0105 jest fotografia, okazuje si\u0119 by\u0107 pi\u0119kna, przejmuj\u0105ca, przera\u017caj\u0105ca lub smutna. Arty\u015bci pobudzaj\u0105 w nas to co czyni nas lud\u017ami, pozwalaj\u0105 ujrze\u0107 \u015bwiat z innej emocjonalnej perspektywy, cz\u0119sto nie narzucaj\u0105c tre\u015bci [5]. </p> <p>Sztuka, odbierana przez ka\u017cdego z nas inaczej, pozwala ujrze\u0107 \u015bwiat, z w\u0142asnej, ludzkiej perspektywy i w ten spos\u00f3b pozna\u0107 samego siebie.</p>"},{"location":"blog/2001/05/15/jak-poznaje-swiat/#_1","title":"* * *","text":"<p>Jak ju\u017c wspomnia\u0142em, wszelkie informacje o \u015bwiecie, kt\u00f3re odbieramy za pomoc\u0105 zmys\u0142\u00f3w przechodz\u0105 przez subiektywny filtr naszych emocji. Najprostszym przyk\u0142adem tego zjawiska, jest subiektywizacja poprzez nastawienie. Je\u015bli jeste\u015bmy g\u0142odni, to jedzenie wyda nam si\u0119 atrakcyjne, b\u0119dziemy pragn\u0119li je zdoby\u0107. W skrajnych sytuacjach, zbawie\u0144cz\u0105 mo\u017ce wyda\u0107 si\u0119 strawa, kt\u00f3rej w innych okoliczno\u015bciach by\u015bmy nie tkn\u0119li. Praktycznie w ka\u017cdych okoliczno\u015bciach nasze doznania obiektywnego \u015bwiata przechodz\u0105 przez filtr ni\u017cszych o\u015brodk\u00f3w nerwowych [6]. Innym przyk\u0142adem mo\u017ce by\u0107 strach. Cz\u0119sto boimy si\u0119 rzeczy, kt\u00f3re w rzeczywisto\u015bci strasznymi nie s\u0105. Ciemno\u015b\u0107, szepty w oddali, nieznane, zbli\u017caj\u0105ce si\u0119 kroki, nag\u0142y huk... to wszystko sztuczki, kt\u00f3re wykorzystuj\u0105 specjali\u015bci by nas wystraszy\u0107. Czy jest jakikolwiek sens obawy przed filmem? </p> <p>Te irracjonalne odczucia uniemo\u017cliwiaj\u0105 nam prowadzenie obiektywnej obserwacji \u015bwiata. Mo\u017cna by powiedzie\u0107, \u017ce czyni\u0105 nas w pewien spos\u00f3b u\u0142omnymi - nie pozwalaj\u0105 nam spojrze\u0107 z dystansu na \u015bwiat i na samych siebie. Daj\u0105 nam one jednak co\u015b w zamian, co\u015b co czyni nas lud\u017ami, czyli uczucia wy\u017csze. To w\u0142a\u015bnie te emocje pozwalaj\u0105 nam spojrze\u0107 na \u015bwiat z naszej prawdziwej perspektywy. One pozwalaj\u0105 nam zachwyci\u0107 si\u0119 tym co widzimy, pokocha\u0107 i znienawidzi\u0107. Ludzie, kt\u00f3rzy skupiaj\u0105 si\u0119 na uczuciach potrafi\u0105 za ich pomoc\u0105 tworzy\u0107 najbardziej ludzkie dzie\u0142a - dzie\u0142a sztuki...</p> <p>To sztuka, a nie nauka tworzy prawdziwy obraz naszego subiektywnego \u015bwiata.</p> <p> </p> <p>[1] Fascynuj\u0105cy opis takich mo\u017cliwo\u015bci odnale\u017a\u0107 mo\u017cna w wielu utworach gatunku science fiction, np. w opowiadaniu Stanis\u0142awa Lema pt. \"Ze wspomnie\u0144 Ijona Tichiego\" oraz w filmie \"Trzynaste pi\u0119tro\" opartym na ksi\u0105\u017cce Daniela Galouye pt. \"Simulacron 3\".</p> <p>[2] 'Ale kt\u00f3\u017c ich widzia\u0142?' - Stanis\u0142aw Lem \"Bomba megabitowa\" (str. 29).</p> <p>[3] Czasem w pracach filozoficznych, kt\u00f3re czyta\u0142em spotyka\u0142em si\u0119 z pr\u00f3b\u0105 odpowiedzenia na takie pytania po\u015brednio. W pracach tych pomijany jest fakt, \u017ce w ten skrz\u0119tny spos\u00f3b wytworzona hipoteza nadal nie jest weryfikowalna. Za przyk\u0142ad takiej pracy, w kt\u00f3rej autor usi\u0142uje wyt\u0142umaczy\u0107 konieczno\u015b\u0107 obecno\u015bci inteligencji (boskiej?) w akcie tworzenia \u015bwiata podam: \"Intelligent Design as a Theory of Information\" (William A. Dembski)</p> <p>[4] Osobi\u015bcie, oddzielam nawet w\u0142asn\u0105 \u015bwiadomo\u015b\u0107 od mojego cia\u0142a. Zawsze traktowa\u0142em swoje cia\u0142o jak statek, kt\u00f3rym p\u0142yn\u0119 po oceanie rzeczywisto\u015bci.</p> <p>[5] Tak tworzy\u0142 m.in. Kandinsky. Jego dzie\u0142a s\u0105 interakcj\u0105 barw i kszta\u0142t\u00f3w, kt\u00f3re \"d\u017awi\u0119cz\u0105 w\u0142asn\u0105 wibracj\u0105\", budz\u0105c emocje widza.</p> <p>[6] Hoimar von Ditfurth w ksi\u0105\u017cce pt. \"Duch nie spad\u0142 z nieba\", argumentuje, \u017ce ludzka \u015bwiadomo\u015b\u0107 wytworzy\u0142a si\u0119 na ju\u017c istniej\u0105cych podstawach uk\u0142ad\u00f3w nerwowych pracuj\u0105cych du\u017co bardziej automatycznie. Z tego powodu niekt\u00f3re uwarunkowania przetrwa\u0142y w nas do dzi\u015b i wp\u0142ywaj\u0105 na nasz\u0105 psychik\u0119 w postaci r\u00f3\u017cnorakich, irracjonalnych stan\u00f3w emocjonalnych.</p>"},{"location":"blog/2002/04/15/drodzy-bracia-solipsysci/","title":"Drodzy Bracia Solipsy\u015bci","text":"<p>Tylko dla ob\u0142\u0105kanych.</p> <p>Drodzy Bracia Solipsy\u015bci,</p> <p>Nasze uczucia zwi\u0105zane s\u0105 nierozerwalnie ze \u015bwiatem subiektywnym. W tym \u015bwiecie znajduje si\u0119 du\u017ca cz\u0119\u015b\u0107 tego co nazywamy nasz\u0105 osobowo\u015bci\u0105. Istnieje te\u017c \u015bwiat przekona\u0144 [1], kt\u00f3re s\u0105 systematyzowane w funkcjonalne memy [2]. Memami mog\u0105 sta\u0107 si\u0119 wszystkie informacje, kt\u00f3re nas otaczaj\u0105 - ka\u017cda, nawet drobna rzecz, kt\u00f3ra obije nam si\u0119 o uszy. Istniej\u0105 jednak du\u017co bardziej z\u0142o\u017cone memy, jak na przyk\u0142ad matematyka. Matematyka jest ogromnym systemem twierdze\u0144, kt\u00f3ry zdaje si\u0119 istnie\u0107 nawet niezale\u017cnie od cz\u0142owieka. Ktokolwiek wymy\u015bli\u0142 liczby pierwsze nie stworzy\u0142 ich - one istnia\u0142y niezale\u017cnie od faktu ich odkrycia [3].</p> <p>Memy s\u0105 \u017cywe - to znaczy maj\u0105 zdolno\u015b\u0107 do replikacji i mutacji; rozmna\u017caj\u0105 si\u0119 najcz\u0119\u015bciej drog\u0105 werbaln\u0105 lub pisemn\u0105. Do tego \u015bwiata nale\u017c\u0105 wszystkie systemy wierze\u0144, r\u00f3wnie\u017c nauka. Nauka jednak zak\u0142ada istnienie jeszcze jednego \u015bwiata - \u015bwiata materialnego, kt\u00f3ry mo\u017cna obj\u0105\u0107 stref\u0105 empirii. [4]</p> <p>Istnienie \u015bwiata materialnego stwarza nam podstaw\u0119 do testowania w\u0142asnych teorii. Jest to w Popperowskim 'trzecim \u015bwiecie' kryterium doboru naturalnego, pozwalaj\u0105cego na ewolucj\u0119 mem\u00f3w. Idee rozwijaj\u0105 si\u0119 na wiele sposob\u00f3w, je\u015bli jednak uzna\u0107 za sukces ewolucyjny zdolno\u015b\u0107 do zaj\u0119cia du\u017cych obszar\u00f3w (wiele umys\u0142\u00f3w) i przetrwanie d\u0142ugich okres\u00f3w czasu, to jednym z najskuteczniejszych meme\u00f3w jest metoda naukowa [5]. Jej selekcja naturalna prowadzi do powstania coraz doskonalszych teorii, wykazuj\u0105cych bli\u017csz\u0105 korelacj\u0119 ze \u015bwiatem materialnym.</p> <p>Jak dzia\u0142a metoda naukowa? </p> <p>Dla dowolnej hipotezy mo\u017cemy szuka\u0107 po\u015bwiadczenia- dowodu. Dla uproszczenia przyjmijmy jako hipotez\u0119 teori\u0119 grawitacji wg Newtona. Zak\u0142ada ona, \u017ce ka\u017cde dwa obiekty we wszech\u015bwiecie obdarzone \"mas\u0105\" oddzia\u0142uj\u0105 na siebie si\u0142\u0105 przyci\u0105gaj\u0105c\u0105. Jak sprawdzi\u0107 t\u0119 teori\u0119?</p> <p>Mo\u017cna np. zrzuci\u0107 szklank\u0119 ze sto\u0142u na pod\u0142og\u0119. Patrzymy - spadnie. Teoria si\u0119 sprawdzi\u0142a. Czy to jednak czyni j\u0105 prawdziw\u0105? Mo\u017cemy powt\u00f3rzy\u0107 eksperyment tysi\u0105c razy i m\u00f3wi\u0107 o rosn\u0105cym prawdopodobie\u0144stwie wygenerowania kt\u00f3rego\u015b z wynik\u00f3w, ale czy nawet tysi\u0119czny sprawdzian uczyni teori\u0119 prawdziw\u0105? </p> <p>Nie! Nie jest to kryterium prawdy, a jedynie pewnej (niedoskona\u0142ej) korelacji ze \u015bwiatem materialnym. W naszym przyk\u0142adzie pos\u0142u\u017cyli\u015bmy si\u0119 grawitacj\u0105 Newtonowsk\u0105, kt\u00f3ra przetestowana zosta\u0142a miliony razy przez ludzi jej \u015bwiadomych. Za ka\u017cdym razem, kt\u00f3ry udokumentowali\u015bmy szklanka rzeczywi\u015bcie spad\u0142a ze sto\u0142u (niejednokrotnie t\u0142ucz\u0105c si\u0119 niemi\u0142osiernie). Nie jeste\u015bmy jednak nigdy absolutnie pewni, \u017ce za 1'000'001 razem szklanka nie poleci do g\u00f3ry. Gdyby tak si\u0119 sta\u0142o, to za jednym zamachem obaliliby\u015bmy teori\u0119. Wystarczy pojedynczy kontrprzyk\u0142ad, aby j\u0105 sfalsyfikowa\u0107. Nauka opiera si\u0119 na tej zasadzie! Nie pretenduje ona do miana prawdy obiektywnej, a jedynie stara si\u0119 stworzy\u0107 system falsyfikowalnych hipotez. Dzi\u0119ki falsyfikowalno\u015bci memy naukowe nie stanowi\u0105 \u015blepego zau\u0142ka ewolucji i mog\u0105 zosta\u0107 zast\u0105pione przez skuteczniejsze teorie, czyli takie, kt\u00f3re wykazuj\u0105 wi\u0119ksz\u0105 korelacj\u0119 z rzeczywisto\u015bci\u0105. Aby dana hipoteza mog\u0142a by\u0107 nazwana naukow\u0105 i pretendowa\u0107 do prezentowania nawet niedoskona\u0142ego przybli\u017cenia rzeczywisto\u015bci musi zawiera\u0107 mo\u017cliwo\u015b\u0107 obalenia. Jest to najwa\u017cniejsze kryterium naukowo\u015bci. [6]</p> <p>Teoria Newtona zosta\u0142a w ko\u0144cu obalona. Zawiera\u0142a ona tak\u0105 konstrukcj\u0119 matematyczn\u0105, kt\u00f3ra w ekstremalnych warunkach (zakresach odleg\u0142o\u015bci i pr\u0119dko\u015bci) dawa\u0142a b\u0142\u0119dne wyniki. Wtedy powsta\u0142a og\u00f3lna teoria wzgl\u0119dno\u015bci Einsteina, kt\u00f3ra jest du\u017co bardziej z\u0142o\u017cona, ale daje istotnie lepsz\u0105 korelacj\u0119 z empiri\u0105 [7]. To czyni j\u0105 zdecydowanie lepsz\u0105 teori\u0105 naukow\u0105.</p> <p>Przyj\u0119li\u015bmy jak do tej pory dwa za\u0142o\u017cenia. Po pierwsze istnienie i mo\u017cliwo\u015b\u0107 do\u015bwiadczenia \u015bwiata materialnej rzeczywisto\u015bci oraz \"metod\u0119 naukow\u0105\". Chcia\u0142bym rozprawi\u0107 si\u0119 z jednym z tych za\u0142o\u017ce\u0144. Chcia\u0142bym zapostulowa\u0107, \u017ce \u015bwiat nie istnieje, a jest jedynie z\u0142udzeniem. Przyznaj\u0119, \u017ce twierdzenie to jest nienaukowe gdy\u017c jest niefalsyfikowalne; nie mo\u017ce wi\u0119c podlega\u0107 naszemu kryterium ustalania jego sp\u00f3jno\u015bci z rzeczywisto\u015bci\u0105. Przez symetri\u0119 r\u00f3wnie niefalsyfikowalne jest to, \u017ce \u015bwiat istnieje. Wielu z nas jest sk\u0142onnych uwierzy\u0107 w solipsyzm, jednak istnienie lub nieistnienie \u015bwiata pozostanie jedynie kwesti\u0105 wiary. Nigdy nie b\u0119dziemy w stanie udowodni\u0107 egzystencji \u015bwiata, ale nawet nie mo\u017cemy jej sfalsyfikowa\u0107. </p> <p>Skoro istnienie \u015bwiata jest kwesti\u0105 wiary, wi\u0119c jak ka\u017cdy dogmat, mo\u017ce by\u0107 dowolnie zast\u0105piona innym dogmatem - np. m\u00f3wi\u0105cym, \u017ce \u015bwiat jednak nie istnieje!</p> <p>W ka\u017cdym z trzech \u015bwiat\u00f3w (materialnym, subjektywnym i 'trzecim' [8]) jest zakotwiczona cz\u0119\u015b\u0107 naszego ja, naszej jedynej pewnej teorii w \u015bwiecie hipotez. M\u00f3wimy \"cogito ergo sum\", gotowi jeste\u015bmy zakwestionowa\u0107 istnienie wszystkiego na \u015bwiecie, mo\u017cemy uwierzy\u0107 w mo\u017cliwo\u015b\u0107 Matrix, ale jednak zawsze przekonani jeste\u015bmy o w\u0142asnym istnieniu.</p> <p>To rozgraniczenie zastanawia\u0142o mnie ostatnio: dlaczego mog\u0105c zakwestionowa\u0107 wszystko inne, gotowi jeste\u015bmy uzna\u0107 nasze subiektywne poczucie ja za jedyn\u0105 pewn\u0105 rzecz we wszech\u015bwiecie? Nasza psychika jest przecie\u017c bardzo z\u0142o\u017conym bytem sk\u0142adaj\u0105cym si\u0119 z wielu cz\u0119\u015bci - subiektywnych uczu\u0107, wierze\u0144 i twierdze\u0144. Ka\u017cdego dnia zmieniamy si\u0119; nasze uczucia fluktuuj\u0105 pod wp\u0142ywem do\u015bwiadcze\u0144, stanu zdrowia, u\u017cywek; nasze teorie zmieniaj\u0105 si\u0119 i rozwijaj\u0105. Nawet, kiedy zdajemy sobie spraw\u0119, \u017ce procesy te sprowadzaj\u0105 si\u0119 do reakcji biochemicznych, nadal sk\u0142onni jeste\u015bmy wierzy\u0107 w dualizm ducha i cia\u0142a. Wierzymy, \u017ce istnieje pewna ci\u0105g\u0142o\u015b\u0107 \u0142\u0105cz\u0105ca wszystkie stany naszego umys\u0142u od urodzenia a\u017c do \u015bmierci. Zak\u0142adamy bardzo dziwn\u0105 teori\u0119 istnienia \u015bwiadomo\u015bci, istnienia ja. Niekt\u00f3rzy nawet wierz\u0105, \u017ce ci\u0105g\u0142o\u015b\u0107 tego ja zachowana jest w jakiej\u015b formie po \u015bmierci. </p> <p>No dobrze - mamy kolejn\u0105 tez\u0119. Jak sprawdzi\u0107, czy istniej\u0119? Cogito ergo sum. My\u015ble i my\u015ble i ci\u0105gle jestem. Teori\u0119 po\u015bwiadczam ka\u017cdym momentem skupienia uwagi w ca\u0142ym \u017cyciu. Czy jednak teoria ta zas\u0142uguje na miano jedynej niepodwa\u017calnej prawdy? Je\u015bli twierdzenie jest niefalsyfikowalne, jest dogmatem, a przecie\u017c nie spos\u00f3b mi samemu sprawdzi\u0107 co by by\u0142o gdybym nie my\u015bla\u0142. Co by by\u0142o po \u015bmierci? </p> <p>Ja wystawiam tez\u0119, \u017ce ja jako byt, ci\u0105g\u0142o\u015b\u0107 nie istniej\u0119. Ta teoria znowu nie jest naukowa, ale jest r\u00f3wnie uprawniona do istnienia jak alternatywne dogmaty, \u0142\u0105cznie z cogito ergo sum.</p> <p>Metoda naukowa pozwala na rozw\u00f3j system\u00f3w memowych o bardzo z\u0142o\u017conej strukturze, a Poperowskie kryterium falsyfikowalno\u015bci stanowi rol\u0119 presji selekcyjnej kieruj\u0105cej ewolucj\u0119 teorii naukowych w kierunku coraz \u015bci\u015blejszych korelacji z empiri\u0105. Empiryzm pozwala nam pozna\u0107 coraz wi\u0119ksze zawi\u0142o\u015bci \u015bwiata materialnego, jednak nigdy nie da nam pewno\u015bci poznania prawdy. Z za\u0142o\u017cenia nauka mog\u0142aby nawet doprowadzi\u0107 nas do prawdy, je\u015bli takowa istnieje, ale nawet b\u0119d\u0105c tam nie wiedzieliby\u015bmy, \u017ce dotarli\u015bmy. </p> <p>W pe\u0142nej pokorze,</p> <p>Nieistniej\u0105cy</p> <p> </p> <p>P.S. Nauka nie prowadzi do poznania prawdy, jedynie do poznania \u015bwiata, kt\u00f3rego istnienie za\u0142o\u017cy\u0142a.</p> <p> </p> <p>[1] Wed\u0142ug Sir Karla R. Poppera istniej\u0105 trzy \u015bwiaty: 1. \u015bwiat dozna\u0144 subiektywnych (r\u00f3\u017cny dla poszczeg\u00f3lnych os\u00f3b), 2. \u015bwiat materialny, kt\u00f3ry wsp\u00f3\u0142odczuwamy, oraz 3. 'trzeci \u015bwiat' b\u0119d\u0105cy systemem byt\u00f3w abstrakcyjnych wytworzonych przez ludzi (np. wierzenia, nauka).</p> <p>[2] Richard Dawkins \"Samolubny Gen\". Mem to informacyjny replikon, innymi s\u0142owy jest to dowolna informacja, kt\u00f3ra przekazywana przez ludzi 'rozmna\u017ca si\u0119' w naszej zbiorowej \u015bwiadomo\u015bci. </p> <p>[3] Dotyczy to wszystkich pi\u0119knych konstrukcji matematycznych, kt\u00f3re s\u0105 konsekwencj\u0105 przyj\u0119tych pocz\u0105tkowo prostych za\u0142o\u017ce\u0144. Wszystko od liczb parzystych do uk\u0142ad\u00f3w fraktalnych.</p> <p>[4] Przypis dla w pe\u0142ni ob\u0142\u0105kanych: Przyjmuj\u0105c to za\u0142o\u017cenie nauka przeczy samej sobie - przestaje by\u0107 naukowa.</p> <p>[5] Innymi bardzo skutecznymi memami s\u0105 religie, systemy filozoficzne, muzyka klasyczna, ostatnio demokracja.</p> <p>[6] Drugim mo\u017ce by\u0107 Brzytwa Ockhama, m\u00f3wi\u0105ca, \u017ce na podstawie danych \u015bwiadectw nie mo\u017cemy wyci\u0105gn\u0105\u0107 wi\u0119cej wniosk\u00f3w ni\u017c pozwala nam na to ilo\u015b\u0107 badanych zmiennych.</p> <p>[7] Og\u00f3lna teoria wzgl\u0119dno\u015bci jest falsyfikowalna, gdy\u017c jej konsekwencj\u0105 jest propagacja efekt\u00f3w grawitacyjnych z ograniczon\u0105 pr\u0119dko\u015bci\u0105 w postaci tzw. fal grawitacyjnych. Detektory takich fal konstruowane s\u0105 obecnie w USA, Japoni i Europie. Zobacz: 'Ripples in Spacetime' W. Wayt Gibbs, Scientific American, April 2002.</p> <p>[8] Popper, zobacz przypis 1.</p>"},{"location":"blog/2003/03/11/glowa-toniego-blaira/","title":"Glowa Toniego Blaira","text":"<p>Nie wiem na ile te informacje docieraja do Polski ale tu, w Wielkiej Brytanii ziemia sie trzesie... pod premierem Tonym Blair'em.Sledzac tutejsze media, nawet prawicowe, nawolujace do wojny BBC, nie da sie uniknac wrazenia ze pan Blair ma glebokie problemy, kt\u00f3re moga w najblizszym czasie zakonczyc jego polityczna kariere. Chodzi oczywiscie o Irak i angielsko-amerykanskie plany wojenne. Tutejsze spoleczenstwo jest przeciwne wojnie, a juz zdecydowanie nie popiera wojny bez mandatu ONZ. Uczucie to jest tak silne, ze nawet czlonkowie partii Blaira otwarcie wyrazaja sw\u00f3j sprzeciw, do tego stopnia, ze groza rezygnacjami. Przedwczoraj minister Clare Short powiedziala, ze zrezygnuje ze swojego stanowiska jesli Wielka Brtania przystapi do wojny bez nowego rozporzadzenia ONZ. To wywolalo istna lawine w tutejszym parlamencie. Co prawda zaden inny minister nie wyrazil tego wprost, ale wczoraj wielu sympatyzowalo z postawa pani Short, a dzis jest juz mowa o zmianie na fotelu samego premiera. W tutejszym ustroju to stanowisko jest mianowane w wyborach wewnetrznych partii, a ta moze r\u00f3wniez zdecydowac o jego odwolaniu. Na razie sytuacja wyglada powaznie, ale decyzje jeszcze nie zapadly. Szczerze wsp\u00f3lczuje panu Anthony'emu; ten elokwentny gentleman wyglada jakby nie spal od tygodnia, a podczas wywiad\u00f3w zaczyna mu brakowac argument\u00f3w. O wszystkim przesadzi ONZ, a co za tym idzie Francja, Rosja, '6 niezdecydowanych' i dokladne sformowanie nowego rozporzadzenia. Ono juz zreszta zostalo zmienione. Poczatkowo mowa byla tylko o okresie (notabene 7-dniowym) podczas kt\u00f3rego Saddam ma sie rozbroic. To oczywisty absurd, bo po pierwsze tydzien?, a po drugie co to znaczy rozbroic sie. Bush juz sie wypowiedzial na ten temat: \"We know what a disarming country looks like. And Iraq does not look like that.\"Nowa wersja rozporzadzenia daje Saddamowi troche wiecej czasu i przede wszystkim wyznacza konkretne zadania, kt\u00f3rym ma sprostac. Pytanie brzmi tylko: co sie stanie jesli mu sie uda \"rozbroic\" w tak trudnych warunkach? Amerykanska machina wojenna toczy sie pelna para. Amerykanie zaczeli juz podpisywac kontrakty z firmami (notabene wylacznie amerykanskimi) na prace przy \"odbudowie Iraku\". Szczerze watpie, zeby jakiekolwiek argumenty potrafily powstrzymac globalnych szeryf\u00f3w, a to pozostawia Blaira na lodzie. Jesli przystapi do wojny bez poparcia ONZ, swojego wlasnego rzadu i ludu, polityczna glowa jego potoczy sie ponuro po schodach przy 11 Downing Street. Wiecej informacji w sieci:IC WalesThe AgeCBS NewsBBC News</p>"},{"location":"blog/2003/03/27/halliburton/","title":"Halliburton","text":"<p>Byc moze pamietacie jak dwa tygodnie temu, zanim pierwsze bomby spadly na Irak, pisalem ze Amerykanie juz przygotowuja kontrakty na prace przy powojennej odbudowie tego kraju.Otoz przedwczoraj pierwszy taki kontrakt zostal podpisany. Nie wiadomo dokladnie na jaka sume opiewa, ale napewno jest wart wiele milionow dolarow. Ciekawe jest ktora firma stala sie beneficjentem irackiej tragedii, a jest nia Halliburton. Sama nazwa zapewne niewiele mowi, ale moze nazwisko jej bylego CEO cos znaczy: Dick Cheney. Pan Chaney od 2000 roku nie pracuje juz dla Halliburton, gdyz jest wice prezyzentem USA. Ciekawe jak wiele z $77 miliardowego (!!!) budzetu wojennego USA trafi do takich firm jak Halliburton, ktore sa glownymi sponsorami kampanii wyborczych partii republikanskiej. Jedno jest pewne, watpie zeby w 2004 zabraklo Bushowi pieniedzy, zeby 'miec sie ponownie wybranym' (get himself reelected). A ja zastanawialem sie o co wlasciwie w tej wojnie chodzi?Jaki ja naiwny... gdy nie wiadomo o co chodzi, chodzi o...</p>"},{"location":"blog/2003/03/28/amerykanscy-fanatycy/","title":"Amerykanscy fanatycy?","text":"<p>Przedewszystkim chcialbym zaprosic wszystkich do rozwazenia amerykanskiego fanatyzmu religijnego. Dawno w Stanach nie bylem, ale w wielu artykulach czytalem ostatnio o Ortodoksyjnych Chrzescinanach. W Polsce znamy ten typ, jest on zwiazany z LPR, Radiem Maryja i 'babciami' modlacymi sie przed kinami o zdjecie z afisza filmu, ktorego zadna z nich nie widziala. W Ameryce tez jest pewien odlam Kosciola, ktory nie zgadza sie z Watykanem. Tam przyjmuje on rozne formy: od zakazow nauczania ewolucji w szkolach po nawolywanie do wojny z Irakiem. Daleki jestem od krytykowania czyjejs religijnosci. Nie uwazam tez zeby w Chrzescijanstwie albo Islamie bylo cos koniecznie zlego, problem pojawia sie jednak jesli mowa o ortodoksi.Od ortodoksyjnosci jest niebezpiecznie blisko do fundamentalizmu. Ortodoksyjni wierzacy trzymaja sie pewnej tradycji nie kwesionujac jej. Osoby o takim usposobieniu moga byc manipulowane przez innych np. by przeprowadzac ataki samobojcze w Izraelu, albo podkladac ogien w klinice ginekologicznej w Missisipi. I tych wlasnie ludzi okreslamy mianem fanatykow, terrorystow. Chce zwrocic uwage na to, ze zjawisko to nie jest ograniczone do swiata muzumanskiego, ale rownie dobrze moze pojawic sie w Ameryce. Nam, \"zlaicyzowanym Europejczykom\" trudno to zrozumiec, albo nawet wyobrazic sobie, ale ameryka pelna jest \"przestraszonych dzieci\", chcacych zeby wujek George ochronil je przed \"zlem\". Tym zakoncze, mam nadzieje, ze ktos, kto byl/jest w stanach napisze mi cos na ten temat.</p>"},{"location":"blog/2003/03/30/p2p/","title":"p2p","text":"<p>p2p to skrot od 'Point to Point', albo 'Peer to Peer' a jest to termin z zargonu informatycznego opisujacy system 'rozproszony', czyli taki, ktory dziala bez zadnego centralnego komputera (serwera). Najpopularniejszym dzis zastosowaniem systemow p2p jest wymiana plikow, najczesciej nielegalnych kopii muzyki i filmow chronionych prawami autorskimi (najpopulatniejszy program: Kazaa).Wymiana pirackich kopii materialow chronionych prawami autorskimi jest oczywiscie nielegalna i trudno byloby bronic jej prawnie. Moja sympatie dla tych systemow zwalmy na mlodzienczy anarchizm, robin-hood'yzm, albo na fakt, ze cierpia z ich powodu jedynie wielkie miedzynarodowe korporacje zadne nieograniczonych zyskow.Nie zmienia to wszystko faktu, ze sposob w jaki firmy te chce bronic administracja w Waszyngtonie jest godny potepienia. Po pierwsze dwa tygodnie temu w amerykanskim Kongresie pan John G. Malcolm, asystent prokuratora generalnego, Johna Ascrofta oglosil, ze systemy wymiany plikow dotuja terroryzm! Dowodow oczywiscie nie bylo, ale do tego zdazylismy przyzwyczaic sie w podczas \"Wojny z terroryzmem\". Jedyne argumenty to: na piractwie mozna bardzo duzo zarobic, grupy zajmujace sie piractwem sa wysoce zorganizowane, a jak wiadomo przestepczosc zorganizowana sprzyja terrorystom. wiecej: Google NewsPan John G. Malcolm domaga sie kar pozbawienia wolnosci w wymiarze 33 miesiecy dla kazdego, kto wymienia sie plikami w sieci. Fakt, ze objeloby to glownie studentow, a nie terorystow nie ma tu raczej znaczenia. Kolejnym szokujacym wrecz rozpozadzeniem jest tzw. Berman Bill, wg. ktorego RIAA (Amerykanski olbrzym powolany do ochrony praw autorskich, dotowany przez firmy fonograficzne) moglby zatrudniac hakerow(!) do walki z uzytkownikami systemow p2p. Innymi slowy hackerstwo jest skrajnie nielegalne, chyba, ze masz za soba dobrze oplacana grupe lobbyingowa. wiecej:Washington PostCNet NewsSlashDotJako, ze podczas wojny w Iraku opinia publiczna jest uspiona do pracy ze zdwojona sila zabiera sie pan Ashcroft. To on podczas zamieszania po 11tym wrzesnia przepchnal przez Kongres ustawe zwana potocznie 'Patriot Act', pozwalajaca przetrzymywac ludzi bez postawienia im zarzutow przez nieograniczony czas. Teraz gdy Amerykanie zapatrzeni sa w telewizory, a Patriot to tylko nazwa jednej z rakiet, bedzie on probowal przepchnac kolejne kwiatki. Jesli mu sie uda, system prawny w Ameryce bedzie przypominal raczej 'Rok 1984' Orwella, a rozprawy sadowe 'Proces' Kafki. Dla niewtajemiczonych, lista pomyslow pana Ascrofta:1. Patriot Act - juz obowiazuje, pozwala aresztowac kazdego, kto ma powiazania z terroryzmem (nie zapominajmy, ze moze to oznaczac kazdego z 7 milionow uzytkownikow systemow p2p) bez postawienia mu zarzutow i przetrzymywanie go przez nieograniczony czas. Narazie dotyczy tylko obcokrajowcow, ale patrz punkt 3. 2. Total Information Awarness System - Stworzenie wewnatrz Homeland SS (Security System) oddzialu specjalisujacego sie w sledzeniu wszystkich tranzakcji elektronicznych przeprowadzanych przez Amerykanow. Nazwa chyba zbyt oczywista, bo prawo nie przeszlo podczas wojny w Afganistanie. Spodziewajcie sie kolejnej proby teraz, pod inna nazwa. 3. Patriot Act II - rozszezenie czesci pierwszej pozwalajace zastosowac pomysly z pkt. 1 do obywateli Ameryki. Jak? Kazdy kto jest powiazany z terroryzmem (nie zapominajmy o 7 mln cyber-terorystow) moze byc pozbawiony obywatelstwa! 4. Berman Bill - wspomniana juz ustawa pozwalajaca na walke z terroryzmem polegajaca na nasylaniu hakerow na uzytkownikow systemow wymiany plikow.</p>"},{"location":"blog/2003/04/10/victory-celebration/","title":"Victory Celebration","text":"<p>If you are incapable of feeling at least a tiny amount of joy, at watching ordinary Iraqis celebrate this you are lost to the ideological Left; if you incapable of feeling badly that we had to use force in the first place, you are ideologically lost to the Right.- Jon StewartIt's already beginning, even though the war is not over... Yesterday, the American/British army marched into Baghdad, where they met thousands of people, happy to greet them. Happy that, the war was over quickly and happy that the long reign of Saddam had finally come to an end.The people, who were undoubtedly suppressed came out to topple the symbol of Hussain's power -- a huge statue of the man they were freed from.Those  pictures circled the globe, they were seen by billions of people and will be remembered for a long time. The reactions to them were different in various regions. Whereas the Western world breathed a sigh of relief and cheered, the Arab world was also relieved but less enthusiastic. To them it was a crushing display of American power and a realization that they have lost another piece of control over their region.This war is over, but of course the big conflict, the one between our two civilizations is not yet behind us. We now have one foot in the ants' nest. We know that we can't stand there very long, but we're hoping that the very presence of American power will be enough to stabilize the region. Are we overly optimistic? We shall see. The problem with history being the judge is that history is always written in retrospect and usually by the victors. If all goes well, it will be easy to say that the war was justified, but that's a very, very dangerous statement.This war is only justified in retrospect, but any decision about a similar conflict will have to be made without it. The future holds many important decisions for us too. Do we attack Iran, Syria, North Korea? Will a typical Hollywood 'happy end' of this story make it easier for us to justify 'pre-emptive' (euphemism for unprovoked) military action in the future?I would be afraid of such a conclusion, so we have to remember, that despite all possible 'good' (as in 'good' marketing) results of the war thay may be, it WAS NOT justified. To justify something means \"to show or prove it to be just, right, or reasonable\". This was not done before the war. The reasons given for attacking Saddam were:a) he has weapons of mass destructionb) he has links to al-Quaidac) he harbors terroristsetc.They turned out to be meritless, Saddam allowed the weapon inspections to resume, there was no smoking gun, Iraq didn't attack anyone... So what was the justification? That he could do it?Well yes, it's true he could have done horrible things, but so could any other world leader. In status potenti everyone who bears power could be \"evil\" (a word Bush really likes), but we cannot attack or judge people for things they have not done. I hope everybody remembers that at the basis of American law, there is the statement: everyone is considered innocent until proven guilty. That sentence defines American civic liberties and the way the legal system there operates. These liberties and the rule of law are the very things Americans are claiming to be defending, so I really hope they do not forget them themselves.It is a very dangerous game they are playing, when they try to avoid the rule of law internationally and reinterpret (or even rewrite) their own constitution. I hope that after this victory, they will not get carried away. </p>"},{"location":"blog/2003/04/12/well-adjusted-nazi/","title":"A well adjusted Nazi","text":"<p>\"What does it mean to be a well adjusted Nazi? Is that mental health? Or is a maladjusted person in a Nazi society the only one who is sane?\"-Ken Wilber</p>"},{"location":"blog/2003/04/13/ile-jest-kawy-w-kawie/","title":"Ile jest kawy w kawie?","text":"<p>Zostalo dzis naukowo udowodnione (przeze mnie) ze kawa rozpuszczalna marki Nescafe (Original) osiaga stan calkowitego nasycenia przy gestosci 0.5 lyzeczki/ml, w temperaturze 90 st. C.To fundamentalne odkrycie powoduje iz wiemy teraz, ze przecietna osoba, ktora uzywa srednio 1.5 lyzeczki kawy, pije przynajmniej 3 ml CZYSTEJ kawy w kazdej filizance.Oznacza to rowzniez, ze wszelkie proby zageszczenia kawy ponizej granicy 0.5 lyzeczki/ml sa skazane na niepowodzenie.Obecnie poszukuje czasopisma gotowego opublikowac wyniki moich badan, oraz osob (najchetniej bogatych prawnikow patentowych) zainteresowanych pomoca w opatentowaniu zwiazanych z odkryciem wynalazkow.Dziekuje wszystkim za uwage, ide sie napic kawy.MK</p>"},{"location":"blog/2003/04/14/dzisiaj-w-mojej-glowie/","title":"Dzisiaj w mojej glowie","text":"<p>Dzisiaj w mojej glowie klebi sie glownie samotnosc...Samotnosc trudno interpretowac, wiec zamiast slow bedzie zdjecie.</p>"},{"location":"blog/2003/04/15/expansion-civilizations/","title":"Expansion of Civilizations","text":"<p>There is something about our and other civilizations which is easily recognized, but consistently underestimated. It is a feature so innate to civilization as such, that it is accepted without broad questioning, yet if we allow it to proceed unchecked it will drive our civilization to an end.</p> <p>The issue I am referring to has come forth at the very early stages of development of human societies, so the timescale is grand. Between a million and four hundred thousand years ago the first human societies existed as hunters and gatherers. They existed on limited territories bounded by the distance one could walk within a day and come back to camp; and they occupied only environments with suitable climate and food supply. The tribes' populations were not very large, because within the limited territory only a certain amount of food could be found. It is estimated that the populations were no more then 40 people. Where this early form of human existence endured (e.g. in remote parts of: North and South America, Africa, India, Australia) people developed a natural respect for their surroundings and a cult of the Earth, which provided a basis for sustainable existence.</p> <p>Our civilization as everyone will easily observe is very different from this picture. We live in large agglomerations, cities, countries. Recently we even stated to live on a global scale. We attained a very high level of technological development, and for that reason, we consider ourselves to be the most civilized (i.e. the best) group on Earth, and all known universe. We have medical care, very high live expectancy (80 years, compared to primitive civilizations' 40 at best), and we have weekends off. </p> <p>When we think of the ancient times, we tend to think of people struggling to sustain themselves, people dying of disease and living in general discomfort. We think that our times are much better in those respects, we talk about our life being much easier. But just consider one issue... how much time do you think, tribes' people spent producing food every day? Think of the answer before you read on. Nowadays, people spend an average of 8 hours working each day, but hunters and gatherers attained all the food they needed in less then three!</p> <p>The rest of their time was devoted to rest, cultivation of customs and passing down the traditions. Of course they did not have our medical knowledge and so they died younger. We still die, however, only difference being our obsession with longevity and unhealthy compulsion to live forever. These are quite modern phenomena. </p> <p>One thing which is very significant about these early societies is the fact, that if they were to survive they had to live off finite resources. They could only consume in one year as much as would be replaced naturally in the year following. Within such constraints only a limited number of children could be raised and the population sizes were relatively stable. This is contrary to our civilization, which is continually expanding. The world population has exceeded six billion and has been growing exponentially. </p> <p>So when did our civilization diverge from the \"natural\" ways of early human existence? I would venture to claim, that the key turning point was the invention of herding and agriculture.  Perhaps it was inevitable, since people had large brains and a lot of time to observe nature, that they would discover how nature's cycles worked and learn to harness them. The advent of  agriculture and herding meant, that people were able to produce more food then they needed and to consume it without worrying about the following year. This of course meant, that they were able to have more offspring than would be otherwise possible. At this moment society started expanding.</p> <p>If you accept that in a suitable environment a replicator, able to utilize that environment will most likely arise, then perhaps it was inevitable that the idea, or meme [1] of expansion arose. This meme is very simple and it does not contain much information in itself. It is very covert, but it is able to incorporate itself into other ideologies, usually rendering them more successful. The expansion meme simply states: multiply!</p> <p>The omnipresence of this meme is perhaps best illustrated by looking at successful religions, such as Christianity, Islam, etc. They all contain the idea of necessary expansion: \"spread the good word\", \"convert the infidels\", etc. Similarly the very concept 'civilization' contains the expansion meme. All throughout the history of colonization, the western peoples believed they were generously bringing 'civilization to the uncivilized primitives'. Even today, United States, claims it is bringing 'democracy to the suppressed people of Iraq'. And so our civilization expands.</p> <p>The meme of expansion is also buried in the concepts of modern economy. Every company which wants to be successful, has to continually grow. It has to expand it's customer base, product line, market share and so on. A company, which does not grow will be unable to compete with it's expanding competition, which means death in a free market. On the stock market companies' values only rise or fall, there is no other option. Any company, which would only like to maintain its status would soon be outcompeted by aggressive rivals, just like native North American tribes were outcompeted by the expanding European civilization.   </p> <p>This attitude of our civilization causes a serious problem on many levels and many of today's conflicts can be understood if we realize that it is the expansion meme, which is their cause. Today the most aggressive form of civilization expansion is the economic expansion in which western style, liberal market economies are forced upon countries which have not yet developed them. We say that we want these people to be free and have a good standard of living, but the reasoning behind it is such: if they are free and have money, we will be able to sell them our goods and expand. </p> <p>This expansion of civilizations will inevitably cause them to run into each other in various fields, because as we all know, the world is very small these days. Whether these conflicts of interests will cause a real Huntingtonian clash of civilizations, or will be resolved in a final Fukuyamian end of history is perhaps a question of diplomacy and politics. The clashes are inevitable however and have to be realized. </p> <p>The intriguing thing is that the west now propagates liberal economy, while the east promotes Islam. These ideas belong to different spheres of influence, so if everyone plays their cards correctly, we should not need a conflict. </p> <p>There is another fundamental question, which has to do with civilization expansion. Even if we manage to avoid conflict, our civilizations produce and consume much more then the planet is able to sustain. If every inhabitant of Earth was to consume as much as an average American, we would need the resources of four planets to produce it all. </p> <p>This begs only one question: when? When shall we exceed the planet's carrying capacity and how high the price for our ignorance will be? We have to realize that this innate quality of expansion can only be sustained for so long. We have to find ways  to neutralize it, before it is too late.</p> <p>[1]     Memes are a concept derived from a book by Richard Dawkins ('The Selfish     Gene'). A meme is a thought or concept, which is propagated in a human     population via imitation, repetition, books, finally modern mass media.     Memes are mutable replicators, thus some consider them to be alive. </p>"},{"location":"blog/2003/04/18/banned-weapons-where-are-they/","title":"Banned weapons: where are they?","text":"<p>It is one of the unanswered questions of the war: where are the weapons of mass destruction which both the United States and Britain said that Iraq possessed?  The job of tracking down banned weapons is dauntingBecause they have not been found does not mean they do not exist. They could have been hidden or destroyed. Judgment therefore has to be withheld. The US military commander, General Tommy Franks, says that it could take a year to complete a search. The above comes from a BBC News article. The point here is obvious, but let me make it:If the American generals themselves admit, that a search for WMD in Iraq will have to take at least a year, then whatever was the point of allowing the UN's weapons inspectors 3 months for searches???I just cannot get over the hypocrisy of the Bush administration!!!Now, you'll surely understand why I will be very, very skeptical about any findings they have. If the Bushies find WMD without the participation of Hans Blix, UNMOVIC or the United Nations, I will have a very hard time believing that the evidence they present is not fabricated!!!Once you start lying, you have to work extremely hard to regain trust. And the Americans are doing nothing to appease the UN and convince us of their good intentions.Signing off,Mike</p>"},{"location":"blog/2003/04/20/fardus-square/","title":"Fardus Square","text":"<p>Take a look at these photos and take a minute to think... Baghdad is a city of 5 mln people. We were told of a massive uprising, culminated by the topling of Saddam's statue. Look at picture 1 (massive uprising, close-up), then picture 2 (massive uprising, long view). A photo from Reuters, click to enlargeA photo from Indymedia, click to enlargeIt is clear that the massive uprising involved no more then 200 people, including US soliders and international reporters...Hmm... makes you think doesn't it?If you're still thinking, click here.</p>"},{"location":"blog/2003/04/26/political-buzzwords/","title":"Political Buzzwords","text":"<p>\"A vocal minority clamoring to transform Iraq in Iran's image will not be permitted to do so. We will not allow the Iraqi people's democratic transition to be hijacked by those who might wish to install another form of dictatorship.\"-D. RumsfeldThere are certain words which apper over and over and over again in the official political statements in America and the World over. Whenever these words appear they become accepted as understandable, but after a few weeks they loose their original meaning and take on a menacing, self-affirming energy. Whether these words are meant to be \"good\" or \"bad\", they become deprived of their sense, and what remains is pure, meaningless emotional load. True form without substance.Just off the top of my head I can write out examples and I challenge everyone reading this to GIVE ME A DEFINITION, which would fit every context in which the word was used by high-ranking politicians.The list:- dictatorship- WMD (Weapons of Mass Destruction)- terrorism- terrorist- liberate- evil (G.W.Bush's favorite)- anti-american (new)---If you know any other meaningless words, let me know!I'll end with another quote...\"The images you are seeing on television, you are seeing over and over and over... And it's the same picture... of some person walking out of some building with a vase. And you see it twenty times! And you think: &gt;&gt;My goodness, were there that many vases?-D. Rumsfeld"},{"location":"blog/2003/04/28/beck-sea-change-tour-2003/","title":"Beck -- Sea Change Tour 2003","text":"<p>Wow! What a concert, what an artist!I went to see Beck play in Manchester yesterday and I have to admit I was impressed. I love Beck's music -- I have all his albums, but to see him live was something else :)He was playing solo, but he played: guitar, harmonica, piano, acordeon, electic bass-guitar, synthesizer... he was sometimes accompanied by his programable drummer, named Roland...I would write more, but words elude me. </p>"},{"location":"blog/2003/04/28/prawa-zachodniego-czlowieka/","title":"Prawa zachodniego czlowieka","text":"<p>\"People have to be taught not to collapse morally before the means used by the Great Satan if it stays in Iraq. It will try to spread moral decay, incite lust by allowing easy access to stimulating satellite channels and spread debauchery to weaken people's faith.\"- from 'fatwa', an edict issued on April 8 by Kadhem al-Husseini al-Haeri, an Iraqi-born cleric based in IranJakie to sa dziwne, nietolerancyjne, zatwardziale, ultrakonserwatyne i nieludzkie poglady!!! Nie pozwalac wlasnym ludziom ogladac telewizji satelitarnej? Przeciez to absurdalne -- kazdy ma PRAWO ogladac co mu sie rzewnie podoba. Ogladanie telewizji to jedno z podstawowych praw czlowieka!, kazdy powinien moc czerpac wiadomosci z wszystkich mozliwych zrodel -- rozwijac sie, ksztalcic... Az burzy sie krew!Tak, ale...Wyobrazmy sobie odwrotna sytuacje. Zyjemy sobie w takim ustroju jaki mamy. Wiemy, ze nie jest on idealny, ale lepszego nie znamy. Nie znamy innego ustroju pozwalajacego realizowac nasze podstawowe prawa i potrzeby, wolnosci, rownosci, sprawiedliwosci...Zyjemy sobie i zyjemy az tu nagle nadchodzi wielka armia, powiedzmy Marsjan (zeby nie bylo...) i bombarduje nasze stolice, pozbawia nas wladcow i zaczyna pro-marsjanska propagande. Marsjanie sa w gruncie rzeczy pokojowo nastawieni, ale nie podobalo im sie nasze restrykcyje prawo, ktore zakazuje emisji pornografii w telewizji, wielozenstwa i zbiorowych orgii w miejscach publicznych.Oni zreszta wcale nie chca nas do niczego zmuszac, ale chca tylko, zebysmy mieli prawo robic co nam sie rzewnie podoba. W zwiazku z tym zniesione zostana wszystkie restryjcyjne prawa seksualne i zalozona zostanie sekta marsjanska. Przynaleznosc do sekty jest oczywiscie dobrowolna, ale sekta bedzie miala wsparcie Marsjan i to jej czlonkowie dzierzyc beda wladze. Czlonkowie sekty cieszyc sie beda calkowita swoboda seksualna, beda mogli chedozyc z kim lub czym chca i robic to w kazdym miejscu. Marsjanie dostarczac beda przybory seksualne, jesli takie okaza sie potrzebne.A... i jeszcze jedno. Bedziemy transmitowac wam telewizje, zeby kazdy mogl poznac kulture naszej sekty zanim sie do niej przylaczy. Bedziemy transmitowac 24 godz. na dobe. i beda przerozne programy do wyboru: jeden pokazujacy seks oralny, drugi analny, kolejny zoofilie, kolejny... Zadnego hardcore'u, tylko to co sami chetnie ogladamy -- glownie nasi aktorzy, albo sceny dokumentalne z imprez naszej sekty. Wszyscy usmiechnieci, wszyscy szczesliwi, wszystkie rozterki rozwiazuja sie same na koncu filmu. Rano programy uczace (wspol)zycia w sekcie dla mlodziezy.I podkreslamy -- nikt nie musi tego ogladac, ani tym bardziej nie musi im sie podobac! Bron boze, wcale nie chodzi nam o narzucanie wam naszej kultury, chcemy tylko, zebyscie wszyscy mieli wolnosc i prawo, zeby ogladac co tylko chcecie. Jedyne czego nie chcemy, to zeby jakas dyktatura narzucala wam swoje zdanie i swoje nietolerancyjne tradycje...Zostaniemy tu, az sytuacja sie ustabilizuje....No dobra... teraz zastap slowa: seks, pornografia, wielozenstwo, orgie, takimi slowami jak: wolnosc seksualna, liberalna telewizja (ala seriale amerykanskie), zniesienie nakazu 5cio krotnych modlitw co dnia, sekularyzacja spoleczenstwa i wladzy.Po wykonaniu tych zmian przeczytaj tekst jeszcze raz, a moze zrozumiesz, dlaczego w zamieszczonym powyzej cytacie pojawiaja sie slowa: Wielki Szatan.Pozdrawiam</p>"},{"location":"blog/2003/04/30/postanowienia/","title":"Postanowienia","text":"<ol><li> Zyc i cieszyc sie chwila.<li> Nie popasc w zadna rutyne, nie 'uzaleznic sie od zycia'<li> Pracowac mniej i z odpowiednich powodow. Pracowac dla (kolejnosc wiazaca): 1.przyjemnosci, 2.kariery, 3.kasy<li> Kupic sobie szkla kontaktowe i naprawde je nosic<li> Dalej chodzic na imprezy, zapamietywac imiona spotkanych osob<li> Zrobic wreszcie prawo jazdy i kupic samochod<li> Obciac wlosy -- najlepiej ogolic sie na lyso<li> Wyleczyc wszystkie zeby i inne dolegliwosci tego ciala w ktorym zyje<li> Dalej chodzic regularnie na basen<li> Nie palic papierosow, bo sie uzaleznie<li> Dalej medytowac<li> Dalej pisac eseje, nie odkladac brudnopisow na polke<li> Zalozyc rodzine i miec dzieci, kiedy bede mial 30 lat<li> Zrozumiec post-modernistyczna, post-konwencjonalna moralnosc<li> O! Prawie bym zapomnial: Nie mieszkac w jednym domu z telewizorem"},{"location":"blog/2003/05/04/new-approach-to-anti-spam/","title":"New approach to Anti-Spam","text":"<p>With all the talk about anti-spamming laws soon to be introduced in the US I thought I would share some of my thoughts...As far as legal concerns go, I believe that the anti-spam laws should be tough. I think the USA would be best off with a law similar to the one in the European Union, where it is illegal to send any unsolicited email. Unfortunatelly America has already developed a strong lobby, which wants to use unsolicited e-mail as a \"genuine\" promotional channel (i.e. they want to send you spam from their own address). The question would be: do we really need more advertisments? The european law is simple and ends confusion.The second issue deals with programming.The anti-spam software of the day works using either a 'black-list' or 'white-list' mechanism. A black list contains all adresses/topics/key-words associated with spam. If it encounters any of these words it deletes the e-mail, of moves it to a special spam folder of the e-mail client.A white list works the opposite way: it looks for known e-mail addresses, from which mail is accepted, rejecting everything else.Both these mechanisms have faults: -- black lists cannot work agains the real scum spammers, who desguise themselves as a friend of yours, who wants to remind you of a meeting or something.- white lists only accept some e-mails, making it impossible to recieve e-mail form someone you did not previously have contact with.Solution:1. Use a white list mechanism (either server-side, or client-side), which will accept only e-mails from the list. If an address is not on the list, then create a pair of random numbers and store them. 2. Generate a webpage (could be a subsription service for client-side software) which has an address: www.antispamserver.com/?XXXXXXXXWhere XXXXXXXX is the first of the random numbers. The page shall contain a GD generated graphic showing YYYYYYYY (the second number) and a textfield where the number can be entered.3. Send e-mail back to the adress which wasn't on the white list saying: \"You are tryning to send an e-mail to NAME, who you have never e-mailed before. Please go to: www.antispamserver.com/?XXXXXXXX and confirm that you are a real person...\" (something among these lines)4. The person visits the page, enters the code and the original e-mail is finally passed on...There are no major loopholes in the system. The only requirement being that if you send someone e-mail, their address is automatically added to your white list. (Easy client-side, server-side solved by using the same server for POP and SMTP).This system would not make it impossible to send spam, but would make it a whole lot more energy consuming. Let's say that the key consisted of 10 digits. The spammer would need to type in 10 characters for every one of the millions of addresses he posts to. I think that would be rather discouraging :)</p>"},{"location":"blog/2003/05/06/polska-polityka/","title":"Polska Polityka","text":"<p>Kochani,Nie wiem, czy czytaliscie kwietniowa ResPublike (jesli nie to przez caly Maj jest online). Tematem miesiaca jest sytuacja polityczna w Polsce i juz wiem co sobie myslicie... \"beznadzieja\", \"polska polityka jest bez sensu\", \"mnie to nie interesuje\"...Autorami artykukow w ResPublice sa (jak zawsze) eksperci w danej dziedzinie, tym razem sa to wybitni politolodzy, socjologowie i dziennikarze. Smutne jest to, ze oni mowia to samo... Moze nie uzywaja slow 'beznadziejny', lub 'bezsensowny', ale opisuja sytuacje w ktorej nie ma komu i nie ma kim rzadzic. Nasza \"elita\" polityczna nie ma praktycznie rzadnych charyzmatycznych liderow, zadnych ugrupownan wystarczajaco silnych, zeby wziac na swoje barki trudne reformy, zadnej Margaret Thacher. Do tego wielka polityka jest wielce przesiaknieta korupcja. Afera Rywina, o ktorej przeczytac mozna we wszystkich mediach w Europie, powoduje, ze ludzie traca resztki zaufania do politykow, mediow, przedsiebiorcow...W polityce zagranicznej cechuje nas skrajny oportunizm... tu zlapiemy sie na fundusze UE, tam skubniemy troche pieniedzy od USA. Tylko, ze z umow offsetowych beda nici, jesli sytucja polityczna bedzie jaka jest. Podatki i koszty zatrudnienia w Polsce sa odstraszajace dla kazdej racjonalnie kalkulujacej firmy. Do tego nie da sie przewidziec jak sytuacja bedzie zmieniac sie w niedalekiej przyszlosci. Zbyt pospiesznie prowadzone reformy (np. katastrofalny projekt 4 reform), zbyt naiwnie prowadzona prywatyzacja i zbyt optymistyczne planowanie budzetow pozostawilo nas z deficyt budzetowym siegajacym przeszlo 45% PKB. Nie mamy wiec jak inwestowac w 'budzetowke', nie mamy czym zwabic inwestorow zagranicznych, bezrobocie siega 20%...Wszystko to powoduje, ze ludzie sa zawiedzeni i nie ufaja politykom. Politycy zreszta nie ufaja ludziom i zamiast wprowadzic ordynacje bezposrednia, nadal sami dziela sie stolkami. Do czego nas ta sytuacja doprowadzi? Na pewno do niczego dobrego. Potrzebna jest nam silna opozycja, a mamy tylko PO i PIS, oba slabe, oba uzaleznione od partnerow koalicyjnych. Dlaczego POPIS nie wypracuje wspolnego programu? Czy PO jest zbyt liberalne, czy PIS zbyt konserwatywne? No i mamy radykalow, ale na szczescie dosc prymitywnych.Drugie co nam potrzebne to zaangazowanie spoleczenstwa. O to chyba jeszcze trudniej niz o zmiany na scenie politycznej. Tu w Wielkiej Brytanii klasa polityczna duzo bardziej zabiega o glosy, a liczne organizacje pozarzadowe, dbaja o to, zeby ludzie czuli, ze ich MP(czyt. posel) naprawde pracuje dla nich. Brytyjczycy moga glosowac przez poczte, przez internet, a nawet przez interaktywna telewizje. Co prawda wszystkie te metody sa w fazie testow, ale wskazuja jak bardzo politykom zalezy na frekwencji wyborczej.Do tego strony internetowe. Najciekawsza jest http://www.faxyourmp.com/. Na tej stronie za darmo mozesz wyslac fax do swojego posla. Nie musisz nawet wiedziec jak sie nazywa, wystarczy, ze wejdziesz, wpiszesz swoj kod pocztowy i napiszesz list...BBC chce do tego dodac kolejny serwis w Pazdzierniku. Serwis o chwytliwej nazwie iCan, bedzie sluzyl jako forum do wymiany pogladow politycznych. Jego celem jest pomoc ludziom, ktorych gryzie ten sam problem odnalezc sie, pomoc im organizowac akcje informacyjne, manifestacje, etc., etc.Wiecej tu.Moze takich rzeczy nam trzeba? A moze trzeba nam calkowitej przemiany? Moze polski Hitler zawladnie rozgoryczonym tlumem i wraz z Buszem Juniorem zawojuje swiat? A moze wszystko sie ustabilizuje jak tylko dostaniemy troche pieniedzy od Unii?Nie wiem, ale jestem rownie zaniepokojony obecna sytuacja co Wy i autorzy piszaczy dla ResPubliki...</p>"},{"location":"blog/2003/05/10/the-open-spirit/","title":"The Open Spirit","text":"<p>We're living in a brave new world, which is trying to go beyond the modes of industrial timesand transgress the corporate rules of conduct. We're living in a world in which millions of people are defiant of the multinational super-companies' reign. This world is not clearly visible yet, but it is slowly emerging, maturing... It is now a rebelious teenager, but it may become beautiful and wise... truly post-modern.CommunityI'm talking about a humble community, which consists of numerous people who rarely even speak to each other, and yet they work together on projects grander then the undertakings of the largest of companies. They sit in front of their computers and code. Anybody who has ever done any programming of their own accord, knows how rewarding and enjoyable coding is, addictively so. But it's quite a lonely enterprise, so people like to share their work with others. With the blossoming of the Internet, the small hobby-club groups of coders suddenly became global. Open sourceThis introduced an incredible change in the potential of what these groups could achieve. The perfect illustration of this story is the operating system Linux. Started as a graduate project by one student (the now legendary Linus Torvalds) it was posted on a news group. Linus told others about his idea of developing a Unix-like system for the Intel PC architecture and gave them his source code! The source, or the actual code, that a programmer writes, was usually kept as the biggest secret of any software developer. What followed was a spectacular, unprecedented development. People from all over the world started adding bits and pieces to the code of the Linux Kernel, making it more and more powerful, while maintaining the main feature of the system: stability. Soon afterwards the system developed into a fully functional OS, operating primarily low-end servers and PCs of geeks around the globe. It started to become more and more popular and is now the fastest growing system in terms of WWW server numbers. With new versions the most popular distributions are becoming as simple to install as Windows and it is projected that Linux will be installed in 38%(!) of all new computers in 2004.And you have to realize -- this operating system, and the huge amount of work that went into it was done without money. It was developed without even the aim of making money, by people who decided to share their time and knowledge with others.Open standardsIn the Linux world, and more broadly in the Opens Source Community everything is free and open. The most popular progamming languages now (Java, Perl, PHP, to name a few) are all open source. You can download the source code at any time and learn from it, improve it, wallpaper your room with it, whatever...Practically all the software available for Linux is free, usually available via the GNU General Public License, which states that you can use and even modify(!) the software in anyway you like as long as all the versions remain free.Standards are the backbone of the computing game. Before you can exchange any data with anyone, you need to agree on the standard way in which this data will be endoded. The Open Source Community makes all standards publicly available in RCF(Request for Comments) documents. Everyone, who wishes may easily make their software compatible with any other, simply by complying with the requirements of the standards.This is a far cry from the policies of other companies (especially Micro$oft), who keep their software source secret, their standards (even the omnipresent .doc Word format!!!) secret, and even go out of their way NOT to implement the popular standards in order to make them obsolete. I highly recommend this article, to anyone who wants to know why geeks hate M$. It talks about everything from bloatware to mutilation of standards.Information is freeThe spirit within the Community is much more hippie-like. Everything is shared, everyone helps everybody else (it's a pleasure reading mailing lists sometimes), everything is open and common.People often say that that is no way to conduct any business and that the Community, even though it may be a beautiful idea, will have to succumb to the rules of the market. I disagree. What the community develops are tools, not products. These tools can and are, afterward used to produce services and inventions which become sold. There is no need to worry about a lack of things to sell. Thanks to the tools developed via opensource online services can function.If the Community can be likened to anything else I would say that it would be the scientific community, where knowledge is shared and combined to aid ever further research. It isn't true that all scientists work for money-hungry corporations. In fact, most work in Universities, without a frantic longing for riches. Science is also open -- everyone shares their results with everybody else, that's the whole point. And no-one is questioning the economic sense of science, are they? We know that science develops tools, which are later used to produce goods and services, which can be harvested.Open spiritIn this post-modern fashion the world is trying to evolve beyond it's former form. And even if it sometimes seems otherwise, I believe we are aiming in the right direction. In accordance with the Open Spirit, we demand corporate transparency, the rule of public law (on scales both local and international), and general fairness.Slogans of anti-globalization, even if misguided (or rather unguided, due to a lack of a program) hail developments and concepts accordant with this ideal: ecology, fair trade, \"think globally -- act locally\", etc.We're slowly geting there, and hopefully, if there aren't too many bushes along the way, we shall one day see a truly post-modern, Open world.RELATED:What M$ is trying to do to fight OpenSource.Spain all for Open software...</p>"},{"location":"blog/2003/05/24/you-figure-it-out/","title":"You figure it out...","text":"<p>You figure it out...</p>"},{"location":"blog/2003/05/26/jest-sesja-wiec-kazdy-student/","title":"Jest sesja, wiec kazdy student","text":"<p>Jest sesja, wiec kazdy student bedzie wiedzial dokladnie o czym mowie... Znacie to uczucie, kiedy siedzi sie przed materialami z wylkadow, podrecznikami i notatkami pieknie ulozonymi na biurku i za nic nie mozena zmusic sie do nauki?Po kilku sesjach czlowiek juz po prostu nie potrafi sie uczyc, poniewaz wczesniej uczyl sie zbyt duzo, zbyt intensywnie i w zbyt duzym stresie. To smutny stan, ktory mozna okreslic mianem 'wypalenia sie'. Sesja jednak nie jest taka zla, poniewaz wczesniej czy pozniej musi sie skonczyc. Niezaleznie od tego, czy udalo nam sie zmusic do uczenia sie przez kilka godzin czy kilka dni, egzamin w koncu przyjdzie i pojdzie. Zakladajac odrobine szczescia, nie oblejemy go i mamy caly ambaras z glowy.Co innego, jesli projekt, ktorego sie podjelismy nie skonczy sie sam, dopuki go nie wykonczymy osobiscie. W zeszlym roku podjalem sie takiego projektu (stworzenie content-management systemu na potrzeby swojego wydzialu). Siedzialem nad nim dniami i nocami, az wreszcie udalo mi sie go skonczyc w styczniu, przed wyjazdem do Wielkiej Brytanii.Problem polega na tym, ze udalo mi sie go skonczyc w srodowisku Windows, a teraz musze go przeniesc na serwer unixowy. Zadanie niby niezbyt zlozone, ale ciagnie sie za mna od kilku dobrych miesiecy, z tego powodu, ze za kazdym razem gdy usiade spowrotem do tego kodu...Wiecie jak jest z ta nauka... po prostu nie idzie... a do tego nie mam uprawnien admina na serwerze, a sam admin jest zbyt zajety, zeby mi pomagac... straszna sprawa.No nic, ogolnie jest to lekcja na cale zycie moje; a nawet kilka lekcji:- nigdy nie pracuj tak ciezko, zeby (za przeproszeniem) rzygac tym co robisz- nie podejmuj sie projektow, ktore normalnie realizowalaby brygada 10 osob- jesli juz czyms (za przeproszeniem) rzygasz, to podziel to na male porcje i wykonuj je pojedynczo, zeby nie zwariowac...No nic, koncze marudzenie i ide cos zrobic...</p>"},{"location":"blog/2003/05/30/cure-for-pain/","title":"cure for pain","text":"<p>leze sobie slucham morphine'cure for pain'samotny samotnikna scianie, na czerwonych pierdolonych drzwiach codziennychcodzienny czerwony napis'in case of fire'instrukcja nie przeczytanagdzie instrukcja 'in case of none'?248 magiczna liczba logikinawet zabawa szklanymi paciorkami dzis nie ciagnienawet imprezyco za zmora, uczucie bez nazwynie samotnosc nie nudaapatiaapathy a surrogate namefor a surrogate emotion\"Hold both hands against the door and dig your feet into the floorTell ya there's no map and there's no clueOf where to go and what to doWho to dog and who to ride and who to holdForever by your sideMary won't you call my name\"</p>"},{"location":"blog/2003/05/30/pogoda-w-bradford/","title":"Pogoda w Bradford","text":"<p>O pogodzie tutaj moglbym napisac wiele, ale bardzo duzo bym sie powtarzal, bo prawie sie ona nie zmienia.To znaczy, czasem pada np. 5 razy dziennie, albo w poziomie, zamiast w pionie, ale poza tym jest tak samo kazdego dnia.Slonce kazdy w zyciu widzial, choc jest to raczej niecodzienny widok i kiedy sie pokazuje ludzie wychodza na trawniki, zeby sie mu przygladac.Slyszalem opowiesc, ze w zeszlym roku w czerwcu bylo tak bardzo cieplo, ze ludzie... zdjeli kurtki...No coz... Dzis prawie wybuchlem gromkim smiechem, choc raczej smiechem czlowieka doporowadzanego do szalenstwa. Stalo sie to dlatego, ze w Bradford nareszcie zaczelo robic sie w miare cieplo. Temperatura 20-25C, 3 dni sloneczne pod rzad!!! \"Wreszcie\", pomyslalem, \"przeciez juz koniec maja.\"Gdy spotkalem znajomych (i to wlasnie doprowadzilo mnie do panicznego, tlumionego smiechu) oswiadczyli ze stoickim spokojem, ze jest to 'heat wave' i ze nalezy sie tym cieszyc, bo bedzie trwalo gora kilka dni...&lt; hi hi hi hi &gt;Na szczescie niedlugo uderzam do Madrytu. Dwa miesiace w temp 35-45C beda mila odmiana :)</p>"},{"location":"blog/2003/05/31/motion/","title":"Motion","text":""},{"location":"blog/2003/05/31/nowa-europa/","title":"Nowa Europa","text":"<p>Z mojej ulubionej serii pt. Nowa Europa, dzis mialem bardzo przyjemne doswiadczenie... Odwiedzilem historyczne miasto York (ten stary) w polnocnej Anglii. Miasto stare i piekne, chociaz po tym co o nim wczesniej slyszalem bylem troche zawiedziony. Glowna atrakcja miasta jest York Minster -- wielka anglikanska katedra i mur obronny, po ktorym mozna sie przejsc na przyjemny spacer.Galerie sztuki odwiedzilem dwie. W Impressions Gallery byla dosc ciekawa, choc moze troche zbyt doslowna (jak na gusty moich wspoltowarzyszy) wystawa fotografii Max'a Kandhola zatytulowana 'Illustrations of Life'. Przedstawiajala ona zdjecia starego czlowieka w szpitalu. Niektore zdjecia byly piekne, ale ostatnie dwie serie zatytulowane 'Final transfusion' i 'Ash' byly dosc... zreszta interpretacja zawsze 'in the eye of the beholder'. Reflektujac nad smiercia i ulotna natura zycia przeszlismy do York Art Gallery, w ktorej odkrylismy kilka ciekawych prac wspolczesnych i cala mase staroci, za realizmem ktorych niestety nie przepadam.No dobrze, ale o co chodzi z Nowa Europa? No wiec, na wycieczce tej bylem nie sam, ale w piecioosobowej grupie. Grupa ta laczyla w sobie wiecej niz Europe (Dania, Anglia, Polska), bo rowniez Azje (Chiny i Japonia). Jedzadz lunch (oczywiscie Fish and Chips) i pijac herbatke (w pretensjonalnej Betty's) mielismy szanse omowic wiele zagadnien miedzynarodowej polityki... Oczywiscie przedewszystkim obgadywalismy pana Busha :)Towazyszyla nam przepiekna Japonka, ktora przyjechala na kilka dni z Kirgizstanu, wiec mielismy rowniez szanse porozmawiac troche o tym malym, biednym, post-sowieckim kraju. Gdzie poza Europa, no gdzie?</p>"},{"location":"blog/2003/06/02/the-power/","title":"The Power...","text":"<p>I have not been watching television for over 4 months now. What helped me most, was the fact that I don't have a TV here in Bradford, but I wanted to try living without TV anyway. There are TV rooms available for me and most of my friends own receivers, so it would not be a problem to watch 'the telly' had I chosen to do so. But I chose not to.\"The power of trust\"I must say that after four months, you look at television differently. If you see it everyday, you get used to it and accept it as it is. However, if you see it for the first time after a long break, what you see is horrifying.\"The power of experience\"I visited a friend yesterday, and his kids were watching TV. When I came into the room I saw two (otherwise very active and talkative) children staring silently at the screen. A commercial was on, showing scenes from movies and shows. Each picture lasted less then a second. Less then the blink of an eye, almost subliminal and the colours were brighter and more attractive than any you could see in the world. The children were sitting there hypnotised, while a soft voice was explaining that they can buy a new packed of cable TV, to get even more shows!\"The power of reporting\"Today I went to buy some food from a restaurant. While waiting for my order, I noticed that CNN was on. First some business news was on. The formula was similar to that of the commercial: pictures were shown (none of the pictures lasted more than a few seconds), while a voice speaking very, very quickly was explaining the rise and fall of certain stock options on the market.After a few 'spots' like that, a commercial came and advertised CNN itself. Formula again the same: sub-second images from various news reports, shown in full colour and a soft seductive voice saying:\"The power of CNN\"A lot has been said about TV making people stupid, so much so, that hardly anyone listens anymore. But not enough has been said about how much you can gain if you just stop watching it.Why does TV make us stupid?This is fairly simple and most people know it, yet they choose to ignore it... If you have a screen which displays constant movement, your attention is drawn to it. The  images which you see don't last long, you don't have enough time to consider what you're looking at, before the next one arrives. Thus you must resign to sit there mindlessly as your brain is bombarded by superfluous information. The images we see are meant to be very attractive: colourful, sexy, funny and/or 'important'. We are taught to enjoy this activity and many people consider it to be a rest! But it is not a rest, it is one of the most draining activities. After watching TV for some time, your brain gets tired because it cannot keep up with all this information. Many people say that in that situation their brain just 'switches off', thus allowing it to rest. I agree that it switches off, but it isn't resting. How many times after watching tv for hours did you get up with this great feeling of rest? If you stop watching TV do you feel fresh and awake like after you wake up?The fact is that your brain does switch off, and it stays off.Watching TV drains you intellectually. How do I know? Well try not watching TV for a couple of months and you'll see.I am now more active and creative then ever. After \"I quit TV\" I suddenly had much more time for myself. More time to read, more time to rest, more time to party.Suddenly I have all these ideas, all these thoughts come to me, I don't even have time to write them down, but I enjoy them immensely. You should really try it!I wonder... Maybe someday people will realize how healthy quitting TV is and we'll shake this habit like we're trying to get rid of smoking now.Do we have to have proof that TV causes stupidity like we have proof that smoking causes cancer? Do we need a 'Psychiatrist General Warning'? I hope not, because we will have to wait very ling for that...</p>"},{"location":"blog/2003/06/05/poland-vs-iraq/","title":"Poland vs. Iraq","text":"<p>\"Poland occupies Iraq, because it won the war against it. Everybody knows that Iraq had been Poland\u2019s primary enemy for centuries. Iraq had coveted Poland\u2019s freedom, its enormous wealth, and its fair-haired women, whose beauty is famous throughout the world. Iraq\u2019s biggest dream\u2014as every child knows\u2014was to destroy our 1,000-year-old culture and civilization, to conquer our fertile lands and elegant cars, and to sterilize the every Polish male so they could be eunuchs in Baghdad harems.\"The quotes come from one of the best articles I read recently. It was written by Andrzej Stasiuk and published in  Allgemeine Zeitung, Forum and the World Press Review.You can find it here and you should read it if you want a good laugh.\"I wanted to get into a better mood, so I switched on the radio. A government minister said that 'our presence in Iraq is very important, since we have an extensive experience in transformation'.\"Yes, we Poles know all about transformation. If we were to decide the way forward for Iraq, it would first sell everyting it could and then join the European Union :)</p>"},{"location":"blog/2003/06/06/strobe-life/","title":"Strobe life","text":"<p>(pub)(party) (music) (party-music)(people) (flashing ligts) (screens) (drinks) (drink) (cigarettes)(words) (stobe conversations)(friends?)(party or die)(another pub)(more partymusic) (partypeople)(intercourse of disconnected realities)(would you like to be a celebrity on a box of margarine?)What if i don't like it? What if it means nothing?Stay home, rest, wait.Find reality within others or myself, but not at this party.\"Go to another party and hang myselfgently on the shelf\"</p>"},{"location":"blog/2003/06/08/reductio-ad-absurdum/","title":"Reductio ad absurdum","text":"<p>Reading Wilber, I begun to contemplate an old problem, which he mentions a few times in his book. The problem is that of \"What is consciousness?\"I remember talking about this years ago with friends, when I was arguing the body-mind duality, while one of my friends took the rational, reductionistic stance by which he claimed that our consciousness is but a byproduct of biochemical reactions in our brains. Many scientists seem to believe that this is the correct approach to studying the mind, and claim that one day we will be able to view, explain and control a person's experiences by manipulating their neurons. In his integral postmodernism Wilber tries to do away with such reductionisms and talks about the brain and the mind as two aspects of one holon (indivisible entity). The brain is the outside aspect of this holon (existing in what he calls the \"it domain\"), while the mind is its inside aspect (in the \"I domain\").He claims there is no way to experience another mind, because it will always be on the other side of another \"I\". Because holons are indivisible, we cannot dissect another person\u2019s brain in order to get into their mind. In fact any dissection will destroy both the brain and mind, leaving us with a collection of neurons (also holons in their own right).I'd like to affirm this view, because it seems quite obvious and dissolves the original problem, making both brain and mind equally real in their own domains. The mind may be correlated with the inner workings of a brain, but it is not those workings. Just take a very simple nervous system, of an earthworm for instance. If I remember my biology, this creature possesses only a small number of neurons, correlated into a simple network, which allows it to respond to such stimuli as heat, mechanical stress, physical and chemical composition of its environment. We may very well explain and control it's reactions (ergo experiences) by manipulating these parameters, but we will never be able to be say what it feels like to be an earthworm. We shall never fully understand what it's experiences are, we can only observe the reactions. We can only access it's surface, never it's depth.People often rejected claims that simpler organisms have any consciousness. I do acknowledge, that they may not posses self-consciousness, intelligence and other aspects of our mind, but they do have their minds of their own. To deny this is an all too human chauvinism, which I hope will die along with modernity.</p>"},{"location":"blog/2003/06/08/what-a-day-this-has-been/","title":"What a day this has been.","text":"<p>What a truly incredible day this has been for me. So many things happened and each one was grander then the former. I am exhausted, but very happy, very alive :)It all started early in the morning, when I was lying sleeplessly in bed (after a coffee too strong too late) having read quite a bit of Wilber's 'Brief History of Everything'. Right then, in the early hours of the morning I had a brief flash of realization, which allowed me to order his integral approach to cognition and consciousness into a 4 dimensional hyperspace geometrical model. Then reducing the four dimensions, to what he refers to as The Big Three, I was able to comprehend a postmodern integral ethics. I know, this means nothing so far. It's just my shorthand for what I read, but I promise to write an essay about it soon.Later, after a few hours I awoke and went to what was supposed to be the gist of today -- a Meditation Retreat Day at the Kashyapa Buddhist centre here. The day consisted of three meditations, each of which had a lesson for me. The first one (On the precious human life) reminded me how fortunate I am to be alive, well and able to lead a good life with a pure mind. The second (On death and impermanence) had a very personal message for me. It made me realize what is the greatest obstacle on my spiritual path, namely self-grasping. The last meditation (On the law of Karma) made me realize, that putting the integral ethics (the early morning idea) into practice could guide me on my path and give my actions meaning for the benefit of others. It was a truly beautiful and inspiring retreat.After leaving the centre I walked to Lister Park, a place I had previously heard of, but never visited. Upon entering I realized that this is exactly what I was missing in Bradford: a park with water, a botanical garden, a water-garden and a gallery. The Cartwright Gallery, situated in a very nice Victorian (I think) building, houses quite a nice collection of art -- mainly of Indian origin (!).Unfortunately I got there only a half an hour before closing and I only had time to fully contemplate a temporary exhibition, entitled 'Made in India'(!). Quite an interesting exhibition, that, consisting of objects made by Indian peasants out of used tinfoil. Fascinating, yet disturbing. We truly live in different worlds. When I left the gallery I started to head for home, but as I wondered through the park I noticed a gigantic slim tower in the distance. My curiosity got the better of me and I headed to explore an unknown part of Bradford. What I discovered took my speech and breath away.I came to the Manningham Mill. Imagine a building which stretches as far as your eyes can see, full of broken windows through which sky evidences a lack of any roof. Imagine a metal staircase on one of the walls, leading from one level to another, but without any stairs. Imagine the emptiness of a building which takes you minutes and minutes to walk around. Imagine birds as its only inhabitants, flying freely through it's vast open spaces. Imagine finally looking up at the gigantic tower and realizing that it is a chimney of a colossal furnace which boiled water for the mill's mammoth steam engine. Imagine low passing clouds above the chimney vaguely suggesting that this monstrous decaying corpse was once a living entity in which hundreds, maybe thousands of people worked every day.And suddenly I was there. I was there, back in 1870 when the mill opened, I was one of the people brought in from India to the heartland of the Empire. I worked in the mill everyday, I saw the sweat the pain, the tears and blood of hardworking men and women in the mill. The Mill. It remembers the anguish and hope, the happiness and joy of this new found home, new found luxury, new found life in the Empire. And then, just as suddenly I was back in 2003. The Mill was dead, but the people still live here, impoverished, ashamed. Some still remember the glory days of Bradford's textile industry. Some probably still come here to watch and pay their deeds to this rotting carcass of industrial modernity.This adventure was my karmic reward for diligent meditation, but karma is not without it's sense of irony. As I gathered my breath and regained my composure, I walked back toward the homeward street... only to pass Endy -- a brand new shop selling textiles imported from India.All this was quite enough for one day of any mortal, and yet this was the day of the European referendum in Poland. My eyes filled with tears of joy as I watched pictures from my home town and heard the news that over 80% of my countrymen voted in favour of joining the EU, with attendance of almost 60%. Poland is finally coming back to Europe after over a century of banishment.What a day this has been.</p>"},{"location":"blog/2003/06/14/at-five-in-the-morning/","title":"At five in the morning...","text":"<p>I have not yet progressed very far in my meditations. The only concepts I have fully realized are two. One, how precious this life is and how important it is to create good karma by trying to live the dharma; and two, the unreality of existence.The latter concept has always been fascinating for me philosophically. I have long ago decided that 'the world does not exist' and I lived accordingly, selectively contemplating only the desirable experiences, while not dwelling upon the unpleasant. Physical world is unreal, subjective. You experience it only through your senses, which vary with your mood, attitude, prior experiences. What you see is different then what others see, so how can we talk about any reality beyond the subjective, or inter-subjective at best? But if I punch the wall, the wall seems very real, causing pain in my hand. This is because my hand is also a part of this world and as such is equally unreal as the wall. My body is a part of this unreal system, and a system it is. Despite it's subjectivity, the physical world is consistent. Due to this fact rational science can exist. At some point I embraced solipsism but was fighting it's main argument: \"I think therefore I am\". For if all is unreal, why should my self be exempt from this law? A consciousness (or Ego) is the sum of one's experiences, feelings, memories. All of them are equally subjective, equally unreal. My ego is a sum of unreal thoughts. How do I know this? Because when I don't think, my ego ceases to exist! However I am still here. Or am I not here? Here is equally unreal, therefore I am everywhere... You noticed I use the words subjective and unreal interchangeably. The reason for this is my long struggle with the concept of 'Truth'. The truth is that which is objective, real and therefore absolute. There is no such thing in the world! In this world we may only have inter-subjective or subjective half-truths. Three kinds of these half-truths exist: scientific claims may be valid, subjective experiences may be beautiful, inter-subjective morals may be good. No statement can be absolute, none can be true.The absolute is only beyond the world, it is inside each being.</p>"},{"location":"blog/2003/06/26/buddysta-i-kapitalista/","title":"Buddysta i Kapitalista","text":"<p>\"W ko\u0144cu to ludzie zamo\u017cni robi\u0105 znacznie lepszy u\u017cytek ze swoich funduszy ni\u017c rz\u0105dowi biurokraci.\"-RAYMOND J. KEATING (IHT)Otaczaj\u0105 mnie meble, komputer, telefon, za oknem droga, sklepy, samochody. Wszystkie te rzeczy s\u0105 dla mnie dost\u0119pne, s\u0105 gotowe s\u0142u\u017cy\u0107 mi pomoc\u0105, gwarantowa\u0107 wygod\u0119, bezpiecze\u0144stwo. Za ka\u017cd\u0105 z tych rzeczy z kolei stoj\u0105 niezliczeni ludzie, kt\u00f3rzy po\u015bwi\u0119caj\u0105 sw\u00f3j czas i energi\u0119 by rzeczy te by\u0142y zawsze w zasi\u0119gu moich r\u0105k. Jak\u017ce niesko\u0144czone jest ludzkie dobro otaczaj\u0105ce mnie ka\u017cdego dnia, jak \u0142askawi wszyscy ludzie...Ten buddyjski spos\u00f3b patrzenia na \u015bwiat jest raczej obcy nam, ludziom zachodu. Jeste\u015bmy bardziej skorzy dopatrywa\u0107 si\u0119 chciwo\u015bci ni\u017c dobra w motywach otaczaj\u0105cych nas ludzi. After all, business is business.  Kt\u00f3ry z tych sposob\u00f3w patrzenia na \u015bwiat jest lepszy lub bardziej inspiruj\u0105cy to temat na d\u0142ug\u0105 dyskusj\u0119, ale kto ma tu racj\u0119? </p> <p>Patrz\u0105c racjonalnie na postaw\u0119 Buddysty i kapitalisty mo\u017cemy \u0142atwo do\u015b\u0107 do wniosku, \u017ce racji nie ma ani jeden ani drugi. Wynika to z prostej przyczyny, mianowicie takiej, \u017ce niekt\u00f3rzy kieruj\u0105 si\u0119 bardziej wyrozumia\u0142o\u015bci\u0105, a niekt\u00f3rzy g\u0142\u00f3wnie chciwo\u015bci\u0105. Nikt jednak, a tym bardziej \u017cadne spo\u0142ecze\u0144stwo czy cywilizacja nie kieruje si\u0119 tylko jednym.W takim razie, co jest motorem decyzyjnym napedzaj\u0105cym wsp\u00f3\u0142czesn\u0105 gospodark\u0119? Jest nim to co ekonomi\u015bci lubi\u0105 nazywa\u0107 \"niewidzialn\u0105 r\u0119k\u0105 rynku\". Jest to \u0142\u0105czny skutek wszystkich decyzji podejmowanych przez zarz\u0105dy korporacji, rz\u0105dy i osoby handluj\u0105ce akcjami. Zrozumienie dzia\u0142ania rynku okazuje si\u0119 bardzo trudne, a przewidywanie gdzie niewidzialna d\u0142o\u0144 zabierze nas w przysz\u0142o\u015bci (nawet niedalekiej) jest praktycznie niemo\u017cliwe. W 2002 roku Daniel Kahneman otrzyma\u0142 nagrod\u0119 Nobla za wykazanie, \u017ce ludzie b\u0119d\u0105cy odpowiedzialni za decyzje finansowe cz\u0119sto zachowuj\u0105 si\u0119 irracjonalnie, wi\u0119c modelowanie rynku na podstawie racjonalnych przes\u0142anek jest niemo\u017cliwe.Jedno jest jednak pewne, kto ma pieni\u0105dze ma w\u0142adze. To w\u0142a\u015bnie ludzie bogaci, a szerzej, ich korporacje decyduj\u0105 gdzie i kogo zatrudni\u0105, od kogo b\u0119d\u0105 kupowa\u0107, z kim b\u0119d\u0105 wsp\u00f3\u0142pracowa\u0107, a z kim nie. Te decyzje maj\u0105 namacaln\u0105 warto\u015b\u0107 dla ludzi, gdy\u017c oznaczaj\u0105 one mo\u017cliwo\u015b\u0107 znalezienia pracy lub jej brak.A wi\u0119c kto powinien mie\u0107 pieni\u0105dze? Pan Raymond J. Keating twierdzi, \u017ce najlepiej spisuj\u0105 si\u0119 one w r\u0119kach bogaczy, a nie w r\u0119kach rz\u0105d\u00f3w. To, \u017ce rz\u0105dy potrafi\u0105 pieni\u0105dze marnowa\u0107 wiemy wszyscy. Z do\u015bwiadcze\u0144 komunizmu wiemy, ze je\u015bli jedynie aparat w\u0142adzy dysponuje kapita\u0142em to skutki s\u0105 op\u0142akane. Ale z drugiej strony sp\u00f3jrzmy na Afryk\u0119. Ten kontynent jest tak biedny, \u017ce trudno m\u00f3wi\u0107 o pieni\u0105dzach posiadanych przez tamtejsze rz\u0105dy. Pieni\u0105dze kt\u00f3rymi dysponuj\u0105 te zad\u0142u\u017cone kraje s\u0105 tak niewielkie, \u017ce kilka wi\u0119kszych korporacji mog\u0142oby je wykupi\u0107, gdyby tylko im si\u0119 to op\u0142aca\u0142o. Decyzje podejmowane przez \u015bwiat biznesu cz\u0119sto oznaczaj\u0105 by\u0107 albo nie by\u0107 dla pa\u0144stw Afryka\u0144skich. Mamy wi\u0119c wspania\u0142y model tego co dzieje si\u0119 gdy naprawd\u0119 rz\u0105dz\u0105 korporacje. Te mi\u0119dzynarodowe giganty cz\u0119sto zapewniaj\u0105 wielkie zyski i zatrudnienie swoim ameryka\u0144skim lub europejskim oddzia\u0142om, ale z Afryki importuj\u0105 tylko surowce narzucaj\u0105c ceny o jakich nie mog\u0142yby marzy\u0107 w domu.No wi\u0119c komu da\u0107 te nieszcz\u0119sne pieni\u0105dze? Czy powinny one pozosta\u0107 na kontach bezdusznych przedsi\u0119biorstw, czy trafi\u0107 do kieszeni biurokrat\u00f3w? W naszym demokratycznym \u015bwiecie nie mo\u017cemy pozwoli\u0107 na to, \u017ceby w\u0142adza pozostawa\u0142a w r\u0119kach nieobieralnych w\u0142adz \u2013 zarz\u0105d\u00f3w wielkich firm. Moim zdaniem, podatki powinny by\u0107 tak niskie, \u017ceby nie d\u0142awi\u0107 gospodarki, ale nie ni\u017csze. Aby demokracja by\u0142a rzeczywi\u015bcie w\u0142adz\u0105 ludu, a nie \"niewidzialnej r\u0119ki rynku\" podatki musz\u0105 by\u0107 wysokie. Tylko w ten spos\u00f3b za decyzjami podejmowanymi przez obieralne gabinety, sta\u0107 b\u0119d\u0105 \u015brodki konieczne by je realizowa\u0107. Polsce jeszcze daleko do podejmowania takich decyzji. Musimy najpierw rozkr\u0119ci\u0107 nasz\u0105 gospodark\u0119, obni\u017caj\u0105c podatki i redukuj\u0105c biurokracj\u0119 na kt\u00f3r\u0105 nas nie sta\u0107. Tym nie mniej, kiedy to ju\u017c si\u0119 uda, to przyda nam si\u0119 pa\u0144stwo opieku\u0144cze, kt\u00f3re zapewni nam edukacj\u0119, zdrowie, drogi, dynamiczn\u0105 kultur\u0119, etc. Musimy te\u017c my\u015ble\u0107 w wi\u0119kszych skalach. Wkraczamy do opieku\u0144czego super-pa\u0144stwa jakim jest Unia Europejska, niech nam wyjdzie to na dobre. Afryka jednak pozostaje biedna, wiec potrzebne s\u0105 jeszcze wi\u0119ksze, globalne struktury, kt\u00f3re dba\u0107 b\u0119d\u0105 o zachowanie zasad fair-trade. Czy doczekamy si\u0119 uczciwej konkurencji dla \u015awiatowej Organizacji Handlu?</p>"},{"location":"blog/2003/06/27/next-step-for-p2p/","title":"Next step for P2P","text":"<p>Next step for P2PThe struggle of RIAA to control P2P is a truly fascinating battle to follow. First they shut down Napster (and Audiogalaxy), the P2P community responded by creating decentralizd networks. Then they tried flodding the networks with \"fake\" files, the community counterd with hashing.Now they want to go after individual users!But fear not, the developers have an answer up their sleeve. The way the RIAA tries to go after users is to obtain their IPs and then their identity from the ISPs. The internet is based on the TCP/IP protocol, which requires both sides to know their IPs in order for any information to be exchanged. There is no way to really hide or mask your own IP, except one...</p> <p>Distributed proxyingIn order to mask your IP you need to go through a PROXY server. This means that you send your TCP request to a server, which then sends it on its way, recieves the answer and sends it back to you. Unfortunatelly, in this case the owner of the proxy server could be held responsible by the RIAA....Alas, there is an answer: incorporate the proxy software into the P2P client.If you do that, then you can assign every user a unique number (call it the session number) and make him anonymous. The user would send all his requests not directly to another user, but to a randomly chosen user nearby. The request would wonder a little trying to find the user with the appropriate session number and then come back the way it came. It would be P2P2P2P rather then P2P :)The process would have to be optimized of course (maybe by incorporation of super nodes), and even then the speed of the network would fall. But just remember how dramatically the initial decetralization of P2P networks slowed them down. Network bandwith is going up and will continue to do so, eventually these obsicles will be overcome.Moreover, a session number does not have to be constant. It can change everytime you restart your program, or even more often, making you an untraceable moving target.I am  not sure how much of this is already being done by Filetopia, but my advice is: If you are in USA and you share a lot of files, switch to Filetopia until the other networks incorporate some distributed proxying. Add a comment... </p>"},{"location":"blog/2003/07/02/cinema-is-still-art-isnt-it/","title":"Cinema is still art, isn't it?","text":"<p>There is a certain mode, a tendency in the American cinema with which we are all too familiar. All the films regardless of gender are supposed to have Great Actors, who don't act; fine scripts in which everything is explicitly laid out; an emotional scene with high pitched violin music to make you cry and a happy ending. These movies I no longer can watch, they stopped having a meaning for me some time ago. Their predictable stories and superficial morals or dumb-witted humor make me feel disgusted, self-conscious and shamed.There are exceptions to the rule however. Fine movies are still made, despite their apparent commercial failures. Those are the ones which make us think again, the ones which make us feel something new. They are the ones which people often refer to as ambitious, but I would venture to claim they are anything but. Ambition assumes a desire for distinction, wealth or fame. The directors making those movies are aware that they will most likely receive none of these. They will not attain wealth or fame, and the only distinction they may get is from the few people who still appreciate cinema as art.I have hunted for these films in the past years and will attempt to make a list. This list shall contain only new films (from the past 5 years, say), which clearly went beyond the set schema of Hollywood and ventured into the unknown.Let me start with films I have seen this year.2002Solaris (Steven Soderbergh)Punch-Drunk Love (Paul Thomas Anderson)About Schmidt (Alexander Payne)Adaptation (Spike Jonze)The Hours (Stephen Daldry)Films, as any other art form, philosophy or school of thought, depict and map our mass-consciousness. The above movies are true to this ideal, and yet if you watch them you might notice that they all share a common characteristic. They all talk about people who are losing their sanity. Why this is, I do not know, but in a world, which is starting to look more and more orwelian, we should be aware of it.Older films include:2000Requiem for a Dream (Darren Aronofsky)1999Magnolia (Paul Thomas Anderson)Titus (Julie Taymor)American Beauty (Sam Mendes)Cube (Vincenzo Natali, non-hollywood, independent and good!)Meanwhile in Europe...2000Dancer in the Dark (Lars von Trier )1999 All About My Mother (Pedro Almodovar)Run Lola Run (Tom Tykwer)This list shall be continued and updated whenever I rememer anything else. If you think that a film should appear on this list or if you think that something doesn't deserve a nomination, then let me know and I will consider it.Help me out... what other fine films were there?</p>"},{"location":"blog/2003/07/02/credit-where-credit-is-due/","title":"Credit, where credit is due","text":"<p>Reading my blog, you might get the impression that I am anti-american. What a wonderful term, abused right up there with WMD and terrorism, the term anti-american is used by people in Washington to describe and discredit anyone who dares to voice an opinion out of step with the administration.I am not anti-american however, and I want to praise the strength with which the Bush administration supported the Middle East 'road-map' to peace. Today Israeli forces pulled out of Betlehem! This is a major step towards a withdrawal of Israelies from territories under the Palestinian Authority and thus a major step towards peace between two countries. My hat is off today for Colin Powel, Condolezza Rice, and even Dubya himself.Unfortunatelly I cannot end this on such an optimistic note. The fact that I am not a hard-headed anti-american doesn't make me incapable of criticizing the Bush administration for its mistakes. And what I heard today is hair-raising. We all know that the administration does not support the International Criminal Court, but today it issued a statement saying that it will not give any military aid to countries which did not sign an exemption bill, which would exclude american citizens from prosecution by the ICC in the country. 5 countries in the EU accesion group would be effected and even more so Columbia, which normally recieves aid from the US.The long-term importance of the ICC and the International Court of Justice cannot be overestimated in our global world. It is shortsighted, foolish and egotistic(imperialistic) of powerful countries not to recognize a need for international institutions.In any case, keep up the good work America, but stop being such ass-holes when it comes to other issues!</p>"},{"location":"blog/2003/07/11/soit-happens-again-again-i/","title":"So...It happens again. Again I","text":"<p>So...It happens again. Again I will move. New people, new faces, new places.I'm moving to Madrid tomorrow, well with a couple of stops along the way...It's a strange feeling to leave a place, knowing that you will probably never come back again. Even if it is miserable Bardford. All the people you were starting to get to know will suddenly be distant friends on the other side of the e-mail...Oh well, such is life if you want to travel. Tomorrow I will forget my sentimentality and embrace adventure.Moving on to bigger, better things. Always.</p>"},{"location":"blog/2003/07/21/ni-un-dia-sin-poesia/","title":"Ni un dia sin poesia!","text":"<p>So, finally. After many adventures I ultimately arrived in Madrid. I am staying with a bioinformatician friend of mine called Alvaro over the weekend and on Monday I will move into my own room in Plaza de Espana.Adventures I did have. After leaving Bradford, arguably one of the least pleasant places, I traveled to unquestionably the most beautiful places on Earth: south of France, Costa Brava, Barcelona and finally Madrid.My first stop was sunny Barcelona, where I was to spend one night. The city welcomed me with a scene from an Almodovar film. A ride on a train from the airport to the city accompanied by classical music and beautiful, rested, full of live Spaniards and curious holiday makers. All bathed in surreal colors of Catalan sunshine. I left the train full of hope and joy, took out my hand-drawn plan to direct myself to Kabul Hostel, where I was to sleep.  At this point however Providence decided to teach me a lesson and send me on a heedless trek in the opposite direction to the one I was to follow. After about half an hour I realized my mistake and had to turn back... Finally after about an hour and a half I arrived at the hostel, but after dragging my 30kg suitcase for so long I had blisters on all my fingers, on some fingers more then one, and three of them already burst :|This was not a good start to my journey and on top of that the hostel was fully booked. Thankfully I found another, but after all that I had not much energy to go site seeing. I slept for a while and walked only a few hours before really going to bed.The next day I traveled to France -- to Perpignon and  then to a small town nearby called Elne. There I was welcomed by Marcus, a relative of Dean my Bradford boss. What a wonderful person he is, wonderfully disorganized and passionately in love with the South of France. I understand him fully however, as over the few days I stayed with him he showed me some places which were so breathtaking that no words of mine will do them justice. Cliffs hundreds of meters high dropping straight into the blue-green Mediterranean sea, small villages where life is a constant appreciations of infinite beauty. I chanced to be there on the 14th of July, the French independence day, when each of these villages had a fireworks display. We watched one and then drove back to Elne surrounded by the Pyrenees and brightly illuminated colorful sky... I will also never forget swimming in the Mediterranean and looking back on mountains forming the background of a coastline covered with palm trees. Amazing. It is no coincidence that so many famous painters come from this area.Marcus is a painter and our long talks about life and art awoke a curiosity within me which I hadn't realized was dormant for many years. I have not picked up my sketchpad yet, but I would really like to try drawing... Maybe someday. On one of my days in Elne I took a ride along Costa Brava to Figueras. There I visited the Museum of Salvador Dali, rightfully named 'the largest surrealistic object in the world'. The museum is constructed as a sanctuary for Surrealism and it was designed in its entirety by Dali himself. As you enter you see a car standing in the room ahead of you. As you enter that room you realize that it is a beautiful shining black Cadillac, filled with plants and algae covering a motionless plastic driver. The Cadillac forms a pedestal for a 10 meter high column made out of car tires atop of which a statue stands. This statue is reminiscent of the ancient Gaia mother-figures and she stands there with open arms, naked, covered only with gold. Behind all this on the wall is a gigantic version of one of Dali's paintings... You really would have to see it to believe it :)The museum is filled with Dali's paintings, drawings, objects, holograms, stereoscopic paintings, jewelry... I saw there one of my favorite Dali paintings, Leda Atomica and others: Galatea of the Spheres, Poetry of America, The Specter of Sex-Appeal, Portrait of Picasso, Soft Self-portrait, The Specter of Sex Appeal just to name a few of the more famous ones. The most amazing exhibit was Dali's jewelry however. Made out of gold and precious stones, basing on motives from his paintings. In this jewelry his painted surreal dream visions materialize and come into life in our world. And they come to life, because they move, pulsate, they live, the Royal Heart actually beats.Oh and by the way, the room which looks like the face of Mae West... it's on floor two :)Reluctantly I finally left beautiful Catalunya and came here. Of Madrid I will now only say two things. For one, until you live here, you just don't know what living in a city can be like, and two: I think I'm falling in love... with Madrid.</p>"},{"location":"blog/2003/07/22/rozmowy-z-gaja-filozofia-integ/","title":"Rozmowy z Gaja: Filozofia Integralna","text":"<p>Mike (23:56)holonMike (23:57)holon to pojecie podobne do 'atom', poniewaz dotyczy tego co niepodzielne...Mike (23:58)ale nie znaczy to, ze holon jest maly, poniewaz moze skladac sie z mniejszych holonowMike (23:58)holon to zarowno atom jak i czlowiekMike (23:58)innymi slowy wszystko jest holonemMike (23:59)czlowiek sklada sie z komorek, ktore skladaja sie z czasteczek, ktore skladaja sie z atomowMike (23:59)ale kazdy z tych elementow to osobny holonMike (23:59)jesli rozlozysz czlowieka na komorki, to nie bedzie juz czlowieka, tylko komorki, ktore tez sa holonamiMike (0:00)jesli je zorlozysz na czasteczki, to nie bedzie juz komorek itd...Mike (0:00)to wzajemne wlaczanie holonow w coraz wieksze holony nazywane jest holarchiaMike (0:00)czyli hierarchia holonowMike (0:01)co ciekawe w holarchi to to, ze jesli usuniesz holony nizszego poziomu to nie bedziesz miala juz zadnych holonow wyzszego poziomu;ale nie odwrotnieMike (0:02)jesi usuniesz wszystkie komorki, to znikna wszyscy ludzie, ale jesli usuniesz wszystkich ludzi, to nie usuniesz wszystkich komorekMike (0:02)na razie jasne?Gaja (0:02)jasneMike (0:02)no to pierwsze zalozenie: holony powstajaMike (0:03)z niewyjasnionych do konca przyczyn atomy skladaja sie w czasteczki, czasteczki zlozyly sie w komorki, a komorki w organizmy itd...Mike (0:03)az powstaly organizmy swiadome!Gaja (0:04)mniej lub bardziej, heheMike (0:04)to bardzo ciekawa obserwacja... wydaje sie dosc oczywista, ale...Mike (0:04)no dobra, holony, holarchia, holony powstajaMike (0:04)teraz 4 aspekty holonowMike (0:05)kazdy holon ma swoje wnetrze i zewnetrze, kazdy holon jest autonomicznym holonem oraz czescia holonu wyzszego poziomuMike (0:05)si?Gaja (0:06)si!Mike (0:06)teraz chwila, bo potrzebuje ilustracjiGaja (0:07)okMike (0:10)no to zobacz:Mike (0:10)http://www.integralphilosophy.org/images/fig2.gifGaja (0:11)jezoo co to jest?Mike (0:11)to jest jego filozofia... Gaja (0:11)oszfakMike (0:11)no dobraMike (0:11)tu widzisz 4 kwadrantyGaja (0:12)widzeMike (0:12)I, WE, IT, oraz ITSGaja (0:12)okMike (0:12)te z lewej strony dotycza wnetrza holonuMike (0:12)te z prawej jego zewnetrzaMike (0:13)te u gory dotycza holonu jako jednostkiMike (0:13)te z dolu dotycza holonu jako czesci wiekszej calosciMike (0:14)tam jest blad... przy I powinno bys napisane (Intentional, a nie International )Gaja (0:14)no coz....Gaja (0:14)nobodys perfectGaja (0:14):DMike (0:15)za przyklad holonu wezmy czlowieka, bo tak bedzie najlatwiejMike (0:15)kwadrant I to ludzkie Ego, dlatego jest opisane IntentionalGaja (0:15)ego takie jak u freuda?Mike (0:15)tu mieszcza sie wszystkie nasze doswiadczenia, przemyslenia, etc...Mike (0:16)ego takie jak u freuda, ale w duzo szerszym kontekscieGaja (0:16)okMike (0:16)w kwadrancie IT jest zewnetrze holonu... to jest to co mozemy zaobserwowac nt. innych ludziMike (0:17)dlatego okreslone jest mianem BehavioralGaja (0:17)no tak..obserwacja..Mike (0:17)nie ma prawdziwej mozliwosci obserwowania tego co czlowiek doswiadcza, wiec mozemy obserwowac jego zewnetrzeGaja (0:17)zgadzam sieMike (0:18)w prawym dolnym rogu jest holon w kontekscie innych... dla czowiekia jest to kontekst spoleczny (Social)Mike (0:19)a WE to kontekst intersubiektywnych doznan, czyli wierzen, kultury, etc...Gaja (0:19)i lokomotywyMike (0:19)?Gaja (0:19)co to jest uroboric?Gaja (0:19)i typhonic?Mike (0:19)locomotive, to przymiotnik... zaraz do tego dojdziemyMike (0:21)jesli chodzi o podzial na te sfery to jest on w filozofii dosc stary (przynajmniej od Kanta), ale w dzisiejszym swiecie zostal on troche troche znieksztalconyMike (0:21)poniewaz tak niesamowite sukcesy odnosila w ostatnich 2 stuleciach nauka, ludzie zaczeli powoli sprowadzac wszystko do prawej polowyMike (0:22)patrzymy na wszystko z perspektywy nauk (nawet tych humanistycznych (sic!)) wiec mamy problem...Gaja (0:22)niestety...Mike (0:22)nie mamy dostepu do wnetrz holonow...Mike (0:23)wnetrza zreszta nie sa dostepne dla obserwacji, jedynie dla interpretacji... tu psychologia....Mike (0:23)no zreszta nie wazne... idzmy dalejGaja (0:23)okMike (0:24)holony ewoluuja... to znaczy z coraz prostszych powstaja coraz bardziej zlozone, jak mowilismyMike (0:24)to dotyczy tak samo sfery materii fizycznej, biologicznej, jak i rozwoju duchowegoMike (0:24)i dlatego w kazdym z kwadrandow, sa te poziomy 1-13Mike (0:26)na poziomie 1 mamy odpowiednio:IT: atomyITS: materieWE: oddzialywania fizyczneI: prehension (jak to przetlumaczyc?)Gaja (0:26)mnie nie pytajMike (0:28)no nie wazne jak przetumaczyc... oznacza to, ze na tym poziomie istnienia (na poziomie atomow) moze powstac materia, ktora oddzialuje na zasadzie reakcji fizycznych... to najnizszy z mozliwych poziom swiadomosci (prehension)Gaja (0:29)okMike (0:29)na drugim poziomie sa czasteczki, one moga prowadzic do powstania planet...Mike (0:31)na trzecim poziomie sa najbardziej prymitywne formy zycia (prokarionty), ktore moga istniec na planetach, tworzac zywe planety (Gaia systems), one maja juz pewne oddzialywania biologiczne (wymiana protoplazmy) i poziom swiadomosci zwiazany z odbieraniem prymitywnych bodzcow (irratibility)Gaja (0:31)wymiana protoplazmy...Gaja (0:31)brzmi dziwnieGaja (0:31):)Mike (0:32)no dobra, przeskoczmy do poziomu 9, bo tam zaczyna sie robic ciekawieGaja (0:32)hopMike (0:33)no wiec, na tym poziomie mamy juz ludzi, z ich zaawansowanym mozgiem i prymitywnymi strukturami spolecznymiMike (0:35)jak widzisz na wykresie przy poziomie 9tym:I: postrzeganie swiata za pomoca symboli (jezyk)WE: archaic... najprostrze systemy wierzen... wlasciwie trudno nam jest je sobie wyobrazicITS: struktura plemienna, gosporka nomadowMike (0:36)ale ludzkosc rozwijala sie dalej.... od tego momentu jest to juz coraz bardziej rozwoj duchowy niz fizyczny...Mike (0:37)fizycznie jestesmy bardzo podobni do pierwszych homo sapiens sapiens, tylko nasza kultura jest duzo bardziej rozwinietaMike (0:37)si?Gaja (0:37)si!Mike (0:37)no dobra... rzuc okiem tu:http://www.chaosforum.com/images/wilber.jpgGaja (0:38)rzucamMike (0:38)tu jest mowa o tak zwanych Validity Claims... Gaja (0:39)ale powiedz mi jedno..Mike (0:39)no....Gaja (0:39)czy to ma znaczenie ze te grupy sie nazywaja: WE I IT ITGaja (0:39)?Gaja (0:39)w sensie MY JA ONO ONOMike (0:40)znaczenia nie ma, ale jakos sie trzeba do nich odwolywacGaja (0:40)okMike (0:40)i sa I WE IT i ITSMike (0:40)tu jest znowu blad Gaja (0:40)wiec JA MY ONO ONEMike (0:41)si, ...chcialem tylko wspomniec o Validity Claims...Gaja (0:41)okMike (0:42)w kazdym kwadrancie mozesz mowic o pewnego rodzaju prawdzie (to co powstaje w danym kwadrancie moze byc sluszne na swoj sposob)Mike (0:43)W kawdrancie IT(lub jesli wolisz behawioralnym, albo naukowym) mamy VC zwiazana z prawda korelacyjna (tak sie po polsku mowi?)Mike (0:43)czy nie?Gaja (0:43)chodzi ci o wspolistnienie?Mike (0:44)nie... chodzi o to ze zdanie jest prawdziwe, jesli jest poswiadczone dowodem w swiecie fizycznymMike (0:44)chodzi o filozofie analityczna, empiryzm i naukeMike (0:44)tj. nauke przed Popperem Gaja (0:44)no to korelacja nie jest najlepszym slowemGaja (0:45)ale wiem o co chodziMike (0:45)okay...Mike (0:45)w kwadrancie Social, wazne, obowiazujace bedzie to co ma functional fit (czyli najlepsze dostosowanie do warunkow)Mike (0:46)w aspekcie kulturowym, obowiazywac powinno to co jest uznane za Dobre i Sprawiedliwe (justness)Gaja (0:47)powinnoMike (0:47)a w czysto subiektywnym kwadrancie(I) wazne jest to co jest Piekne i SzczereGaja (0:47)prawda i pieknoMike (0:47)to sa idealy wszystkich czterech kwadrantowGaja (0:47):)Mike (0:47)no dobra... i co z tego wszystkiego wynika?Gaja (0:48)to pytane retoryczne?Mike (0:48)ano wynika to, ze kazda ludzka istota i kultura musi byc rozwazana z perspektywy wszystkich 4 kwadrantowGaja (0:49)okMike (0:49)zeby ja w pelni zrozumiec musimy rozumiec jakie sa jej VC i na jakim znajduje sie ona poziomie rozwojuMike (0:49)a poziomow rozwoju ludzkich kultur jest kilka...Gaja (0:50)ten rysunek jest bardzo ciekawy, mam nadzieje ze mi sie na egzaminie przyda..Mike (0:50)to jest pierwsza postmodernistyczna filozofia, ktora wprowadza mozliwosc kwalifikowania, wartosciowania kultur na wyzsze i nizszeMike (0:52)chodzi o to, ze na podstawie modelu Wilbera powstal model o nazwie Spiral Dynamics, ktory skupia sie na rozwoju ludzkiej duchowosci i kulturyMike (0:53)rozroznia on 8 poziomow, ktorym zamiast nazw nadane zostaly koloryMike (0:54)http://www.cop.com/toe2.gifMike (0:55)widzisz to?Gaja (0:55)widzeMike (0:55)no wiec widzisz to 8 ludzkich poziomow... omowmy je szybciutkoMike (0:56)beige: mentalnosc oparta na instynktach, trudno mowic o kuturze, ale wiemy ze byla...Mike (0:57)nastepny poziom purple: mentalnosc magiczna... ludzie wierzyli w magie, wierzyli ze sa czescia ziemii, ktora moze sie na nich gniewac, wierzyli ze bogow mozna udobruchac ofiarami, etc...Mike (0:59)red:  poziom egocentryczny... ludzie nauczyli sie, ze sa odrebni od ziemii, ze moga ja nawet w pewnym stopniu zmieniac (rolnictwo), powstal podzial na ludzi silniejszych i slabszych... ustroj feudalny, slina wiara w bogow, ktory mieli sile absolutnaMike (1:01)blue: poziom mityczny, oparty na wspolnych wierzeniach, wczesne narody, czesto dyktatury, ktolestwa, mentalnosc grupowa (etniczna)Mike (1:04)zgaduje, ze juz ci sie znudzil Wilber...Gaja (1:05)nie!Gaja (1:05)to bardzo ciekaweGaja (1:05)prawie tak ciekawe jak filozofia sredniowiecznaMike (1:05)no dobra... wyobraz sobie Busha...Gaja (1:05)musze?! Mike (1:06)no nie, ale jego wierzenia w sile Imperium Ameryki sa silnie blueGaja (1:06)ja bym powiedziala ze blue, red and whiteMike (1:06):)Gaja (1:06)kolory rewolucji, heheMike (1:07)no tak, ale jesli chodzi o blue to wiaze sie on z silnym poczuciem misji (Bog zeslal Ameryke na swiat, zeby zaprowadzila pozadek)Mike (1:08)blue nie patrzy poza wlasna grupe, kraj, imperium, a decyzje podpiera dogmatami (jak dogmat WMD) a nie racjonalnymi argumentamiGaja (1:08)ameryka winkielriedem narodow!!Mike (1:09)no dobra, ale nastepny poziom to Orange, gdzie znajduje sie wiekszosc ameryki i w sumie wiekszosc spolecznosci cywilizowanego swiata Mike (1:10)i Orange to modernity... wspolczesnosc, z wszystkim co w niej dobre i zleMike (1:11)dobra jest tu napewno moralnosc post-konwencjonalna... wiemy, ze moralnie slusze moga byc rzeczy sprzeczne z biblia...dobry jest racjonalizmMike (1:12)ktory pozwolil rozwinac sie nauce i technologiiGaja (1:12)moralnosc post-konwencjonalnaGaja (1:12)podoba mi sie to!Mike (1:13)dobra jest nasza indywidualna mentalnosc: indywidualistyczna,  dazenie do samodoskonaleniaMike (1:13)dobre jest zapewne dazenie do postepuGaja (1:13)zapewneMike (1:13)i mozliwosc rozwoju kutury globalnej (WE)Mike (1:14)problem polega na tym, ze na tym poziomie zatracilismy rozwoj lewej strony...Mike (1:14)wszystko staramy sie racjonalizowac i tracimy duchowosc... pieknoGaja (1:14)cos za cosMike (1:15)nastepnym poziomem jest green poziom postmodernistycznyMike (1:16)postmodernistyczna  filozofia jest post-racjonalnaMike (1:17)nie znaczy to ze jest irracjonalna, ale nie jest ona ograniczona racjonalnoscia, i tam gdzie racjonalnosc nie wystarcza kieruje sie innymi kategoriamiMike (1:18)postmodernizm jest w pelni globalny, wierzy ze wszystkie kultury  sa rowno wazne, rownie dobreMike (1:18)jest pluralistyczny w pelniMike (1:19)no i doszlismy do konca rozwoju poziomow pierwszorzedowychGaja (1:19)to jest jeszcze cos wyzej?Gaja (1:20)pluralizm o ktorym piszesz wydaje mi sie byc najwyzsza forma w tej ewolucjiGaja (1:20)w sensie najwlasciwsza, najlepszaMike (1:20)to prawda, ale postmodernistyczny pluralizm nie widzi wlasnie tegoGaja (1:21)czego?Mike (1:21)postmodernizm jest tak pluralistyczny, ze nie pozwala sobie samemu przyznac statusu: najwlasciwszego, najlepszegoGaja (1:21)czyli jest skazany na zaglade?Mike (1:21)on zaklada tylko, ze kazdy moze robic to co mu sie podoba tak dlugo jak nie przeszkadza innymMike (1:22)i nie wie jak posunac sie dalejMike (1:22)tak... w tej formie jest skazany na zagladeMike (1:22)dopiero wraz z mentalnoscia drugo-rzedowa(second tier) dochodzimy do nowych rozwiazanGaja (1:22)czyli jednak musi byc jakas forma dominujaca?!Mike (1:23)zawsze jest taka formaMike (1:23)i to w kazdym czlowieku z osobnaGaja (1:23)ale pluralizm ja wyklucza, czyz nie?Mike (1:24)tak, ale tylko czesc ludzi jest post-modernistamiMike (1:24)to sa ci \"politically correct\" w ameryce Gaja (1:24):)Gaja (1:24)ja jestem bardzo niepoprawnaMike (1:24)ale oni nie stanowia wiekszosci... jak latwo zaobserwowac w kontekscie wojny w Iraku, wiekszosc amerykanow jest gdzies miedzy poziomem blue i orangeMike (1:25)ostanie dwa poziomy sa juz drugo-rzedowe, co oznacza, ze nie kieruja sie wylacznie swoim memem, ale straja sie polaczyc wszystkie memy i wszystkie kwadranty (AQAL)Mike (1:26)dla ludzi z poziomu yellow nie wystarczy kierowanie sie racjonalnoscia, ani dogmatami... ich swiadomosc rozwija sie poza mentalnosc globalna i laczy sie ze swiadomoscia wszechswiata Mike (1:27)czlowiek yellow wie, ze wszystkie poziomy istnieja w nim samymGaja (1:27)sa tacy ludzie na swiecie?Mike (1:27)on tez ma w sobie troche red, troche blue, sporo orange i greenMike (1:28)o to wlasnie walczy Wilber... po to jest sie filozofem, zeby otworzyc innym oczyGaja (1:28)uwarzasz ze twoja swiadomosc laczy sie ze swiadomoscia wszechswiata?Mike (1:28)kiedy medytujeMike (1:29)no i to wszystko jesli chodzi o wilbera...bardzo chetnie polece ci jeszcze cos do przeczytania...Mike (1:29)http://wilber.shambhala.com/html/misc/iraq.cfm</p>"},{"location":"blog/2003/07/28/piatek-wieczor/","title":"Piatek wieczor","text":"<p>Piatek wieczor, wracam do domu.Sasiad, Niemiec mowi impreza.Pozniej impreza, picie, jacys kolesie z ArgentynyPrzyszli niemcy, palenie -- dobry haszPrzyszli jacys hiszpanie.Impreza na miescie, dobra muza, fajny klub...Trzecia rano -- spac!, bo...Osma rano -- Cholera, za pol godziny autobus do ToledoOczywiscie ucieka.Wreszcie Toledo, brzuch boli, kac...Cholera, gdzie sa lazienki?Pierwszy kibel -- nie ma deski,drugi tez nie, trzeci... tez.W nastepnym babka konczy myc podloge.Wychodzi, ja wchodze, ona za mnai po hiszpansku: Po co tu wchodzisz?Ja po angielsku, glosem kogos kto bardzo potrzebuje kawy:Chcialem sprawdzic czy jest deska...Ona po hiszpansku wyrzuca mnie ze swiezo umytego kibla,kwitujac sytuacje soczystym: Choler!Babo, nie ma co sie denerwowac.Zachowujesz sie jakbys byla odpowiedzialna za cos bardzo waznego.To tylko kibel.Nawet nie wiesz co jest naprawde istotne,a dzis w metrze mowili...Pierwsza wiadomosc: W Bagdadzie znowu otworzyli zoo.Jade w dol ku codziennoscigdy w oddali slysze skrzypkaNuty Vivaldiego na pieciolinii schodow ruchomychpobrzmiewaja metalicznym skrzypem wspolczesnosciMadryt Madryt Madryt</p>"},{"location":"blog/2003/07/30/whats-in-a-name-that/","title":"What's in a name? That","text":"<p>\"What's in a name? That which we call a rose By any other word would smell as sweet.\" When I was living in England recently, the people there insisted on calling me Michal, even though I introduced myself as Mike. I wanted to be called Mike for the simple reason that it is much simple to pronounce for the English, while Michal was continualy mispronounced, despite honest efforts.They insisted however that Mike is not my 'real name' and continued using something which sounded a little like 'Mikal', apparently much more authentic.But a name cannot be real or unreal. It is an abstract concept, a grouping of letters used to indicate a person. Obviously it is not that person, it is not real, it is a symbol.And every symbol can exist on more then one level of abstraction. To me, my name is not the word I heard this morning, it is not the letters or sounds in Michal, Mike, Miguel, Michelle or Michail.All these are physical representations of the name, the word 'micah' which is the question: 'who is like God?' And that in turn is presents me and all the other Michaels of the world, a group united by a unique vagueness of a question :)I am who I am, I am not my atributes. I am not my name, I am not my possessions, I am not my achievements, faults, appearences. I am not my body, I am not my strengths or weaknesses. I am not my attributes. But without attributes, what remains? If I am not what you can percieve, then I am nothing. I do not exist. Can I percieve myself? No. I am not who I am.I am who I become. I am a process.It is not important to me who you say you are. It is not important what you have or what you do. What is important to me is what you think about. The flow of your thoughts is a river on which we can flow together to lands unknown.What can be more intimate?And more abstract? More unreal?\"Do you listen to anybody? You do not; you listen only to yourself. When you leave the sense of hearing alone, all that is there is the vibration of the sound -- the words repeat themselves inside of you, as in an echo chamber. This sense is functioning in just the same way with you, except that you think the words you are hearing come from outside of you. Get this straight: You can never hear one word from anyone else, no matter how intimately you think you are in relationship with that person; you hear only your own translations, always. They are all your words you are hearing.\"- U. G. Krishnamurti</p>"},{"location":"blog/2003/08/04/rozmowy-z-gaja-biologia-w-kult/","title":"Rozmowy z\u00a0Gaja: Biologia w Kulturze","text":"<p>Gaja (0:01)moze mi dzis powiesz co to jest biologia molekularnaMike (0:03)okayMike (0:03)ale zrobie to po swojemu, zaczynajac od fizykiMike (0:04)wspolczesna fizyka to najwieksze osiagniecie nauki.od innych nauk rozni sie tym, ze kazda hipoteza (model) podszyty jest formalizmem matematycznymGaja (0:04)formalizmem matematycznym?Mike (0:05)ten formalizm (czyt. rownania) opisuje jak jedne zmienne wplywaja na inneMike (0:05)interpretacja tego formalizmu jest tym co wspolczesny czlowiek nazywa swiatem fizycznymGaja (0:05)ahaGaja (0:07)i co dalej?Mike (0:07)innymi slowy swiat fizyczny jest tylko zbiorem rownan i hipotez, ktore pozwalaja na przewidywanie tego co nastapi w danym momencie (przyszlosci!), co daje mozliwosc rozwoju technologii (np. komputerow)Mike (0:08)to co chce podkreslic, to fakt, ze obiekty fizyki atomowej i subatomowej to w gruncie rzeczy rownania matematyczneMike (0:09)najlepiej widac to w fizyce kwantowej, ktora wywoluje rozne paradoksy (atom moze byc np. w kilku miejscach na raz)Mike (0:09)ale to inna historiaMike (0:09)przyjmijmy za punkt wyjsciowy atomGaja (0:09)okMike (0:10)co to atom? jadro (naladowane dodatnio) i elektrony (naladowane ujemnie)Gaja (0:10)no tak to jest prosteGaja (0:10):)Mike (0:11)elektrony \"lataja\" dookola jadra (tak naprawde sa w superpozycji wszystkich mozliwych stanow -- elektron jest \"rozmyty\" dookola jadra)Gaja (0:11)superpozycja?Mike (0:12)superpozycja -- kiedy cos jest w kilku miejscach (stanach) na razMike (0:12)albo gdy nie mozemy wiedziec w ktorym jest stanieMike (0:12)niektore stany atomu sa uprzywilejowaneMike (0:12)np. jadro wodoru \"chce\", zeby towarzyszyl mu jeden elektronMike (0:13)wiecej sie nie utrzyma, a mniej spowoduje przyciaganie elektronowGaja (0:13)logiczneMike (0:14)im bardziej zlozony atom tym ma wiecej elektronow, ktore ukladaja sie w rozne konstrukcje (zwane orbitalami)Mike (0:14)czasem jakiemus atomowi brakuje kilku elektronow, ale w poblizu znajduje sie inny atom, ktory ma nadmiar kilku atomow...Mike (0:15)w takich warunkach moze zajsc \"reakcja chemiczna\", czyli polaczenie tych atomow w taki sposob, zeby kazdy mial optymalna dla siebie ilosc elektronowMike (0:15)i powstaje czasteczka chemicznaMike (0:16)czasteczki chemiczne sa przerozne, od bardzo prostych np. tlen (2 atomy), woda (3 atomy), az po mega czasteczki (miliony atomow)Mike (0:16)wieksze czasteczki powstaja z syntezy (polaczenia) mniejszychMike (0:17)np. DNA : http://www.accessexcellence.org/AB/GG/dna_molecule.htmlMike (0:18)sklada sie z prostego cukru, zasady (bases) i grupy fosroranowej (phosphate, 4 atomy)Mike (0:18)widzisz to?Gaja (0:18)okMike (0:19)biologia molekularna to biologia molekul, czyli czasteczekMike (0:19)wlasciwie to juz nie biologia, bardziej chemia, a nawet fizykaMike (0:20)wiec dlaczego biologia?Mike (0:21)ano dlatego, ze zajmuje sie czasteczkami ktore zwiazane sa z procesami odpwiedzialnymi ze zycie na poziomie komorkowymMike (0:22)te czasteczki to glownie DNA i bialka Mike (0:22)zacznijmy od DNAMike (0:22)DNA to makroczasteczka, ktora jest polimerem nukleotydowMike (0:23)zreszta zobacz:\"&gt;http://www.accessexcellence.org/AB/GG/nucleotide2.htmlMike (0:26)jak widzisz nukleotydy (na dole w prostokacie z podpisem Nucleic Acid)Gaja (0:26):)Mike (0:26)ulozone sa w lancuch, a wlasciwie 2 lancuchyMike (0:27)te dwa lancuchy sa do siebie \"komplementarne\"... zobacz, ze zasady zawsze wystepuja parami A=T G-CMike (0:27)widzisz to?Gaja (0:28)takMike (0:28)a tu masz kiepski rysynek tego jak to sie uklada w 3 wymiarach:\"&gt;http://www.accessexcellence.org/AB/GG/structure.htmlGaja (0:29)fajneMike (0:30)a tu masz lepsze:http://images.google.com/images?q=double+helix&amp;num=50&amp;hl=en&amp;lr=&amp;ie=UTF-8&amp;oe=utf-8&amp;safe=off&amp;sa=N&amp;tab=wiGaja (0:31)ten jest niezly: \"&gt;http://www.sacredlight.to/images/double.jpgMike (0:33)to przyklad jak silnie symboliczny jest ten modelMike (0:33)podwojna helisa pojawia sie w sztuce juz od DalegoGaja (0:33)ooooGaja (0:33)podoba mi sie ten watek!Gaja (0:34)gdzie mozna cos takiego znalezc?Mike (0:34)szukamMike (0:41)Galacidalacidesoxyribonucleicacid, 1963 Mike (0:41)ciezko zapamietacGaja (0:41)ojaMike (0:42)http://dali.karelia.ru/images/works/1963_02.jpgGaja (0:42)co on jadl do jasnej?!Gaja (0:42)ze mial takie pomysly?Mike (0:43)widzisz obraz?Mike (0:43)widzisz DNA?Gaja (0:43)czy to jest to zapisane na kawalku pergaminu?Mike (0:44)to tytulMike (0:44)czyli Gala-desoxy-ribose-nucleic-acid (DNA Gali)Gaja (0:44)widze ludkow co do siebie strzelajaMike (0:44)ludki to cukryGaja (0:44)i jakies kropeczkiMike (0:44)a kropki to podwojna helisaMike (0:45)ludki i kropki i bog trzymajacy nazwe DNAMike (0:46)np. kolejny obrazMike (0:47)Desoxyribonucleic Acid Arabs, circa 1963 Mike (0:47)http://dali.karelia.ru/images/works/1963_06.jpgGaja (0:47)a powiedz miGaja (0:47)po co sie maluje dna?Mike (0:47)a po co sie maluje jezusa?Mike (0:47)albo jakis tam swietychGaja (0:47)to chyba jasneGaja (0:48)czyli istnieje kult dna?Mike (0:48)mozesz to tak ujac... ale nie ma podloza religijnego... chodzi o kult jakim otaczamy nauke (prawie religiny)Gaja (0:48)dlaczego nauka jest otaczana kultem?Mike (0:49)apropos nauki mam dla ciebie cytat z eseju, ktory wlasnie powoli pisze:Science is not all academia and another of its important aspects is popular science. This is the science of everyday, the scientific background of the layman, a very important aspect of our secular lives. Unfortunately people world over seem to have resigned themselves to the 'conferring mode' in this field. Science is considered too hard to understand and people are happy to accept it in the form of bite-sized chunks served as \"scientific discoveries\" by non-scientific media. This leads to a very alarming and ironic situation. Science, considered by many to be the undoing of religion, becomes under these circumstances equally dogmatic. Without an understanding 'scientific facts' become accepted without question, whether they come form genuine or dubious research. From there it is just one step to rejecting scientific claims and holding evolution and creationism as equally credible.Gaja (0:51)skoro malujemy dna, ze wzgledu na kult nauki, to powiedz mi czego symbolem jest dna?Gaja (0:51)co ono symbolizuje..czy sa jakies glebsze tresci w wygladzie, budowie dna?Gaja (0:52)tzn ze jak nauka jest niezrozumiala to staje sie obiektem kultu?Mike (0:53)nauka staje sie obiektem kultu, dzieki technologiiGaja (0:53)jakto?Mike (0:54)co powoduje, ze mozemy \"rozmawiac\" mimo iz jestesmy na dwu koncach Europy? Co powiduje, ze mozemy latac, ze mozemy leczyc choroby, zyc dluzej, ogladac telewizje?Mike (0:55)Technologia, czyli nauka w zyciu...Gaja (0:55)aha..Mike (0:55)i daje nam wiecej \"mocy\" niz kazda religia dotychczasMike (0:55)dlatego ja czcimy... a DNA symbolizuje nasza kontrole nad zyciem jako takimGaja (0:55)czyli nauka jest otaczana kultem, gdyz technologia jaka dzieki niej istnieje ma zastosowanie w codziennym zyciu?Mike (0:56)siMike (0:56)mamy moc boska, mozemy tworzyc zycie wg. wlasnego planu i uznaniaGaja (0:56)DNA symbolizuje nasza kontrole nad zyciem jako takimGaja (0:56)a czy dna nie symbolizuje jakies ambiwalencji zycia?Gaja (0:56)wiesz,patrzac na jego ksztalt..Gaja (0:56)podwojna helisa...Mike (0:57)interpretacji kazdego dziela jest tyle ile jego odbiorcowGaja (0:57)i ze tak naprawde to ludzie i wszystko wokol to tylko efekt polaczenia czasteczek?Mike (0:58)jestem przeciwnikiem mowienia: DNA symbolizuje to i to... dla mnie symbolizuje tak duzo, ze slowami tego nie obejmeMike (0:58)\"i ze tak naprawde to ludzie i wszystko wokol to tylko efekt polaczenia czasteczek\" -- bardzo ciekawie...Mike (0:59)ale chodzi o to jakim silnym DNA jest symbolemMike (0:59)a dlaczego? ze wzgledu na to na co nam pozwala: odkryc sekrety zycia i manipulowac nimiGaja (1:00)czy uwazasz ze odkrycie dna, jego wygladu i budowy zmienilo myslenie o swiecie?Gaja (1:00)ale nie chodzi mi tu o funkcje jaka pelni dnaGaja (1:00)tylko sama budowa, zlozonoscMike (1:00)czy pytasz sie, co by bylo gdyby dna nie bylo takie piekne?Gaja (1:00)takMike (1:01)nie byloby tak silnym symbolem -- nikt by go nie malowal i nie rzezbilMike (1:01)np. bialek nikt nie maluje Mike (1:01)ale wrocmy do biologii molekularnej, bo trzeba to DNA umiescic w jakims kontekscieMike (1:05)DNA to czasteczka, ktora przenosi informacje genetycznaGaja (1:05)zgadza sieMike (1:05)te cztery litery: ACGT, czyli zasady, ktore widzialas... si?Mike (1:06)to alfabet tej informacji...Gaja (1:06)takMike (1:06)typowy gen to np:Mike (1:07)     4441 aaatgtcatc tatggtgatg aacatctatt atctaagcgg attacaacag ctgacatttc     4501 acgtcctggt ctagaaatga cagggtattt tgattattat gcaccagagc gtttgcaact     4561 tgttggtatg aaagagtggt catatttaat ggctatgaca ggacataatc gttatcaagt     4621 gttacgtgaa atgttccaaa aagaaacacc agctattgtt gtagcacgtg atttagaaat     4681 tccagaagag atgtatgagg cggctaaaga taccggtatt gctattcttc aaagtaaggc     4741 ccctacaagt cgtttatcag gtgaagtttc ttggtattta gattcttgct tagctgagag     4801 gacaagtgtt catggtgtct tgatggatat ctatggtatg ggtgttctga ttcaaggtga     4861 ttccggtatt ggtaagagtg agacaggact agagctagtt aagcgaggac atcgtttggt     4921 agcagatgat cgtgttgatg tttatgctaa agacgaagag acgctttggg gagagcctgc     4981 tgagatatta cgtcatttac ttgaaattag aggtgtggga atcattgata ttatgagcct     5041 atatggagct agtgcggtta aagattcatc gcaagtgcaa ttagctatat accttgaaaa     5101 ctttgaaact ggaaaagttt ttgatagact cgggaatggc aatgaagaga tcgaattatc     5161 tggagttaag gttcctcgga tacgtattcc tgttaaaaca ggccgaaacg tgtcagtagtGaja (1:07)oMike (1:07)najciekawsze w dzisiejsze biologii jest to, ze mamy dostep do calkowitego zapisu tej ksiegiMike (1:08)w tym roku zakonczono Human Genome ProjectMike (1:08)i wszystkie geny (cala ksiega ludzkosci) jest dostepna przez siecGaja (1:08)troche to dla mnie jest abstrakcja! czy to ma jakis sens, czy jest ulozone losowo?Mike (1:11)tam gdzie jest ulozone losowo (junk DNA) nie ma informacjiGaja (1:11)okMike (1:11)a zeby bylo ciekawie junk DNA to calkiem spory procent genomuMike (1:12)co sie z ta informacja dzieje?Mike (1:12)jest cos takiego jak Kod GenetycznyMike (1:13)to slownik, wg. ktorego tlumaczy sie jezyk DNA na jezyk bialekGaja (1:13)wiem, mialam to na biologiiMike (1:13)ale zanim do tego dojdziemy musimy odpowiedziec na pytanie czym jest bialko?bialka to polimery aminokwasow,ich 3wymiarowa struktura dyktowana jest sekwencja aminokwasowMike (1:18)ale ich strukrura 3d jest zupelnie inna niz DNAMike (1:18)DNA jest regularne i zawsze takie samoMike (1:18)a kazde bialko jest inneGaja (1:18)to ja wole byc bialkiemMike (1:19)i to co jest w bialkach arcyfascynujace, to to, ze ich 3wymiarowa struktura (dyktowana przez ich 1wymiarowa sekwencje) pozwala im pelnic funkcjeMike (1:19)bialka to male narzedzia i duze maszyny w komorce...Mike (1:20)wszystko od nozyczek tnacych (nulkeazy), przez pompy (kanaly jonowe), az po elektrownie (syntaza ATP)Mike (1:26)tu masz animacje elektrowni:Mike (1:26)http://www.cnr.berkeley.edu/~hongwang/Project/ATP_synthase/Mike (1:27)bialka powstaja w oparciu o informacje zawarta w DNAGaja (1:28)a czy wszystko tak nie powstaje?Mike (1:28)specjalne bialka zajmuja sie tlumaczeniem (translacja) DNA na bialkoMike (1:28)nie, tylko bialka, a one zajmuja sie produkcja innych rzeczyGaja (1:29)czyli posrednio dna uczestniczy w tworzeniu wszystkiego co tworzy bialkoMike (1:30)no tak... DNA zawiera cala informacje, bialka odpowiedzialne sa za dzialanieGaja (1:30)zgadza sie!Mike (1:30)i ostanie zagadnienie, ktore chcialem poruszyc: Kod genetycznyhttp://psyche.uthct.edu/shaun/SBlack/geneticd.htmlGaja (1:32)oooMike (1:33)no wiec z tym kodemMike (1:33)DNA: 4 literyMike (1:34)ale sa tam slowaMike (1:34)kazde slowo to kojelne 3 literyMike (1:34)ktore oznaczaja jakis aminokwasGaja (1:34)te glu gly itp....Mike (1:34)np. TTT oznacza Phe (fenyloalanine)Mike (1:35)a AGT oznacza Ser (Serine)Gaja (1:35)okMike (1:36)i to tez jest dosc istotne, artysci to wykozystuja np. do komponowania muzykiGaja (1:36)?Mike (1:36)takGaja (1:36)no co ty?Gaja (1:36)jak?!Mike (1:36)zobacz:http://www.dnamusiccentral.com/Mike (1:40)no i jak?Gaja (1:40)wowGaja (1:41)pluskanie wody i bebenkiMike (1:41):)Gaja (1:41)ale jaki to ma zwiazek z chromosomami?Mike (1:41)nuty to zapis ludzkiego kodu genetycznego Mike (1:41)czyli ATGCTCATAGTCTAGCGATC zamenione w muzykeGaja (1:42)wowMike (1:43)no to mam nadzieje, ze juz wiesz cos o tym jaki zwiazek ma biologia molekularna z kulturaGaja (1:43)jasneGaja (1:43)ale z ta muzyka to niezly szokGaja (1:44)musze sobie o tym dokladnie poczytac</p>"},{"location":"blog/2003/08/11/watermelon/","title":"watermelon","text":"<p>'in my next life, i think i will be a watermelon'</p>"},{"location":"blog/2003/08/19/back-in-blog/","title":"Back in blog","text":"<p>Since you\u2019re reading this, I must have written it. That means that after quite a long time I decided to write in my blog again... Does that mean I\u2019m back? And back from where you might ask. Well, whether I\u2019m back or not, let me explain where I was.I disappear sometimes. It is a need stronger then me and resisting it is a futile misunderstanding.  When I disappear I do not go anywhere. I am still here and you can see me, talk to me... I listen and appreciate your words, but I don\u2019t talk. I am in another world \u2013 locked deep inside myself. The reasons for my disappearances are various \u2013 from the most prosaic, like an interesting problem at work, to the more profound. Only my best friends have gotten accustomed to this strange behavior, which can last from a few days to a few months. Others, some of whom are equally important to me take my silence as a personal insult. They seem to believe I am just not talking to Them. This builds walls of mistrust between them and me and can be very damaging...I understand your mistrust, but I hope you will understand me.</p>"},{"location":"blog/2003/08/19/my-personal-cosmology/","title":"My personal Cosmology","text":"<p>Don?t tell any physicists, but I believe cosmology to be a pseudo-science, at most a meta-science. To me it is an art of extrapolating current scientific theories to the extremes of time and space. Its goal is to create a model by which to answer the most fundamental questions about why we?re here and where are we going.As with all art, I believe that the criterion of aesthetic beauty should be an important consideration when judging cosmological theories. It will certainly prove a more practical criterion then empirical testability (sic!).Thus motivated and without being to particular about current physical theories, I hereby present my personal version of cosmology.Our observations lead us to believe that the Universe is expanding in all directions. We assume that it has always done so, ever since its very beginning.The Universe begun in a single point, an anomaly with no dimensions except infinite energy. This single point exploded, giving rise to both space and time with their 4 (11, 12?) dimensions, and perhaps innumerable parallel universes (if you like the Many Worlds interpretation). The universe thus has a limited age and size. It is only as old as the time elapsed since the great explosion (?Big Bang? seems somehow unfitting) and it is only as large as a sphere of light travelling outwards from the anomaly. It is pointless to ask what lies beyond this perimeter, because space as we know it does not exist there. It only becomes as our universe grows.As the universe expanded and cooled, matter solidified from the omnipresent energy. The energy fuelled random quantum fluctuations, which gave rise to elementary particles. These later combined to form more complex structures such as protons, neutrons and finally Hydrogen.Hydrogen atoms started a random dance driven only by gravity. They formed denser clouds, which compressed into stars. The stars are furnaces which turned the hydrogen clay into all of the heavier elements. It is true that we are made of stars, each atom in our bodies once burned in one of them.The heavier atoms from exploding stars were gathered by gravity and rolled into planets. Some of the planets gave rise to life and thus here we are, you and me ? an incredible end to an incredible scenario.But what happens now? Where are we going?According to my model, we are taking part in a great universal deceleration. If there is enough matter in the universe, gravity will someday put an end to its expansion. Then the universe will start pulling itself back towards its ancient centre.I believe that, when this happens all laws of physics will reverse, and in one moment time will start flowing backwards. If we were alive at that moment, we wouldn?t even notice it. Suddenly we would find ourselves on the other side of the universe?s great temporal mirror. Our lives and actions would be exactly the same with one difference ? time would flow backwards. Thus I assume that we exist in two times, on the opposite sides of forever. Both now and then we live as we do, and we are both equally real. Try to imagine what I just described. The universe starts in a point, which then expands into a gigantic sphere. At one point the sphere ceases to expand and starts to compress back towards its origin.If you substitute time for one spatial dimension, you will again see a sphere, only this time it will have two exactly symmetrical halves. We are in each of the halves, living twice with opposite time arrows.Beyond the Big CrunchWhat happens when the universe compresses back to the anomaly? The anomaly has no dimensions, and thus is absolutely uniform and void of any information. When it explodes anew, it may create another universe on the other side of the Big Crunch. This universe is a fresh start, no history will repeat itself exactly, it is a new entity. Another great sphere on the other side of the anomaly.Now, just to add another aesthetic element ? let me assume that time has more then one dimension. Let me assume that it is not a straight line composed of opposing vectors (--&gt;&lt;----&gt;&lt;--)I do not claim any of this to be true, but it very well may be.</p>"},{"location":"blog/2003/08/29/do-portugalii/","title":"Do Portugalii","text":"<p>w ramach roku pelnego podrozy, jade wlasnie do Portugalii...moze uda mi sie zlapac jeszcze odrobine slonca, bo lato nawet tu w Hiszpanii zdaje sie zmierzac ku koncowi...pozdrawiam kazdego, kto przeczyta te notke...zostaw mi prosze jakis znak w komentarzu, zebym wiedzial, ze sa jeszcze ludzie, ktorych moja osoba insteresuje wystarczajaco, zeby wejsc na ta strone.ostatnio poczulem sie troche oszukany przez los, przez innych, przez samego siebie... okazalo sie, ze na ludziach mozna sie zawiesc, ze w Hiszpanii trzeba uwazac na to co sie mowi i ze natura ludzka jest raczej podla... 'istna paranoja!', wiec odmawiam wierzyc w powyzsze tezy... ludzie, na ktorych sie zawiodlem oficjalnie przestaja istniec, a ja ide chwile posiedziec nad odwiecznym oceanem...caluje was w nos, do zobaczenia za kilka dnimiki</p>"},{"location":"blog/2003/09/05/words/","title":"Words...","text":"<p>It's good to know many words, but is a large vocabulary really necessary to think, or be creative? The answer of course, is no. Computers every day demonstrate that all we can say can easily be digitized into a string of 0s and 1s, thus proving that any larger dictionary is superfluous.But in order to use the information contained in ones and zeros, we need would need a very fast brain. Just imagine how much time it would take you to translate bits into bytes, look up the corresponding letter values of each byte in an ASCII table, put the letters together into words, the words into sentences, and finally the sentences into a meaning. Even for a every short text it would take minutes maybe hours. We can't claim that it is the fault of the code, because even the human-optimized Morse code is not that much faster.Words are useful for human communication, because they can quickly and accurately express complex concepts. I am no psychologist, but in my opinion there is a correspondence between words and concepts. Each word carries with it a meaning, which is a subjective abstract, filled with emotional and circumstantial connotations. Call it a meme if you like.Every concept is originally non-verbal. If this was not true, then new concepts could not arise, because we would lack words to describe them. The concept-building process could not even begin. After the first non-verbal instinct, we dress the concepts into words and arrange the words into sentences with the use of a logic. Thus prepared a concept is ready to be passed onto others, and if they pick it up, it attains a life of its own, a memetic existence.But in order to become fully functional, most memes need names and these names are the words which we use. They are very important, because after the initial explanation of concepts such as ?solipsism?, it becomes much more efficient to use this name rather then the longer description in conversations or in thinking.Words play a role of a function, or sub-routine in a computer program. The part of the program which is often used is placed in a subroutine, which is called every time a specific action is required instead of writing all the instructions over again. All programmers know that this is the way to make your programs more ordered and the only way to write truly complex applications.Taking the analogy even further, we can talk about code-reuse and libraries of functions used by many programs. Such libraries are like the words used by people, especially people who specialize in something. When you are a philosopher, you (should) know the ideas of others, because then you can incorporate them into your own mental construction.Throughout the ages the concept-libraries have grown up to great sizes. Thus, today we have many building blocks to use when constructing our worldviews... how fortunate we are! We should not pass up this opportunity to acquire as many concepts as possible.I hereby call on anyone: give me a word! If you know of a word which describes a useful new (non redundant) concept, in anything from philosophy to cooking, then let me know. </p>"},{"location":"blog/2003/09/16/on-my-way-again/","title":"On my way again...","text":"<p>There I go again... moving to another place. In fact I'm going back, back home, but it still feels more like leaving then like coming.I hate moving, because it seems that every time I seem to find my place, I have to leave.Don't get me wrong, I love travelling and living in different places, it's just the process of moving that I find annoying.I will be travelling a little to sweeten things up. I will be in Sweden, Germany, and then finally home.The next time I write it will be from Poland :)Cheers,Mike</p>"},{"location":"blog/2003/10/15/changes-concept-truth-during-20th-century/","title":"Changes in the concept of 'truth' during the 20th century","text":"I.  <p>Classically, in realist philosophy the World was considered to be embedded in an absolute framework of space and time within which all events and objects have their place. Religious people referred to this framework as the 'thoughts of God', scientists involved it in their theories as the invisible aether and philosophers searched for it as the 'ultimate truth'. Each sentence could be judged true or false based on the correspondence of its meaning with this absolute framework, commonly referred to as the 'real world'.</p> <p>Even though already Plato pointed out that all absolutes exist in a realm beyond human experience, it was not until the 20th century, that the consequences of this begun to be fully appreciated. During this century what we perceive as 'true' changed dramatically bringing unprecedented revolutions to most areas of human life. In science the relaxation of the rigid materialistic framework allowed for new and radical ways of thinking including Einstein's relativity theory and Heisenberg's paradoxical uncertainty principle in quantum mechanics. These developments changed the way physicists think of the world allowing them to ponder the existence of multiple universes and the role of consciousness in creating reality, etc. In religion the 20th century brought about ecumenism, an interfaith dialog never before possible. Morals became more relativistic, people more understanding and equal, politics more democratic and philosophy post-modern. </p> <p>It would be impossible to judge, whether the changes in the definition of truth were causes or consequences of these processes, but it is nevertheless interesting to try following the concept's evolution and this will be the topic of my essay. </p> <p> </p>  II.  <p>Throughout the centuries, ever since the Renaissance, a battle existed between the empiricists and rationalists about who has the proper means for investigating the truth about the world and the soul. The battle was largely unresolved, because the latter group failed to provide satisfactory explanations of the physical world, while the former could not deal with metaphysical questions. It was in the 19th century, when empirical science begun to produce advances in technology that people, in awe of modernity begun to believe that the proper way of investigating reality was found. With the development of the scientific method however it was beginning to become clear that there is a whole class of metaphysical problems, which it could not resolve. Science could explain the orbits of planets, predict the trajectory of projectiles and even begin to answer questions about the origin of man, but it could not deal with something as obvious as the existence of God. At the turn of the 20th century it became clear that the empiricists' definition of truth as correlation of theory with experiment needed to be changed or extended.</p> <p> </p>  III.  <p>One of the attempts to reconcile science and metaphysics was the Pragmatic method devised by William James and Charles S. Pierce. This method assumed that if all empirical results of two different theories were identical, then both were equally true. This is a straight forward logical assumption, which could be used to resolve purely verbose and insubstantial quarrels, but James interpreted it differently. He used the pragmatic method in a way opposite to Occam's law of parsimony. James was a man with a 'will to believe' and he used the pragmatic method not to skeptically discriminate against unfounded theory, but rather to promote a new definition of truth. James assumed that if all evidence presented is equal, the theory one chooses to believe should be the most beneficial one. He went further, suggesting that the most beneficial theory is the true one.</p> <p>It is not a coincidence that the Pragmatic definition of truth was developed in the United States of America, and that it became so popular there. That country, which strongly believes in the regulatory mechanisms of democracy and the free market, naturally accepted a new means of 'natural selection of ideas'. For the Pragmatist truth was an entity which evolves and the force which drives its evolution is its pragmatic value, the ability to make people happy. Since people pursue happiness, they will accept such beliefs which are most beneficial for them (and thus the most true).</p> <p>The pragmatic philosophy makes no reference to an absolute test of truth, and thus anything can be considered true as long as it does not contradict empirical facts. This notion applied itself well in the culturally diverse United States. James assumed that different groups of people could hold their own beliefs as true, which would allow them to coexist peacefully. </p> <p>This idea was later picked up by Postmodernists, who defined truth as consensus, but rejected any discriminatory tests or comparisons of belief systems. To the postmodernists truth was a pluralistic and individualistic notion. Their idea was to arrive at truth through a coherence of all theories, which everyone could agree with.</p> <p>There is a difference however between the pragmatic definition of truth and the radical postmodernists \"consensus definition\". While neither defines truth through reference to an absolute, the former is relativistic, while the latter pluralistic. The pragmatists' truth evolves and changes with time and understanding of the world, the 'consensus truth' may vary between groups but is more static. </p> <p>Practical applications of both notions prove problematic. The ever-changing pragmatic truth offers no firm basis for formulating moral judgments. If it is beneficial for me to believe that a certain law is wrong, I may break it without guilt. In fact the term 'pragmatist' in English language is used to describe a person, who willingly alters their principles in order to achieve desired results. </p> <p>'Consensus truth' faces the problem of arriving at an agreement in the first place. This requires institutionalized consensus building, of which democracy is an example. Unfortunately not all problems lend themselves to legislative processes, especially in secular states. Also, we have not yet developed global institution able to arrive at and execute compromise solutions to disagreements. These problems can lead to religious conflict and supremacy of certain powerful states over others, conducted by people who are opposed to fundamentalism and dictatorship. </p> <p> </p>  IV.  <p>Many philosophers, scientist, and logicians found themselves on the other end of the spectrum in the discussion of truth. They could not accept truth as a relative product of one's fancy and insisted that there exists an absolute framework of time, space and logic, which they aim to discover. The truth for them exists independently of man, and the quest for it is an ever-more-exact approximation of this absolute by means of testable theories. We may point here to Bertrand Russell, who advocated the philosophy of logical analysis and claimed that the role of a philosopher was a \"disinterested search for truth\".</p> <p>These materialists rejected problems of metaphysics as unscientific and refused to investigate them. They also rejected all non-empirical forms of \"higher\" or pre-given knowledge. Their ultimate goal was to construct a system of theories, able to explain all phenomena, which would be based on pure logic and not be based on any dogma or axioms, other then those empirically obtained.</p> <p>It is clear that what guides such investigation is a belief that the world is based on an absolute framework, which is complete, rational, non self-contradictory. Furthermore this framework is to be based on a logic, which man can comprehend. In other words it is based on the assumption that God is a logician, or as Einstein said, that God does not \"play dice with the Universe\". </p> <p>My question however is such: do we have reason to believe that God, or the Universe follows our human logic?</p> <p>There is no doubt that science in the 20th century made remarkable progress. The developments in physics, chemistry and biology allowed development of technologies, unimaginable a hundred years ago. Yet upon close scrutiny, we find a world of contradictions and paradoxes.</p> <p>Perhaps the most convincing definition of truth in accordance with the demands of logical analysis was given by Alfred Tarski. At first glance his definition is simple: \"a sentence is true if it is satisfied by all objects, and false otherwise\". However there is no way of investigating any property of an infinite set of objects, so any general sentence cannot be proven to be true. Tarski writes: \"the notion of truth never coincides with that of provability, for all provable sentences are true, but there are true sentences which are not provable\".  Tarski's full theory is complex, but it does conform with the laws of logic. There is a problem however, because the statement \"is true\" belongs to a different language (a metalanguage) then the sentence it describes. Is this only a problem of semantics?</p> <p>The logician Kurt G\u02c6del, on whose work Tarski based his theory, delivered a spectacular blow to the philosophy of logical analysis. He proved that no logical system can be complete. He proved that in all logical systems there will be true sentences for which no logical proof can be given, without extending the set of axioms. If the world around us really is based on logic, then it may contain questions essentially unanswerable.</p> <p> Current developments in the field of quantum mechanics bring further questions. The nature of the world seems to defy logic and be filled with paradoxes. Can particles really exist in all possible places at once? Does a conscious observer really create reality? Is it possible that there are infinite universes parallel to ours? These paradoxical questions cannot be answered within the confines of our current understanding of logic.</p> <p>The final argument against truth in materialistic empiricism was refined by Sir Karl Popper. He established the most convincing presentation of the scientific method given so far and concluded that science does not lead to truth, because it cannot give any proof of it's theories. Deductive logic can only produce hypothesis and science can only progress on the basis of falsifying invalid ones. Popper states that even if we did arrive at the final truth, we would have no way of knowing that we did.</p> <p>The above presents, on three different levels, reasons to doubt that empirical materialism is the way to find truth. Some of these problems may be technical, some may be resolved by a redefinition of our logic, some may be due to fundamental limitations of human cognition. It is interesting to ponder, however how strong the trust in the materialistic absolute framework remains. It is the myth of modernity, which remains with us, because we wish it to be true. We need it because evidence-based logical analysis gives us our only tool for rejecting false beliefs and unsubstantiated dogma. Yet it remains largely unnoticed that the assumption that the world is a rational, logical system, which can be modeled by mathematics is yet another axiom of this philosophy.</p> <p>There is another problem. If we believe that the world will provide us with the truth, we end up desperately trying to find answers out there, instead of looking for them in here \u00f1 within ourselves. This brings us to the final philosophy I wish to discuss, namely Integralism of Ken Wilber. </p> <p> </p>  V.  <p>Wilber's philosophy is also based on a belief in an absolute system, but his absolute is not limited to the external world and also exists inside each of us. In fact, he describes four different validity claims, four ways to seek truth, all of which \"are correct, falsifiable within their own domain\". He does not deny science or empiricism, he embraces them, but says they can only provide answers to questions of the external physical world. This approach suffers from the fundamental doubts already described, but Wilber extends the search for truth into other spheres.</p> <p>Our inner subjective experiences cannot be objectified by reference to external realities, so another system is devised. According to Wilber, psychological development is an evolution of ever-wider reaching, less self-centered consciousness, with the final aim of arriving at a universe-centric consciousness of Spirit. Referring to this model Wilber explains the sources of psychological problems, as arising from misunderstandings, or mistakes committed at any level of this development. The validity-claim here is truthfulness, and problems arise from self-deception. The role of a psychologist is to help people understand their inner evolution and aid them in overcoming obstacles they may have stumbled upon.</p> <p>The third sphere Wilber deals with is the domain of our inter-subjective, cultural interaction. He also objectifies this domain by reference to his evolution of global conscious model. His initial stance is postmodern \u00f1 he claims that all myths and beliefs are equally valid, as long as they do not run into conflict with each other. If conflict arises and there is a need for judgment, he referees to the criterion of world-centrism in deciding which stance is better. Wilber wishes for a world in which ego-centric or ethno-centric motivation will be marginal, while global decisions will be made according to the needs of the whole world, by globally-aware men.</p> <p>The very brief outline of Wilber's stance on truth and the criteria for judging it (the scientific method on one hand, the global-centric selflessness on the other) gives but a glimpse of his philosophical model. Integral philosophy manages to combine science with mythologies and gives us a criterion for moral judgments. In this sense it goes further then any of the other theories mentioned in this text. However, by replacing the set of logical and materialistic axioms with those of the journey-towards-Spirit, it may go further then most people of the Western cultures are willing to follow. Nevertheless it is a fascinating philosophy, which should not be shunned because of it's axioms.</p> <p> </p>  VI.  <p>All philosophies contain axioms, even the most materialistic and logic-based ones assume the existence of a rational universe. There is no way to construct a belief system without axioms and so I do not believe that a final and absolute definition of truth will ever be formed. It is interesting however that the matter continues to give so much thought to intellectuals throughout the world. We must be idealistic by nature...</p>"},{"location":"blog/2003/10/20/artysta-glodny-jest-glodniejsz/","title":"Artysta glodny jest glodniejszy","text":"<p>Kocham XXI wiek, jakiez to wyzwanie... czy dorownamy XX-temu?</p> <p>XXI-wieczna, egzystencjalna walka z wiatrakami. Nieosiagalny cel szczecia i spokoju zastepowany protetyczna hybryda 'dobrobytu' i latwo osiagalnej satysfakcji. Zamiast mety otrzymujemy pogon za polsrodkami. Wszystko zapakowane na 'wynos sie' w blyszczacy plastik telewizyjnej reklamy.</p> <p>Zinstytucjonalizowana, zlaicyzowana religijnosc pcha niezliczone masy co niedziele na zakupy. Bog pieniadz, nienazwany, niewyslowiony, jest prawdziwie tym, ktory jest. Elektryczne swiatlo mowi Ci co mozesz robic! Religia-Lotto, Religia-Sklep i Hiper-Religia Super-Market. Najwyzszym wyznaniem wiary sa zakupy!</p> <p>Dla mnie symbole kultury masowej wybrzmiewaja pelnym swoim znaczeniem. Znacza one dla mnie nic. Bez telewizji, radia, gazet, zyje poza swiatem, poza czasem, a na pewno poza nasza epoka. Zyje obok. Nie mam wiele, a chce miec mniej. Nie jem wiele, a chce jesc mniej. Polowe kolacji oddam bezdomnemu, wiedzac ze nie czyni mnie to lepszym.</p> <p>Na szczecie, gdy wreszcie ustanie tetent mysli, powoli staje sie niczym...</p> <p>Nie mysl, badz.</p>"},{"location":"blog/2003/11/05/living-in-the-21st-century/","title":"Living in the 21st century","text":"<p>Living in the 21st century is fun. This is the century in which it will not be possible to be lonely anymore. There are people all around you. Everywhere you go you have your phone, you have messages; at home you have your mail, you have your e-mail; if you're even more perverse you have your TV, your radio, your net...Even if you were standing in the middle of a forest, you could reach your close ones with a few button strokes. But somehow, all this contact does not add up to anything concrete... Being lonely in the 21st century will be a sign of hipocricy, it will require a lot of trying, and yet... On an evening like this one, the perfect autumn evening, with a sea of mist washing over the fields and forests, under a full, silver face of the moon I walk. If I pressed a few buttons I could talk with my close ones, but they wouldn't be there. There is no way for me to digitilize this perfect evening. There is no camera, no scanner, no nothing which could translate all the beauty of a simple night-fall. Considering, that we spend so much time in front of our computers, TVs, etc., and so little time, watching the beauty of the world, I strongly belive we're missing something important.I wonder how we'll procreate, if we won't even meet to have sex...Endlesly musing,Yours Truly</p>"},{"location":"blog/2003/11/21/antyintelektualizm/","title":"Antyintelektualizm","text":"<p>Rozwijaj\u0105c t\u0119 gorzk\u0105 my\u015bl, Karl Popper napisa\u0142 kiedy\u015b, \u017ce (cytuj\u0119 z pami\u0119ci) niewiedza nie jest prostym i biernym brakiem wiedzy, ale jest postaw\u0105 aktywn\u0105, jest odmow\u0105 przyj\u0119cia wiedzy, niech\u0119ci\u0105 do wej\u015bcia w jej posiadanie, jest jej odrzuceniem. (S\u0142owem: niewiedza jest raczej antywiedz\u0105).(W\u0142adys\u0142aw Kapu\u015bci\u0144ski -- \"Imperium\")</p>"},{"location":"blog/2003/11/22/dialog/","title":"Dialog","text":"<p>A. -- Byla nawet taka sytuacja, ze las pozwal firme.B. -- Slyszales C., Las jakis pozwal firme.A. -- Tak, za to, ze go sciela.B. -- Ale to juz nie byl wtedy las...C. -- Tak, raczej sklejka.B. -- A., chesz mi powiedziec, ze sklejka pozwala wlasna firme do sadu? Ach, ta Ameryka to piekny kraj...</p>"},{"location":"blog/2003/12/04/robin-hood/","title":"Robin Hood","text":"<p>On my way to work today, I chanced to pass by two strangers talking. I heard one sentence of their conversation, but it lead me down a strange road of thoughts...The sentence was: \"Stealing means taking from someone that which they have a right to have\".How interesting... a subjective definition of the crime of theft. By comparison an objective definition would have to be: \"Stealing means taking that, which you do not have a right to have.\"The principle difference between the definitions, other then the fact that one is voiced in the positive, the other in negative terms, is the point of reference. The subjective definition refers to the subject -- the person who is being robbed, while the objective definition refers to the object being stolen.Come to think of it, our laws are based on the subjective definitions of crimes, aren't they? There must always be a victim for a crime to have been committed. If I am to lie it is not a crime, unless I deceive  someone. Murder is not a crime, if I'm only killing time. And stealing is also not a crime until I steal from someone in particular. It is for that reason that we have special bodies appointed, (usually by the state, but not necessarily), which take care of interests of non-humans. The forest authority, will be the victim of your theft if you steal trees, the RIAA (or ZAIKS in Poland) will be the victim if you download an mp3 file from the net. Notice, that the artist who composed the song, may be long dead...This subjective nature of our laws leads to (or perhaps is the consequence of) the subjective nature of out moral values. We do not steal because it is wrong. We refrain from stealing if it may hurt someone, usually if we believe the victim may retaliate by legal action or otherwise. If we believe that \"no harm is being done\", we don't think our actions to be wrong. Hence the idea of \"victim-less crime\" and it's harmless nature. Moral questioning is the nature of our postmodern world, but it goes much further back in time. Perhaps to the ideas of the Enlightment period...Lack of absolute values, subjective morality, ethics and laws not referenced to objective definitions of crimes... all this leaves me with one question: Pray tell, what came first subjective laws or a demise in the absolute nature of moral values?</p>"},{"location":"blog/2003/12/12/the-universal-other/","title":"The Universal Other","text":"<p>The following is a summary of my current understanding of Kierkegaard's philosophy.According to Soren Kierkegaard there is no race, creed of culture devoid of prescience of the one true God. He does admit that many people in all cultures are unaware that this knowledge is the knowledge of God, while others repress the realization and thus live in sin. Despite this he believes all adult people have an insight into the Absolute.I have stumbled upon this idea in other places, reading Ken Wilber, or learning about Buddhism. I have always had a problem understanding the how this \"Buddha nature\", or what you would call it, can be universal...The child. Innocent, void of cultural schemata, slowly becoming. In this pre-personal state an infant associates itself with the world. It perceives in only two categories -- that which is good for me, and that which is bad for me. That which hurts and that which is pleasant. Those categories are innate, instinctual, pre-intellectual. They are shared by children and animals, this is the prime oblivious innocence. As the child dissociates its self from the world, these categories are retained in their absolute form. There is truth and there is falsehood, there is good and there is evil, there is white and there is black. Those categories are infinite to a child, they are subject to no interpretation. During a rise to adulthood in our age and in our civilization, we are taught to question and finally reject absolutes. \"Remember, there is no black and white, only shades of gray\". This notion is so important, so seemingly fundamental, that we call others, who embrace absolutes fanatics. But I digress.The infinite categories offer a growing mind a glimpse of the Absolute, which is super-cultural (or pre-cultural). This Absolute is Kierkegaard's Other -- the unpersonified God, who is common to all people, regardless of cultural origins.An interesting notion in Kierkegaard is that a one can only be a self in a relationship to an other. This other in childhood is one's parents, in adulthood it is the state, or one's business (science, religion, etc.), but one's true self can only be realized by a relation to the absolute Other. Unfortunately people often refrain from this Other, and choose to relate to worldly things, thus living in sin (not realizing their true Self).Why do people do this? Why do people choose to remain in sin, in Samsara? Kierkegaard's answer is interesting, although I'm not sure if I quite grasp it. From what I understand, his logic on this point uses a sort of circular dialectic, a positive feedback mechanism. A person shies away from the absolute because he is awed by it's eternal nature, which causes fear. He then tries to refrain from thinking about this, repressing the notion (as Freud would call it) in a defence mechanism of the unconscious. Any glimpse of the absolute causes an anxiety, which further pushes it away from the conscious mind. And thus the circle closes. We live in sin because we are sinful. We are sinful because we live in sin. There are many things which I don't understand, but Kierkegaard was a fascinating mind.</p>"},{"location":"blog/2003/12/17/brukowiec/","title":"Brukowiec","text":"<p>Strategia marketingowa gazety Fakt jest ciosem ponizej pasa! Osobiscie gardze tym pismem, gardze wszystkim co ono soba reprezentuje -- pogonia za sensacja, plotkami, brakiem jakiejkowiek refleksji, chwilowoscia opisywanych zdazen. Jestem pelen pogardy dla jego formy, tresci (tudziez jej braku), formuly itd... A jednak...A jednak, gdy przechodze obok kiosku i katem oka zobacze na odwrocie brukowca zdjecie pieknej, rozebranej dziewczyny, to przez ulamek sekundy chce miec Fakt. Przez moment chce miec ta gazete, by moc w spokoju przyjzec sie temu cudowi natury jakim jest cialo sfotografowanej kobiety. Moment mija, ja ide dalej. Przechodze kilkadziesiat metrow, ale refleksja ciagle zatacza kregi w polkulach mozgu... A moze tak naprawde chce miec Fakt, czytac Fakt, wchlaniac Fakt? Moze moje swiete oburzenie jest tylko fasada, moze tak naprawde o niczym innym nie marze, jak otulic sie kojaca, papierowa pustka brukowej gazety?I wtedy zaczynam gardzic samym soba...Szmata o nazwie Fakt, wtykana mi codziennie pod nos w drodze do pracy, oraz inne jej podobne Big Brothery dokonuja psychicznego zatrucia calego(!) naszego pokolenia. Zyjemy w ich oparach, chac tego lub nie.Chcesz 10% wiecej?</p>"},{"location":"blog/2003/12/17/ja-serduszko-popper/","title":"Ja [serduszko] Popper","text":"<p>\"Staralem sie przetlumaczyc ten Heglowski belkot z Filozofii przyrody tak wiernie, jak mozna; pisze on: 'Dzwiek jest wymiana zachodzaca pomiedzy specyficznym byciem-na-zewnatrz-siebie-na-wzajem maretialnych czesci, a zanegowaniem tegoz -- tylko abstrakcyjna albo, by tak rzec, tylko idealna idealnoscia tego specyficznego momentu. Ale wskutek tego sama ta wymiana jest bezposrednio negacja specyficznego materialnego trwania. Negacja ta jest tym samym realna idealnoscia ciezaru wlasciwego i kohezji -- cieplem. Rozgrzewanie sie dzwieczacych cial, podobnie jak rozgrzewanie sie cial uderzanych i tracych o siebie nawzajem, jest przejawem ciepla wytwarzajacego sie zgodnie z pojeciem oraz dzwiekiem.'Do dzis nie brak takich, ktorzy wierza w powage Hegla i w dalszym ciagu nie sa pewni, czy tajemnica jego powodzenia nie polega raczej na glebi mysli niz na jej braku. Tym radzilbym uwazne przeczytanie ostatniego zdania -- jedynego zrozumialego -- tego ustepu, poniewaz w tym zdaniu Hegel odslania sie calkowicie. W gruncie rzeczy bowiem znaczy one nie co innego, niz: 'Rozgrzewanie sie dzwieczacych cial... jest przejawem ciepla... wraz z dzwiekiem.'Powstaje pytanie, czy Hegel oszukiwal sam siebie, zahipnotyzowany wlasnym inspirujaczym zargonem, czy tez bezczelnie chcial oszukac i oczarowac innych.\"- Sir Karl Raymund Popper Spoleczenstwo otwarte i jego wrogowie, tom II, str. 36.</p>"},{"location":"blog/2003/12/24/murder-abortion-euthanasia-war/","title":"Murder, abortion, euthanasia, war and the death-penalty","text":"I <p>Okay, let's construct this in a simple fashion. I want to write about death, or rather about giving death(\"donner la mort\") and it's moral context. In most religions \"Thou shall not kill\" is one of the main moral guidelines. Yet in most cultures some forms of death-dealing are excused or justified. The question is obvious, how can we reconcile these opposing standpoints?</p> II <p>Let's begin with a short list of the forms of death-dealing frequently encountered in our culture. I did this in the title of this entry, naming murder, abortion, euthanasia, war and the death-penalty. This list is not exhaustive of course, but it gives us a clear picture of the number of situations, where the exact same thing (taking a life) is treated differently. Most would agree that murder is inexcusable, but abortion and euthanasia are \"controversial\", while war is often cheered and executions in some parts of Texas are treated as something of a show. </p> III <p>Conditio humana. One moral criterion, which seems important to the point of obviousness to most of my carnivorous brethren that of the human condition. Humans are considered to be different from other beings, because they have a soul. This allows us to kill and eat animals, without moral concern, because they are soul-less (or at least they do not share our Humanity) and are therefore expendable. But clearly this does not form an absolutely respected law. People lawfully kill other people, so the soul-criterion is not set store by. The death penalty is a clear example of this, but so is war. In our televised wars, it seems that people don't die, they become  lost, like soldiers in a computer game. Alas I remind everyone, that in war people die! </p> IV <p>Another criterion which is often called upon is the criterion of innocence. People who are \"innocent\" are never intentionally sentenced to death. They have to be found guilty of horrible crimes, ironically usually of taking a life.  But the innocence criterion goes much deeper then what can be decided by courts and laws. The Bible teaches us about the original sin, due to which none of us is innocent. But my favorite theologian Kierkegaard, would argue that point. He wrote that \"children are not capable of sin, only of bad temper\". According to him, a mind has to go past a certain point of self realization, before it can stand in the presence of God and thus be capable of sin. Only then is an original innocence replaced with original sin. I wrote about this earlier.</p> <p>If we accept this then we reconcile objections to abortion with consent to war or the death penalty. However in turn, we raise many other extremely difficult questions. When can we decide that a person already lost their innocence? Do we determine it by age?,  deeds?, a psychological test? What about mentally-impaired people, who never stop being children?</p> <p>But let us be crude and accept some estimate of innocence, the birth for instance. Once a person is born it has the potential for loosing innocence, so let's consider it guilty until proven otherwise. This doesn't really solve our problems, only translocates them, because now we have to deal with our carnivorous behaviors. Animals, after all will never be capable of sin and thus will always remain innocent. We cannot kill innocent animals and object to abortion at the same time if we are guided by the innocence-criterion.</p> V <p>So, is there a solution? But of course there is! All we need to do is to combine the two described criteria into a rule-set. We cannot kill innocent beings, which at the same time possess the human condition. What a nice solution. Starting out from \"Thou shall not kill\", we arrive at a situation in which we can kill anything and anyone we wish, as long as they are born.</p> <p>Doesn't this violate some basic law of logic? Of course it does and I hope I've made it obvious. If we allow ourselves to set moral laws, and then create exceptions in them, or use them in sets, we and up with a combinatorial ethics, which is no ethics at all! If we can set un-absolute rules, then they are no longer rules, but parts of a relativistic theory, which can take on any form we desire according to our mood or situation. If we are free to combine the above mentioned two criteria, then why not take a third one along with them? There's not reason not to.</p> <p>When it comes to death dealing, we really shouldn't play moral combination theory. The stakes in such game -- lives (human lives, innocent lives, or just plain lives) are too high. \"Thou shall not kill\" is a rule, which applies in the same way to murder, abortion, euthanasia, war and the death-penalty. If we choose to accept it, let's be faithful to it. And if we choose at any point to reject it, let's not pretend to be holier-then-thou when talking about abortion or the death-penalty...</p> <p>Vegetarian food, anyone?</p>"},{"location":"blog/2004/01/14/2004/","title":"2004","text":"<p>Czesc Witajcie w 2004 roku.Rok ma juz 2 tygodnie, a ja dopiero zaczynam moja blogowa aktywnosc, wiec spiesze z zyczeniami. Tak wiec zycze sobie i Wam udanego roku.Osobiscie zaplanowalem, ze bedzie to dobry rok. Jest 2004, wiec ladna parzysta liczba. Zakladam, ze wydazy sie kilka ciekawych rzeczy w tym roku: bedzie olimpiada podczas ktorej nawet terorysci odloza na chwile bron i usiada przed telewizorami. Ludzie Busha znajda w Iraku sporo broni masowego razenia z czasow wojny z Kurdami i przekonaja amerykanska opinie publiczna, ze to wlasnie byl powod inwazji. Mimo to licze na to, ze Bush nie wygra ponownie wyborow i w Ameryce bedzie nowy prezydent. Czy lepszy nie wiem, ale przynajmniej bedzie mowil lepiej po angielsku.Ja sam planuje skonczyc jedne studia i zaczac nastepne. Mam nadzieje, ze doktorat uda mi sie zlapac w jakims ciekawym miejscu (nie mowie gdzie, zeby nie zapeszyc). Planuje pozostac w tym roku calkowicie pozbawiony znaczen i bawic sie dobrze cieszac sie kazda chwila wbrew iluzji uplywajacego czasu.Do zoaczenia wkrotce mam nadzieje,.mK</p>"},{"location":"blog/2004/01/14/the-thoughts-of-mary-jane/","title":"The thoughts of Mary Jane","text":"<p>Who can know the thoughts of Mary Jane?Why she flies and goes out in the rainWhere she's been and who she's seenIn her journey to the starsWho can know the reason for her smile?What are her dreams when they journeyed for a mile?The way she sings and her brightly coloured ringsMake her the princess of the skyWho can know what happens in her mind?Did she come from a strange land, leave her man behind?Long lost signs and her brightly coloured eyesTell her story to the windWho can know the thoughts of Mary Jane?Why she flies and goes out in the rainWhere she's been and who she's seenIn her journey to the stars -- Nick Drake</p>"},{"location":"blog/2004/01/16/fikcje/","title":"Fikcje","text":"<p>Czytanie Borgesa to przygoda, ktora wiekszosc osob rozpoczyna dwa razy, nim w pelni zacznie cieszyc sie lektura. Za pierwszym razem trudno jest ustosunkowac sie do pism tego autora, poswieconych wszystkiemu, wiec w sumie niczemu. Nie wiadmo jak zareagowac na esej, w ktorym przywolywany jest 'Don Kichote', Biblia i jakis malo znany argentynski mysliciel, a ktory poswiecony jest zabiegowi umieszczania autora w jego wlasnych pismach.Olsnienie nastepuje dopiero w momencie, w ktorym czytelnik zdaje sobie sprawe, ze zarowno on jak i sam Borges pojawiaja sie w tym eseju.Wlasciwie nie wiem, czy esej to odpowiednie slowo. Problemy z Borgesem pojawiaja sie juz przy probie okreslenia formy i gatunku literackiego, w ktorym tworzy. Pisze eseje w Polskim znaczeniu tego slowa, czyli szkice literackie, krotkie rozprawy ujmujace okreslony temat w sposob subiektywny, laczac proze artystyczna, naukowa i publicystyczna. Nie sa to rozprawki analityczne i moze to jest takie zaskakujace gdy pierwszy raz sie z Borgesem spotyka.Kazdy jego esej jest zamknieta caloscia, ktora wpasowuje sie w ciekawy sposob w przerozne konteksty: kulturowe, historyczne, filozoficzne, a rowniez osobiste. W kazdej pracy przywoluje on ktoregos ze swoich ulubionych filozofow (Platona, Berleya, Hume'a, etc.), ale nie dokonuje analizy ich dziel, raczej zlewa je ze soba, laczy w dziwny spobob i wrecza Tobie gotowy twor jako intelektualna zagwostke. Gdybym ja przyznawal takie tytuly, nazwalbym go prawdziwym postmodernistycznym filozofem.Jedno jest pewne. Jego eseje wywoluja bardzo dziwny nastroj, pewien intelektualny niepokoj, poczucie niezaspokojonej ciekawosci... Opisuje on paradoksy w taki sposob, jakby byly naturalnymi rzeczami, a swiat opisuje tak jakby byl paradoksem.Serdecznie polecam Wam dwukrotna lekture Borgesa.</p>"},{"location":"blog/2004/01/20/unibertso/","title":"Unibertso","text":"<p>So... now that I have a new blog, it would seem like a good idea to post something. Let's see... what did I want to write about? Oh yes... 'the Universe'</p> <p>After reading the 'Library of Babel' by Borges (which you have to read!), I started to think about the word \"universe\". </p> <p>I became very excited and planned to conduct a small scale linguistic investigation into this strange and underappreciated word. \"Universe\" is the one word which describes everything which surrounds us, everything which exists or may exist anywhere. It is a very fundamental philosophical concept and yet it is a word used so often.</p> <p>It is used in astronomy, cosmology, quantum mechanics, thermodynamics... One interpretation of quantum physics even talks about many universes, which denies the word its universal nature. \"Many universes\", \"parallel universes\", or simply \"universes\" (in the plural) is a contradiction in terms.</p> <p>It is clear that the word is not used carefully nowadays, but what is even more interesting to me is how it was used in the past. Where does the word come from? What is it's etymology and how are the various etymologies different in different cultures?</p> <p>Finding this out was the aim of my linguistic exercise. I searched among my friends speaking various languages, for the equivalents in their languages.</p> <p>The word Universe is derived from Universum in Latin. Uni (meaning one) and versum (meaning to turn into), universum means to be turned into one, to be united, to become combined into one wholeness, togetherness, completness. That's a very interesting idea... everything that may exist was to the Latin speakers rolled into one concept.</p> <p>That's very different from the Slavic equivalent of the word. In Polish \"wszech?wiat\" derives from Wszech (meaning all) and ?wiat (meaning world). It means the all-world, the all encompasing world, or the world which is all worlds. Here the plurality of the concept is not denied as in Latin.</p> <p>Upon finding this out, I wanted to learn how other languages dealt with this issue. I was disappointed to find out however, that most European languages share one etymology, the Latin one. Even in the Euskara language (of the Bask) the word is \"Unibertso\".</p> <p>I think I will need to look to some languages from outside of our continent for more suprises. Unfortunatelly, I have very few friends in Africa, Asia... Perhaps you know someone?</p>"},{"location":"blog/2004/01/22/may-the-games-begin/","title":"May the games begin","text":"<p>This week marks the official start of the presidential election campaign in America. On Tuesday two important events took place, the first was a meeting of the Democratic Party in Iowa which held a primary election between the candidates, the second was president Bush's yearly State of the Union address to the nation. For whatever else this election may bring, it promises an exciting and important campaign.</p> <p>The State of the Union Address is a very improtant media event in the United States. It gives the president a televised  hour, during which he can talk about any issues he deems important. This year's speech was especially important, because it prepares the stage for the upcoming election campaign. One of the biggest television networks in America (ABC) devoted two hours of it's prime time to broadcasting the presiden's speach in a program called \"The State of the Union Address and the Democratic Response\". </p> <p>The speach was prepared months in advance and the President was said to have spent weeks practicing his delivery. As usual with this president, it turned out to be quite a show.</p> <p>With the economy in recession and the budget showing the largest deficit in history (See  figure), the president had no choice, but to stand firmly on issues which made him. He spoke with confidence and zeal about the war he won and how it was the right thing to do.</p> <p>Speaking in the American House of Congress, where the majority is held my his own party, Bush could count on a warm welcome. And warm it was. His speech was punctuated by exalted phrases such as \"America this evening is a Nation called to great responsibilities. And we are rising to meet them?\", and each one was awarded by a standing ovation from the representatives. I have a feeling that the hour long speech, would be only half as long if these cheers were ommited. </p> <p>The president's prime focus was on War. War against Iraq, war against Afghanistan, war against Terror. In his speech he made clear the divisions which formed in the American political scene during his presidency. He said: \"We can go forward with confidence and resolve, or we can turn back to the dangerous illusion that terrorists are not plotting and outlaw regimes are no threat to us.\" He didn't declare a new war, but defended the one in Iraq at great lengths. The only thing, which remains unclear is the reason for the war. The key issue of weapons of mass destruction, has turned into \"weapons of mass destruction-related program activities\". He also remained confident about his decision to take USA to war virtually alone and he added that \"America will never seek a permission slip to defend the security of our people.\"</p> <p>In the speech however, Bush had a tendency to contradict himself. He said, that it is good, that America went to war on it's own, and then read out a list of allies \"Britain, Australia, Japan, South Korea, the Philippines, Thailand, Italy, Spain, Poland, Denmark, Hungary, Bulgaria, Ukraine, Romania, the Netherlands, Norway, El Salvador\" (all great military powers, as you can see). He said that the world is safer after 3 years of his presidency, but kept remainding the constant threats of terrorism.</p> <p>The reactions to the presidents speech can be found in very many magazines online (Salon, Washington Post, Toronto Star). It is interesting to observe how differrent the opinions are, but there is a theme they share. The president seemed overconfident, while the issues in his speech were not very strong. Even the usually supportive Washington Post, called the president \"cocky\". It seems that the speech made Bush look like he's politically weakened and is trying to regain some of his popularity at the start of the election year. That didn't really work however, and his popularity ratings taken immediatelly after the speech were only 45% (Clinton's State of the Union address gave him 52% in the middle of the Lewinsky scandal). </p> <p>The president also made an unfortunate issue of \"sanctity of marrige\". He said that the institution of marrige as the union between a woman and a man should be protected. That will of course turn the gay community against him, while it doesn't really satisfy his convervative voter-base, because they would like to see all types oh homosexual unions deligalized...</p> <p>Overall, it was en extremely interesting speach, but it did't really give Bush what his campaing would need: a good start.</p> <p>The other important event that took place this week was the primary elections of the Democratic Party presidential candidates in Iowa.  This event turned out to be quite a surprise, because one of the main front-runners Howard Dean came in only third with 17% of the votes. This was a shock for many (me included), because his overall ratings usually placed him first or second. </p> <p>I will not weep for Dean if he is replaced by another strong candidate. Maybe Kerry will be that candidate... One thing is certain, Howard Dean did America a huge favor. It was him who first openly opposed Bush's policies on such issues as the war, medical care, etc. It is thanks to him that people started to consider alternatives, and stopped calling everyone who disagreed unpatriotic. I'm looking forward to the results of the next primaries in New Hamshire. </p> <p>For whatever else this year may bring it will surely give as an exciting and important election campaign in the US of A.</p>"},{"location":"blog/2004/02/10/darwin-the-scandalist/","title":"Darwin the Scandalist","text":"<p>\"The influence of Darwin's theory can partially be explained by the fact that at its time scientific debate reached wide audiences. The main explanation however, lies in a human factor: in the uproar caused by consciousness that all people are not descendants of Adam, but rather of a monkey.\" -  Norman Davies </p> <p>That's probably very true and certainly quite incredible. Just consider the implications of the sentences above: one of the most influential theories in modern science (the most influential one according to \"Scientific American\") gained it's popularity because it caused a stir, a sensation, a scandal... It wasn't even that revolutionary. Most people forget that Darwin was not the author of the theory of evolution, he just added the factor of natural selection as it's driving source. Many people before him talked of progressive evolutionary change, but it was Darwin who challenged the religious fundamentalists' version of Genesis and thus became incredibly well known and forever remembered by history.</p> <p>This is an interesting event in history and in philosophy of science. Many philosophers since Kuhn's \"The Structure of Scientific Revolutions\" try to explain what influences and drives scientific discovery, but I'm not sure if their theories can adequately deal with the evolutionary revolution of Darwin. This is not an event that can be explained by logic, because it has to refer to the human emotions involved. It is rather a field for psychologists and sociologists.</p> <p>One thing is certain: Darwin caused a revolution not because he challenged contemporary science, but because he disputed popular religious views. Religion is not scientific and religious beliefs are not subject to the same tests as scientific theories, but many young scientists know how much emotion and heated debate can be generated by (mis)applying scientific verification to religious scripture.</p> <p>It's interesting to ask why that is. Why are we so fascinated by that which causes a scandal? Why do we get so excited when someone says or does something which goes against the rules? Answering this question would not only help us understand the reasons for Darwin's huge influence on the 20th century, but also let us understand things much closer: popularity of gossip magazines, why the TV news always looks like it does, etc.</p> <p>Perhaps this scandal-curiosity is a fundamental human trait? Or perhaps it can be broken down and explained by something else...  I am no psychologist, but it seems to me that if this field is ever to become scientific, it needs to identify the 'forces', which it deals with.  In physics the forces are well defined: electromagnetism, gravity, nuclear forces; and all physical theories always base on them, which makes the science understandable and invalid theories easily identifiable.</p> <p>I'm not trying to say that psychology and physics are comparable, but in this particular respect the former could try to follow the latter. As it is now, it seems that every psychologist school identifies one fundamental human trait as the fundamental driving force and tries to explain everything by it.  Is that possible? Of course it is, everything can be explained by \"need for happiness\", but we have to ask ourselves whether such an over-simplified model is very useful...</p> <p>Endlessly musing... Perhaps this scandal-curiosity is a fundamental human trait? Or perhaps it can be broken down and explained by something else...  I am no psychologist, but it seems to me that if this field is ever to become scientific, it needs to identify the 'forces', which it deals with.  In physics the forces are well defined: electromagnetism, gravity, nuclear forces; and all physical theories always base on them, which makes the science understandable and invalid theories easily identifiable.</p> <p>I'm not trying to say that psychology and physics are comparable, but in this particular respect the former could try to follow the latter. As it is now, it seems that every psychologist school identifies one fundamental human trait as the fundamental driving force and tries to explain everything by it.  Is that possible? Of course it is, everything can be explained by \"need for happiness\", but we have to ask ourselves whether such an over-simplified model is very useful...</p> <p>Endlessly musing...</p>"},{"location":"blog/2004/03/31/the-new-dichotomy/","title":"the new dichotomy","text":"<p>I love the 21st century. All you need to know is someone's name and you can find them just like that... no more loosing touch, no more lost friends, no more loneliness. And yet, paradoxically people seem more lonely now then ever before. Real bonds between neighbors, peers, people on the bus seem gone. Maybe that's the way of the future - to have many friends from all over the world, but none from next door. There is a certain sadness to this reflection... bits and bytes of a person can't replace their sight, sound, smell, touch. The future seems sensorily deprived and the future is now.</p> <p>All this said, I still love the 21st Century, I must be the 21st Century Schizoid Man (\"Nothing he's got he really needs\"). It is the century for men like me, virtual men, whose only strength is their brain, who can do everything at all, as long as it can be done with a computer. Maybe I'm exaggerating slightly, but not too much.</p> <p>In this century the new human will be born. The evolutionary paradigm - 'survival of the fittest' has changed. It is now the survival of the most digitally able, the most net-empowered, the most global... survival of those who can harness the power of the digital revolution, filter information from dis-information and use it. </p> <p>On the other hand it is the age of the lost, the ones who have been immersed in the overflowing melting pot of the world and who have drowned their souls in ever-fleeting whimsy of the consumer market. If things proceed like this we will have two societies in the world and the new dichotomy will be an informational one.</p>"},{"location":"blog/2004/04/29/dzien/","title":"Dzien","text":"<p>Anonimowi chlopcy stoja pod blokiem, starajac sie wmowic sobie sile wlasnych osobowosci. Stoja na ugietych nogach, gotowi skoczyc do gardla nieobecnemu zagrozeniu. Jak mlode wyzly, jak dzikie psy nieokrzesani zyciowym doswiadczeniem.</p> <p>Dziewczyna rzucila mi spojrzenie ukradkiem, katem oka. Zrobila to tak, bym zwrocil na nia uwage, ale myslal, ze ona mnie nie zauwazyla. Zgodzilem sie na ta gre, spojrzalem na nia dlugo, wyczytujac z jej postaci projekcji wlasnych marzen. Odwrocilem wzrok, teraz ona mogla mi sie przyjrzec. Wtem nadjechal autobus, autobus w moja strone, ale nie moj... jej. Nagle moment osiagnal szczyt swojej intensywnosci. Napiecie, wahanie, podniecenie, wsiasc? Nie wsiadlem i moment sie skonczyl. Jej juz nigdy nie zobacze...  Siedze i czekam na kolejny moment, na kolejna osobe z ktorej zyciem przetne swoje nie zamieniajac slowa. Znow przyjezdza jej autobus, ale pusty.</p> <p>Pierwszego dnia nie wydarzylo sie nic. Znow szedlem ulicami, ktorych znam tylko fasady, cieszac sie kolorowa szaroscia codziennosci. Otaczali mnie ludzie, ktorych twarze wydawaly mi sie znajomo obce. Szedlem i sluchalem strzepkow rozmow, w ktorych nie uczestniczylem, starajac sie z jednego wyrazu odczytac dusze.</p> <p>Nie jadlem 24 godziny. To nie dlugo, ale dosc aby odczuc glod. Glod jest jedynym pierwotnym odczuciem, na ktore mozemy sobie jeszcze pozwolic. W glodzie jestesmy prawdziwi, jestesmy naturalni, w glodzie po raz ostatni jestesmy homo, a nie sapiens. Zadne inne odczucie nie pozostaje tak nieodwolalnie bez tabu interpretacji. W glodzie jak w ciszy lub ciemnosci mozemy szukac nieskonczonosci.</p> <p>Dookola mnie siedza ludzie zmeczeni i glodni, ale oni nie akceptuja ani swojego glodu ani zmeczenia. Czekaja az autobus zatrzyma sie w ten szczegolny sposob, ktory znaczy 'Dom'. Gdy wroca zaczna jesc i odpoczywac, wypelnia swoj czas czynnosciami, ktore wydaja im sie potrzebne. Zyja w wielkiej iluzji naszych czasow, iluzji ktora pomieszala kategorie moc i musiec.</p> <p>Pierwszego dnia nie wydarzylo sie nic. Kazdy dzien jest pierwszy.</p>"},{"location":"blog/2004/05/24/nieograniczona-wolnosc/","title":"Nieograniczona wolno\u015b\u0107","text":"<p>Nieograniczona wolnosc niszczy sama siebie. Znaczy ona bowiem, ze czlowiek silny moze znecac sie nad slabym i ograbiac go z jego wolnosci. Dlatego wlasnie domagamy sie, by panstwo ograniczalo wolnosc do pewnych granic tak, aby wolnosc kazdego czlowieka byla chroniona przez prawo. Nikt nie powinien byc na lasce innych, wszyscy natomiast powinni miec prawo do ochrony ze strony panstwa.</p> <p>Otoz uwazam, ze rozwazania te, pierwotnie zastosowane do dziedziny brutalnej sily i fizycznego zastraszania, nalezy rowniez zastosowac do dziedziny ekonomii. Nawet jezeli panstro chroni scych obywateli od przemocy fizycznej i gwaltu, moze ono zniszczyc nasze cele zaniedbujac ochrone przed naduzyciami wladzy ekonomicznej. W takim panstwie czlowiek posiadajacy wladze moze ciagle jeszcze naduzywac swej sily wobec czlowieka jej nie posiadajacego i moze odebrac mu wolnosc. W takich warunkach nieograniczona wolnosc ekonomiczna moze byc rownie samoniszczaca jak nieograniczona wolnosc fizyczna. Ci bowiem, ktorzy posiadaja nadmiar pozywienia moga bez uzycia przemocy zmusic tych, ktorzy umieraja z glodu do \"dobrowolnej\" sluzby. A jezeli przyjmiemy, ze panstwo ogranicza swoja dzialalnosc do likwidowania przemocy (i do ochrony wlasnosci), ekonomicznie silna mniejszosc moze w ten sposob wyzyskiwac ekonomicznie slaba wiekszosc.</p> <p>Jezeli ta analiza jest sluszna, to jasne jest, jaki typ srodkow nalezy zastosowac. Musza to byc srodki polityczne - srodki podobne do tych, ktorych uzywamy przeciwko przemocy fizycznej. Musimy zbudowac instytucje spoleczne powolane do zycia przez wladze panstwowa dla ochrony ekonomicznie slabych przed ekonomicznie silnymi. Panstwo musi stac na strazy tego, by nikt nie musial godzic sie na niesprawiedliwa umowe ze strachu przed smiercia glodowa lub ruina ekonomiczna.</p> <p>Znaczy to oczywiscie, ze trzeba zrezygnowac z zasady nieinterwencji, z nieograniczonego systemu ekonomicznego; jezeli chcemy zabezpieczyc wolnosc, musimy zadac zastapienia polityki nieograniczonej wolnosci ekonomicznej planowa interwencja ekonomiczna panstwa.</p> <p>-- Karl R. Popper \"Spoleczenstwo otwarte i jego wrogowie\"</p>"},{"location":"blog/2004/07/20/fahrenheit-911/","title":"Fahrenheit 9/11","text":"<p>I have just attended the Polish premiere of Fahrenheit 9/11 and it compelled me to restart my blog.</p> <p>What can I say about the film? That it's biased and one-sided? Yes. That it's manipulating facts? Yes? That it's deceitful? NO! Michael Moore has done his best to manipulate the information that he has chosen to put forth in a manner which communicates a specific message. He has done exactly what the television channel FOX News has done during it's war coverage, he has done the administration of George W. Bush has done before the war. He only did it in the other direction.</p> <p>There is one thing which I would like to add to the film, because I feel it is important and I feel it has been left out. It concerns the vice-president Dick Chaney and of course his former employer Halliburton.</p> <p>When the first George Bush was president Dick Cheney was in charge of defense and when the first war in Iraq started he decided to hire a private company to conduct some of the services the army needed, such as food, communication, logistics. Soldiers of course could be used for all those purposes, but there aren't that many soldiers to go around and a private contractor would potentially be more economical. It seemed like a good idea and the company Halliburton was hired to do the job.</p> <p>When president Bush's term of office ended Dick Cheney was hired by the company he hired as it's chairman C.E.O. All's well that ends well, right?</p> <p>Not quite. Eight years later, amazingly another man named George Bush was elected president of the United States. And in an even more spectacular twist another war in Iraq came about. This time around Dick Chaney was the second-in-command, the vice president. As should be expected he hired his own company to do the reconstruction and war-assistance work in Iraq. The money involved is astronomical, go ahead and Google it up. </p> <p>And this time Halliburton was not just cleaning latrines and cooking. The firm was hired to do everything from oil-drilling and reconstruction to active military service. This means that armed employees of Halliburton are working alongside regular soldiers. The main difference between them is that the mercenaries are there of their own accord, they earn about three times as much and are able to leave whenever they wish.</p> <p>The reasoning behind the decisions which led to this situation is well in line with the ideals of the American Republican party. They wish to eliminate 'big government' in any form and to privatize everything from health insurance to... war.</p> <p>There is just one problem with this situation, because it creates a new class of people on the battlefield. People who earn their living thanks to war, people who have no reason to wish the war would end. In fact it would be much more beneficial for them if the war lasted, because otherwise they are out of an extremely lucrative job ($10'000 per month does not come easily, with no higher education required).</p> <p>This is an extremely dangerous situation!!!</p> <p>On a somewhat different note: Do you know the American word \"cronyism\"? It sounds so nice, and is derived from the word 'crony', which means a close friend and sounds almost as cute as 'pony'. It's intriguing that that is the only term used in American public discourse to describe half-legal closeness of ties between giant business and politics and politicians.</p> <p>I guess plutocracy is too hard a term to grasp.</p>"},{"location":"blog/2004/08/16/why-we-must-stay-in-iraq/","title":"Why we must stay in Iraq...","text":"<p>The troops in Iraq, my fellow Polish citizens and others are caught up in a terrible quagmire. Under siege, under fire, under the scorching desert sun. Shot, wounded, dying every single day. Such is war. Of late, voices could be heard calling for a withdrawal of soldiers form the \"Mess-o-potamia\", but I don't think that would be the right thing to do now. Even though, I have been strongly opposed to this war since before it started, I will try to present here my case for why we must stay in Iraq.</p> <p>It is interesting to note, that the voices calling for withdrawal are not heard that much in Poland. We have always been very fond of America and the prominent feeling here is pride that we can be a part of a great American-lead international operation. You do here those voices from the States, where people seem to be afraid of repeating the experience of Vietnam.</p> <p>My personal conviction is that the war was started for wrong reasons. The reasons given by the Bush administration did not hold up and this has to be becoming evident, even to the most vehement war-supporter. The alleged links of Saddam Hussein to al-Qaeda turned out to be a fabrication. The imminent threat of Iraqi WMDs, which Saddam could deploy in 45 minutes, which left no time for inspectors to look for them, turned out to be based on nothing. The last of the reasons given for declaring war - the need to free Iraqis from tyranny, to show the rest of the Arabic world that an Islamic country can become a stable and free democracy, is slowly crumbling.</p> <p>It is for the fear that this final reason could fail, that we need to stay. Admittedly, this last reason is not enough to start killing people. If it was enough, then the US could start waging war on any non-democratic country: China, Cuba, North Korea, Syria, Libia, maybe even Russia. This has to be clearly stated and for this reason the Iraq war can and should be denounced. But if we were to withdraw from Iraq now, we would be giving the whole world a sign, that a coalition of democratic countries can attack any other country and wreck it in a meaningless adventure.</p> <p>I can't even begin to fathom the consequences this would have. The situation in the Middle East is dangerous already and it would only get worse. If you think that the world is now safer from militant Islam terrorism, just consider how things have changed in Europe. If you haven't been in Europe lately reflect on this: Poland has always though itself to be an ally of America, even it's friend (the joke here today is: \"I wonder if the Americans fingerprint all of their friends, or just the best ones...\"). And yet, if you ask many people here who the biggest threat to peace in the world is, many will say the United States. In fact over fifty percent of Europeans view US as the world's biggest threat. A situation like this, just would not have been possible under Clinton.</p> <p>So consider all this newly created anti-American sentiment in Europe (amongst friends) and imagine how the people who considered you their enemy must now feel. And just try to imagine what would happen if we now left the stirred up Iraqi bees' nest. The only way the US is safer now is due to fact that the terrorists have a place where they can \"bring it on\".</p> <p>I sincerely hope that Iraq will soon find peace. Hopefully within 10 years or so, all of the local strongmen and their armies will be eliminated or pacified, the nation will elect a government, adopt a constitution, establish and enforce a set of laws. Hopefully a decade from now, Iraq will look like today's Afghanistan, or even more optimistically will be on it's way towards something resembling a Turkey-like secular democracy. I hope that will happen, but it will require time, patience, lives, money and strategic planning overwhelmingly more intelligent then that of the Bush administration.</p> <p>If my optimistic vision comes to pass, we will be glad, because another democracy will join the ranks of the global order. Even other Arabic states will have to admit that Iraq was given a new chance, a choice and freedom. Whether this will be a good thing or not is a matter of personal belief. Many people in the Arab world do not consider a secular democracy to be the best of all political systems. If you look at Turkey, you will see many people promoting a tighter integration of religion and state. Many believe that personal liberties in the West have become overly exaggerated. They condone near-nudity in advertising, liberal attitudes toward sex (at the beach many of their women bathe in clothes!), pursuit of money above all else and other attributes of the \"Great Satan\".</p> <p>And yet we tend to believe that democracy can be exported as a package deal. Here, have voting rights, freedom of speech and \"Sex in the city\". We (especially Americans) need to realize that there are countries in the world, which may not wish to import our lifestyle wholesale. There are even some countries which are doing very well without democracy... Are we going to attack China because it is a communist state? Or will we try to be their friends and look the other way when they suppress the their citizens' human rights, because they are a good trading partner? There are countries in the Middle East which need our help, but not all are ready for it. The countries which need us are not  Iran and Syria, but Israel and the-future-state of Palestine.</p> <p>The conclusion is that even though the war in Iraq was a huge misjudgment, we must now stay there for as long as it takes. There is no hypocrisy in saying this, just common sense.</p>"},{"location":"blog/2004/08/25/the-year-of-the-documentary/","title":"The year of the documentary","text":"<p>I don't know what it is exactly, but during the past months, a large number of very interesting and influential documentary films have been released or re-released. I don't want to analyse why this is happening, I'll just make a list of films worth watching if you like the \"non-fiction\" category.</p> <p>Outfoxed: Rupert Murdoch's War on Journalism A great documentary, which bases almost exclusively on  footage from the FOX news channel. The film analyses how a giant propaganda machine does it's work, distorting and manipulation information for a very specific political agenda. http://www.outfoxed.org/</p> <p>Uncovered: The War On Iraq This film analyses how information was manipulated in the run up to the war in Iraq. It's filled with interviews with CIA intelligence analysts, but the film makes it's point even more clearly, by showing us all the things Bush, Cheney, Rumsfeld, Rice, et al told us about the certainty of Iraqi weapon stock-piles. http://www.truthuncovered.com/</p> <p>The Corporation If corporations are legally human, what kind of people are they? This is a great film, which shows us the paradoxes of corporate power. A thorough analysis of the issues at hand, with appearances by Noam Chomsky, Milton Friedman, Michael Moore, etc. as an added incentive for watching. http://www.thecorporation.tv/</p> <p>Fog of War: Eleven Lessons from the Life of Robert S. McNamara Rober McNamara, secretary of defense in the administrations of Kennedy and Johnson. Called one of the most controversial politicians of the cold war, he now is able to talk about many issues of that long and dangerous conflict. He is a man, who is able to admit mistakes, and who is able to teach us a lot. Original musical score by Philip Glass creates a thought-provoking atmosphere. http://www.sonyclassics.com/fogofwar</p> <p>Fahrenheit 9/11  I have to mention also Michael Moore's newest film. http://www.fahrenheit911.com/</p> <p>Supersize Me What happens to someone who eats McDonald's food? Only McDonald's food... Watch this, you have been warned. http://www.supersizeme.com/</p>"},{"location":"blog/2004/11/08/moral-truths-vs-moral-relativi/","title":"Moral truths vs. moral relativity","text":"<p>There have been times in my life when, whilst trying to argue the case for postmodern, liberal virtue of tolerance I was accused of having no 'moral backbone'. My interlocutors believed that if I have no indissoluble, universal set of moral values, then I'm merely a moral relativist, merrily changing my stance as I see fit. Today, during an inspiring lecture on Bioethics I mentally returned to that discussion with a new set of arguments...</p> <p>What is an indissoluble and universal moral value? It is only that which can be called a moral truth, ergo an absolute. I have written on truth many times before and I strongly believe that any kind of truth, even if it exists is unattainable for us. This argument is especially valid for moral truths, because there is no way to prove that something is objectively good or bad. Moral truths are usually derived from religions and they vary from one religion to the next. In my opinion arguing that one must base ethical judgments on a moral truth is an invitation to making ethics arbitrary. Not only that, it is also an excuse for that arbitrariness, because each person can choose his moral truth and then argue that only his stance is valid to the exclusion of all others. This may work in a small group of people, fundamentally believing a holy text, but it is not a solution for a global society.</p> <p>The other stance is that of moral relativity. I will try to argue, that paradoxically this view is less arbitrary then the former one. What does moral relativity mean? Despite what it's critics try to say it is not a careless attitude, which allows you to make one kind of judgment today and a contradictory one tomorrow. Moral relativity means that your moral judgments are relative to something. What that something might be is another question. In our democratic century it could be, for instance, the common moral stance shared by the majority of people. The majority-stance is not timeless, it may change from generation to generation; it is also not universal and may vary from one society to another; but it is a basis for moral judgment. If all your decisions were in compliance with the views of the majority, you should not be rejected, but rather democratically embraced. Ideally, this is how laws are created in democratic societies.</p> <p>Ethics would not be ethics however if it only played such a descriptive role, it would then be sociology. Ethics requires a normative component, to be able to deal with unforeseen circumstances. Postmodern ethics of moral relativity, as far as I understand it, tries to employ reason and an almost scientific methodology. The ethicist tires to reconcile the complex innards of the majority-stance by creating a moral model. For instance, \"Why is it okay to kill a carrot or a cow and not okay to kill humans?\" One model could say that it is only okay to kill beings that do not feel. This works fine for the carrot and humans but fails for cows. Another model could claim that it is only okay to kill non-humans. This form of chauvinism (I heard it called species-ism) seems to work fine in our example, but has some other drawbacks. A third model, which was described in today's lecture talked about 'moral agents', meaning being which can control their destiny, those who are conscious subjects, not merely biological objects... This could work out fine if only we could tell how conscious a cow actually is... </p> <p>Whichever model you choose, you have to test it, like in science against what the majority of people actually believe. Ideally you should find a model, which fits the majority-stance, you could then use it to resolve conflicts, which have not yet been determined by referenda, and also use it as a convincing argument to persuade the remaining, skeptical minority.</p> <p>I believe that such a model, if we can develop one, would be a great asset to scientists. The public, whose ideas about science and its consequences are often surprisingly different from our own, constantly confronts us. We cannot hope to convince them to our point of view by a chauvinistic ideology, which claims that science is good per se. We will have to use moral relativity, we are after all postmodern.</p>"},{"location":"blog/2004/12/22/meta-gadu/","title":"meta gadu","text":"<p>radosc </p> <p>solo (0:20) Zmierzam do tego, ze lain miala fajnego OSa w tych swoich maszynach  solo (0:20) lol, zboczenie.. imie z malej, ale OS z wielkiej  .mK (0:20) no wlasnie... w maszynach czy w glowie?  </p> <p>solo (0:21) Ha, no... to zbyt trudne pytanie, chyba... Sam nie wiem, co tam sie dzialo .mK (0:21) A ZAUWAZYLES, ZE JAK KTOS PISZE CAPS'AMI TO USZY BOLA? solo (0:21) Nie, jednak jest to irytujace  .mK (0:22) no... mi sie wydaje, ze moj rozmowca krzyczy i staram sie go zawsze uspokoic .mK (0:22) chociaz czasem zupelnie nie o to im chodzi  solo (0:22) Dokladnie solo (0:22) Jakis czas temu zagadala mnie pewna dziewczyna na GG, ktora nawijala capsem ciagle solo (0:23) I rozmawialo mi sie z nia troche niewygodnie, bo kazda jej wypowiedz odbieralem... jakos tak zdecydowanie nienaturalnie solo (0:23) Pewnie dla kogos, kto nie mial wielkiej stycznosci z czatami, nie sprawialoby to roznicy - i taki i taki tekst bylby tak samo odbierany - jako tekst solo (0:24) Natomiast ja, gdy czytam to, co ktos do mnie pisze, rozumiem to jakby do mnie mowil .mK (0:24) no... to ciekawe... powoli wytwarza sie nowe zjawisko... psychologia rozmow tekstowych...  niech no tylko sie do tego dobiora jacys psychologowie, to bedziesz mial \"pokaz mi jak piszesz, a powiem ci kto cie molestowal w dziecinstwie\" psychoanalize solo (0:24) Niewykluczone  solo (0:25) A co ciekawe solo (0:25) Pozniej sie z ta dziewczyna widzialem, bo prosila o korki z matmy (zreszta wszystko zakumala od razu) i tak sobie pogadalismy o tym i o owym, miedzy innymi o naszych rozmowach na GG solo (0:25) Przyznalem sie jej, ze odebralem ja jako zupelnie inna osobe solo (0:26) Nie powiedzialem, ze jako glupia blondynke, ale dalem do zrozumienia, ze uznalem ja za wartosciowsza osobe po spotkaniu IRL  solo (0:26) Powiedzialem o tym capsie, ze pewnie przez to tez, a ona sie wytlumaczyla solo (0:26) Powiedziala, ze pisze capsem, zeby nie musiec pisac wielkimi literami 'Ty', 'Ciebie', imion, etc solo (0:26) sic! .mK (0:27) nom, a ciekawe jest wlasnie to, ze probujemy zintepretowac litery tak jak rozmowe, starajac sie odebrac przeslanie emocjonalne, charakter, nastroj, itd... wszystko co normalnie odbieramy z mowy ciala, tonu, fizjognomii solo (0:27) Jasne, bo tu litery sa jedynym kanalem komunikacyjnym solo (0:28) Dlatego czasem ciezko sie jest dogadac nowemu i staremu  solo (0:28) bo nowy olewa znaki interpunkcyjne, olewa szczegoly wypowiedzi, ktore zmieniaja znaczenie, etc .mK (0:28) no, my tez sporo olewamy: duze litery, polskie znaki, kropki na koncu zdania .mK (0:28) Wiec nawet jak ktos pisze w ten spos\u00f3b, to \"brzmi\" to inaczej.. .mK (0:28) ja mialem long-distance relationship z dziewczyna, z ktora bylem przedtem kilka dobrych lat .mK (0:28) no i jak tylko \"spotykalismy sie na gadu\", to za kazdym razem sie klocilismy .mK (0:28) w koncu zrezygnowalismy z tej formy kontaktu, bo nie moglismy sie tak dogadac solo (0:29) A to w ogole ciekawostki sa  solo (0:30) Ja np. strasznie nie lubie, gdy ktos pisze kropki na koncu zdan w wypowiedziach na czatach .mK (0:30) nie lubisz kropek? .mK (0:30) to ciekawe, ja nie zwrocilem na to uwagi solo (0:30) Nie lubie... solo (0:30) a zwlaszcza, gdy ktos nie uzywa wielkich liter na poczatku zdan, a zakancza je kropka. solo (0:30) takie wypowiedzi sa dla mnie pozbawione pozytywnych emocji. solo (0:30) wrecz negatywne. solo (0:31) stanowcze, zimne. solo (0:31) Chyba wzielo mi sie z tego, ze czesto ludzie, chcac podkreslic stanowczosc swojej wypowiedzi, pisza ja wlasnie z kropka na koncu .mK (0:31) kurde... widzisz... .mK (0:32) tak wiele odbieramy z tak niewielkiej ilosci informacji. to niesamowite .mK (0:32) a najgorsze jest to, ze wytwarzaja sie silne \"dialekty\" czatowe solo (0:32) No i wlasnie to jest niebezpieczne, gdy sie natrafi na kogos, kto sie posluguje zupelnie innym kodem, lub w ogole szumem, z ktorego ja wylapuje cos, co nie jest w ogole zamierzone .mK (0:33) hackerzy mowia w jeden sposob, zwylki uzytkownicy w troche inny, nowi uzytkownicy internetu w zupelnie jeszcze inny solo (0:33) czesc!! skad stukasz????? co masz fotke????? .mK (0:34) na przyklad .mK (0:33) no... to naprawde ciekawy temat... ciekawe kiedy pojawia sie jakies \"badania\" na ten temat solo (0:34) Psychologow jest sporo, a pracy dla nich chyba mniej, wiec pewnie niedlugo  .mK (0:34) i szkoda, ze te badania przeprowadzi jakis lamer, ktory sam nie czuje tego o czym pisze prace solo (0:34) Tez prawda... solo (0:35) Ale czy z takich badan cos moze wyjsc? Czy ktos moze na nich skorzystac? solo (0:35) (mowie o wiedzy, a nie o samych badaniach) solo (0:36) Wlasciwie to na pewno moze, chociazby w kwestii 'poznania wroga', albo potencjalnej ofiary .mK (0:36) wiesz... mysle, ze tak... gdyby byly naprawde dobrze przeprowadzone i naprawde zbadaly szeroka grupe ludzi (a nie statystycznie wazne 30), to mozna by odkryc pewne kody kulturowe ukryte pomiedzy kropkami...  a to pozwoliloby zrozumiec innych i uniknac tych dziwaczych konfliktow .mK (0:37) jak cos takiego gdzies zobaczysz, to podeslij linka  solo (0:37) Nie omieszkam  solo (0:38) Juz to widze.. W szkolach za pare lat sa zajecia z czatowania, gdzie pani dzieciom wyklada, jak niektorzy mowia (pisza) i jak nalezy ich wtedy rozumiec  .mK (0:38) nie strasz... w pierwszej klasie obok lekcji pisania dlugopisem, lekcja pisania w sieci solo (0:38) Albo jak nalezy sie wypowiadac, by byc zrozumianym .mK (0:39) ale raczej w to watpie... prawdziwych rozmow tez nas expilicite nie uczyli  solo (0:38) Ano solo (0:39) A wiesz, co mnie z tych wszystkich czatow, a zwlaszcza GG, najbardziej martwi? .mK (0:39) nie wiem solo (0:39) Ze ludzie w zyciu posluguja sie slangiem GGowym .mK (0:39) co masz na mysli? .mK (0:39) ze mowia \"lol\" jak ich cos rozbawi? solo (0:39) Mam okazje czytac wiele maili wysylanych przez abonentow naszej sieci do administracji, boku, etc i widze, jak niektorzy z nich pisza... solo (0:40) Pomijajac ortografie, z ktora wiekszosc jest, naturalnie, na bakier solo (0:40) w tekscie pelno jest '??'ow, '!!'ow', czasami jakies emotikony w '&lt;&gt;' solo (0:40) Do tego panuje tendencja, ze im wiecej '?' kolo siebie, tym lepiej  solo (0:41) Nie, akurat 'lol' nie razi mnie tak bardzo - pewnie dlatego, ze sam tegop uzywam, chociaz nie w mailach do mojego dostawcy Internetu  .mK (0:41) na 2 roku studiow mielismy zajecia z filozofii i facet, ktory je prowadzil byl bardzo w pozadku... pewnego razu kazal nam wymyslic liste 15 slow .mK (0:42) jak juz mielismy 15 slow, to nas zaskoczyl i kazal napisac ktorki wierszyk, uzywajac tych wlasnie slow .mK (0:42) w pewnym momencie jeden koles sie zapytal, czy moze uzyc emotikonow .mK (0:42) po 15 minutach tlumaczenia o co chlopakowi chodzi, facet stwierdzil, ze nie... ma uzyc tylko tych slow solo (0:43) Hehe  .mK (0:43) nigdy nie zapomne, zawiedzionego tonu glosu i niedowierzania tego kolesia, ktory powiedzial \"no ale skoro nie moge uzywac emotikonek, to jak mam wyrazic swoje uczucia?\" solo (0:43) Ha, no wlasnie .mK (0:44) facet prowadzacy zajecia posmutnial, wspomnial cos o szekspirze... ale ogolnie byl niepocieszony sytuacja solo (0:44) To kolejne fazy lenistwa umyslowego... Smileye spowodowaly, ze nie trzeba sie bardzo pocic, by ktos zauwazyl, ze piszemy cos humorystycznie albo sie z czegos cieszymy - wystarczy, ze sie napisze ':)' solo (0:45) emitikony takie w GG, czy innych czatach, to krok dalej - nie trzeba juz wymyslac kombinacji znaczkow, ktore cos moga przedstawic, jednak przy odrobinie wyobrazni .mK (0:46) jeden \"znacznik\" tego typu mi sie bardzo spodobal kiedys... oto tresc &lt;subliminal&gt; koniecznie odwiedz moja strone &lt;/subliminal&gt;</p>"},{"location":"blog/2005/01/22/how-to-win-affection-and-respect/","title":"How to win affection and respect","text":"<p>\"If you want to win affection and respect in this world, you must flatter people. Flatter high and low, and rich and poor, and silly and wise. You will get on famously. Praise this man's virtues and that man's vices. Compliment everybody upon everything, and especially upon what they haven't got. Admire guys for their beauty, fools for their wit, and boors for their breeding. Your discernment and intelligence will be extolled to the skies.\" -- JEROME K. JEROME (THE IDLE THOUGHTS OF AN IDLE FELLOW)</p>"},{"location":"blog/2005/02/19/zaklad-michala/","title":"Zak\u0142ad Micha\u0142a","text":"<p>Je\u017celi istnieje B\u00f3g sprawiedliwy, to ka\u017cdy sprawiedliwy cz\u0142owiek zostanie zbawiony, niezale\u017cnie czy w Niego wierzy, czy nie wierzy i jak\u0105 wyznaje religi\u0119.  Je\u017celi B\u00f3g nie jest sprawiedliwy, to \u017caden cz\u0142owiek, niezale\u017cnie od si\u0142y wiary i wyznania nie ma gwarancji zbawienia.</p>"},{"location":"blog/2005/03/13/mindscape/","title":"Mindscape","text":"<p>They call music \"the soundtrack of your life\", and that is a very true statement. The music you choose surrounds you as often as you wish, filling the canvas of your auditory soundscape. Of course, it is not the only soundtrack of your life, just like music is not the only sound that you hear. Sometimes however it can have a deep and profound effect on your surroundings. When you drive, when you work, when you're falling asleep or just after you wake up, the most pervasive thing which you hear, can be the music you selected. This music then fills the day's silences by playing quietly at the back of your mind. Sometimes a really annoying song or jingle will embed itself so strongly in your mind, that you cannot stop thinking about it. If you choose carefully, however, your silences will be filled by the treasured notes of your favorite music.</p> <p>In a similar way to a soundtrack, there is also a videotrack, which consists of everything that you see during your everyday. These sights can also be influenced by yourself in important ways... The decorations of your apartment, the paintings you hang on the walls, the people you choose to meet, the places you decide to visit, the films you watch all determine the optical content of your life. You may not be able to change the way the city you live in looks, but you can choose to take the longer route to anywhere in order to see its nicer parts... These images will then populate your dreams, memories and imaginations. It might be worth collecting the most beautiful ones.</p> <p>Each of your senses has a separate \"track\", or assemblage of experiences which all sum into the adventure, which you call your life.</p> <p>In addition to the sensual content of your life, there is also a collection of your thoughts, reflections, observations and feelings which arise internally, from your consciousness (or subconsciousness). Many of these you can also influence, change, or simply prune to select for the ones you find most pleasing. We do this in fact all the time, when we choose to think about something, or not to think about something else, not to be concerned with something... The amount of control you have over this part of your existence, can only be appreciated, if you realize, that quite like any other \"track\", you can add and subtract things from your mind. There are many things which seem overwhelming, like fears, phobias or prejudices, but in reality, this realm is the one in which we have most opportunity for alteration. Like the unchangeable streets of your town, there may be some things inherent to your personality, but these are few and usually buried in the subconsciousness, almost everything else is amendable. Your every though, your every mood is a creation of your mind and it is you and only you who is able to control it. </p> <p>Sometimes there are some external influences which make you feel a certain way. These influences cause echoes in your egotrack, like the annoying jingle may embed itself in your internal soundtrack. In such a case there is one thing worth remembering. Like the jingle, almost all external circumstances are temporary, so if you can't ignore them, you should try to wait them out. Eventually they will fade out and stop being an important influence on your life, replaced by new experiences, which you will select yourself.</p> <p>One big mistake, which many people make is not to understand, how much of your internal mindscape can be decided by you yourself. These people often struggle to modify the external circumstances into which they were born. This is often a constructive exercise, but it often leads to frustration and disappointment instead of happiness. This is because no s ingle person can make huge differences in the outside world. Small changes can cumulate over the course of your life, but will rarely give you quick solutions and there will always be some things which you have no power over. This means that an internal stewardship over your mind will always be necessary, regardless of how much work you put into the world outside.</p> <p>Think of your mind as your garden. Try to plant the most wonderful flowers, pull out weeds, protect the garden from droughts and storms. Don't let yourself however, be controlled by it...</p>"},{"location":"blog/2005/10/05/urgency-of-the-moment/","title":"Urgency of the moment","text":"<p>How I hate the urgency of the moment, how I despise the terror of tomorrow... </p> <p>In every moment, we are confronted with the nagging question of whether we are living our life to the fullest. Am I doing everything I can be doing? Am I doing everything I should be doing? How I hate the feeling that if I don't do something right now, then someone somewhere will do something, which will make me regret having remained passive. Buy now, before it's out of stock. Buy today, tomorrow the promotion will be over. Act now, it's your last chance, your last hope for a better car, better phone, better sex, better life...</p> <p>I guess I'm from a different age. To me every moment should be enjoyed, appreciated, tasted and reflected upon. Every day should be cherished for what it is and cherished for what it is not.</p> <p>I patiently watch as the river flows. Bemusedly, but not mockingly, I observe the others, as they line up with their buckets in a vain attempt to stop the river or change and reverse its motion.</p> <p>Many would say I take things too easy. These are the people who find virtue in pain and suffering. They are the people who believe that one ought to have sorrow and sacrifice in one's life, because it is the only way to change one's life, the only way to be happy. These are the people who don't see the contradiction in the preceeding sentence...</p> <p>I am ...</p>"},{"location":"blog/2005/11/13/5-milosci/","title":"5 Milosci","text":"<p>\"This is a man's world, but it is ruled by a woman.\"</p> <p>Powyzsze zdanie wyda Ci sie zapewne prawdziwe, szczegolnie jesli jestes mezczyzna, zyjacym w obrebie \u201ezachodniej cywilizacji\", pragnacym stworzyc normalny, czyli heteroseksualny i ekskluzywny (dwojako: monogamiczny i nie otwarty) zwiazek. Taki zwiazek, ktorego normalnosc jest chyba raczej normatywna niz naturalna, wymaga przestrzegania kilku zasad i musi byc oparty na slinych fundamentach, by funkcjonowal poprawinie, tj. aby obie zaangazowane osoby odczuwaly w nim szczescie, spokoj i spelnienie.</p> <p>Prawie kazdy ma swoje zdanie na temat tego, co stanowi podwaliny udanego zwiazku. Jeden powie, ze jest to zaufanie, inny ze seks, inny przywola abstrakcyjne pojecie milosci. Zdanie najpewniej rozpocznie od slow 'Wiesz, w zwiazku najwazniejsze jest...'. Tak, oczywiscie masz racje, zgadzam sie z wszystkim poza jedna sylaba: 'naj-', wartosciujaca absolutnie waznosc danej cechy zwiazku. Osobiscie uwazam, ze podwalin udanego zwiazku jest przynajmniej kilka i wszystkie razem sa jak kolumny podtrzymujace dach starozytnej greckiej swiatyni.</p> <p>Chcialbym tu sporzadzic liste tych cech zwiazku, ktore mozna inaczej rozpatrywac jako rozne rodzaje milosci, i ktore uwazam za konieczne dla funkcjonowania udanego zwiazku. Zamieszczam ta liste tu, aby sprowokowac Ciebie do refleksji, a moze tez polemiki. Lista, sklada sie z pieciu rownowaznych elementow i byc moze czegos w niej brakuje...</p> <p>Oto lista: 1) Romantyzm / Magnetyzm   2) Komunikacja             3) Seksualnosc Totalna     4) Dzielnosc Etyczna       5) Zaufanie / Akceptacja    </p>"},{"location":"blog/2005/11/13/5-milosci/#1-romantyzm-magnetyzm","title":"1) Romantyzm / Magnetyzm","text":"<p>Te ceche wymienilem jako pierwsza, gdyz zwykle pojawia sie ona jako pierwsza gdy rozpoczyna sie zwiazek (chociaz nie jest to zasada). Kazdy zna to uczucie, tak zwane zakochanie, czyli niepokoj wywolany obecnoscia drugiej wyjatkowej osoby, jeszcze wiekszy niepokoj wywolany jej brakiem, zwienczony ekstaza pierwszego pocalunku. Ta romantyczna mania z czasem przemija i zastepuje ja pewien magnetyzm, nazywany czasem rowniez 'chemia', ktory powoduje, ze wspolne spedzanie czasu sprawia osobom przyjemnosc i daje radosc. To powoduje, ze chcemy byc razem i chcemy uszczesliwiac sie wzajemnie, dajac sobie prezenty, czynia mile symboliczne gesty, etc.</p>"},{"location":"blog/2005/11/13/5-milosci/#2-komunikacja","title":"2) Komunikacja","text":"<p>Bardzo wazna cecha kazdego zwiazku, ktora nie wymaga chyba szczegolowego omowienia. Komunikacja i otwartosc jest potrzebna, bez niej pojawia sie tajemniczosc, niepokoj i zazdrosc. Komunikacja to rowniez szczerosc oraz zdolnosc rozmawiania o potencjalnych problemach, bez tego skazani jestesmy na tzw. 'klotnie', ktore sa symptomem zalamania komunikacji.</p>"},{"location":"blog/2005/11/13/5-milosci/#3-seksualnosc-totalna","title":"3) Seksualnosc Totalna","text":"<p>Seksualnosc jest oczywiscie wazna, ale dlaczego totalna? Totalnosc seksualnosci wynika z ekskluzywnej natury normalnego zwiazku. Jesli nie zaspokoisz swoich fantazji seksualnych z wybranym partnerem, to nie zaspokoisz ich z zadnym innym. Jesli chcesz kochac sie codziennie, to twoj partner musi chciec tego rowniez, jesli uwazasz seksualnosc za niekonczaca sie przygode, twoj partner musi chciec odkrywac razem z toba. W prostych slowach Chris'a Rock'a, \"Whatever you're into, your partner's gotta be into too\". W przeciwnym razie drobne seksualne frustracje, beda odkladac sie dzien po dniu w twojej podswiadomosci, az w wieku srednim przezyjesz kryzys prowadzacy do zdrady a przynajmniej do zakupu sportowego samochodu. Te symboliczne gesty, nie rozwiazuja jednak problemu w zwiazku.</p> <p>Wiele osob, szczegolnie poczatkowo, bagatelizuje problem seksu, uwazajac go za nieistotny, albo niegodny zmartwienia. Oczywiscie na poziomie racjonalnym mozna bagatelizowac seksualnosc, ostatecznie jednak, to nie twoj rozum bedzie domagal sie zaspokojenia libido.</p>"},{"location":"blog/2005/11/13/5-milosci/#4-dzielnosc-etyczna","title":"4) Dzielnosc Etyczna","text":"<p>Termin ten zaczerpnalem z Arystotelesowej definicji przyjani. Osoby dzielne etycznie czynia dobro \"ze wzgledu na pierwiastek intelektualny, ktory zdaje sie byc istota kazdego czlowieka\". Wedlug Arystotelesa przyjazn stanowi podobienstwo pod wzgledem etycznym. Uwazam, ze to jest rownie wazne w zwiazku, aby osoby bedace jego czescia wyznawaly podobne idealy, fascynowaly sie wspolnie wzajemnymi zainteresowaniami, wzajemnie rozwijaly sie intelektualnie i odczuwaly do siebie ta przyjazn ludzi szlachetnych, opisywana przez Arystotelesa. Budzi to wzajemny szacunek i mozliwosc polegania na opini drugiej osoby.</p>"},{"location":"blog/2005/11/13/5-milosci/#5-zaufanie-akceptacja","title":"5) Zaufanie / Akceptacja","text":"<p>Ostatnia cecha, ktora opisze jest chyba cecha najtrudniejsza do zrealizowania. Wszyscy wiemy, ze zaufanie jest najwazniejsza cecha stabilnego zwiazku, ale co ten termin oznacza. Wedlug popularnej, ale moim zdaniem calkowicie blednej definicji, zaufanie mozna miec do drugiej osoby, na ktorej nigdy sie nie zawiodles, ktora nigdy nie nadwyrezyla twojego zaufania. Paradoksalnie oznacza to, ze latwiej jest zaufac osobie prawie obcej, ktora nigdy nie miala szansy nas zranic, niz osobie nam bliskiej, z ktora dzielilismy zycie od wielu lat (bo w tak dlugim okresie czasu napewno poczynione zostana bledy, przeciez jestesmy tylko ludzmi). </p> <p>Moim zdaniem, lepsza nazwa dla tej opoki zwiazku jest akceptacja. Sklada sie na nia po pierwsze: swiadomosc, ze twoj partner moze czynic i pewnie poczyni jakies bledy w swojej drodze przez zycie, a po drugie zaufanie, ze poczynione bledy nie sa agresja przeciwko tobie, ani waszemu zwiazkowi. Pamietajmy, ze kategoria bledu jest kategoria retrospektywna, nikt kto blad czyni, nie robi tego swiadomie, najczesciej jest przekonany, ze postepuje slusznie. Akceptacja takich zachowan twojego partnera, tez nie moze byc absolutna. Rozni sie ona jednak od tradycyjnego pojecia zaufania tym, ze po popelnieniu przez twojego partnera bledu, nie wyciagasz listy jego dotychczasowych przewinien, celem dodania nowego i kalkulacji, czy nadal 'oplaca Ci sie' mu ufac. Miast tego, zastanow sie nad druga strona medalu, czy jestes szczesliwy z parnerem, we wszystkich pozostalych momentach waszego wspolzycia. Zastanow sie nad pozytywnymi aspektami zwiazku, a nie negatywnymi. Jesli wasza codziennosc daje Ci szczescie, to moze lepiej zaakceptowac twojego partnera tym kim jest, czlowiekiem popelniajacym bledy, ale czlowiekiem, ktory daje Ci szczescie.</p> <p>Kolejnosc, w ktorej wymienilem te cechy jest nie istotna. Mozna by je poukladac, lub pogrupowac na rozne sposoby. Na przyklad Komunikacja i Dzielnosc Etyczna sa potrzebne w kazdej udanej 'znajomosci', a jesli dodac do nich Zaufanie / Akceptacja to sa to podwaliny przyjazni. Nie mozna powiedziec, ze ktorakolwiek z tych milosci jest mniej lub bardziej wazna, wszystkie sa rowne i sekretem udanego zwiazku jest polaczenie ich wszystkich i wspolne dzielenie swiata z druga osoba na kazdy z tych sposobow.</p>"},{"location":"blog/2006/04/27/a-dream-about-dying/","title":"A dream about dying","text":"<p>I had a strange dream...</p> <p>I dreamt that I imbibed a large droplet of some mysterious clear liquid. As I drank, it became aparent, that this potion confers an understanding of living and dying. It causes a hallucination, which is of the same kind as the hallucinations of dying minds. Depending on the state of your soul, when you die, your hallucination will be a pleasant one or a nightmare. This is what haven and hell are. As you are dying the last experience you will perceive will be this dream. It will stretch the finality of your time and thus become infinite. </p> <p>As I understood this, I was suddenly also aware of Life. I was suddenly placed on a chessboard stretching infinitely in every direction. I was a black Knight piece. I was able to move in any direction I chose, but only in jumps taking me to the opposite end or a two by three squares rectangle. I was free to pursue any direction, yet confined only to this permitted motion. I was free to pursue any direction, yet in the infinity of possibilities, there seemed to be no sense of destination, no clearly visible goals or landmarks anywhere. The chessboard was infinite and seemingly uniform, whichever way I would look. It was made different only by the presence of other chess pieces standing here and there. It was my move.</p> <p>In the split second that it took for me to realize all this, I was lifted from the surface and raised high above the chessboard. From here I could see that the chessboard really was infinite and uniformly consistent. No features, other then the endless stretch of equal squares, some occupied, others empty. There really was no \"where\" to go, it really did make no greater sense, there was no one \"right\" path to follow.</p> <p>When I realized this, I begun to fly over the chessboard. The chessboard became a landscape, which combined every place I had ever visited. All these places were merged into one by the astounding speed of my flight. I begun to sing. With a clear, powerful voice I sang in a language I could not understand. I don't know what it was I was singing, but I knew I have to sing it as loudly as I can and to be heard by as many as possible. No-one heard me, but this just made me even more courageous and determined to sing as loudly as I could. I wish I knew what it was I had sung.</p>"},{"location":"blog/2006/09/15/5-years/","title":"5 years","text":"<p>On the morning of the eleventh day of September 2001 a plane crashed into the North tower of the World Trade Center in New York City. No one understood how it could happen; what a strange accident. Fifteen stunned minutes later another plane hit the second tower, and it became horrifyingly obvious that it wasn\u2019t an accident at all, but a deliberate attack. </p> <p>Five years has already passed since one of the defining moments of our century: the terrorist attacks which we have become accustomed to calling 9/11. It\u2019s hard to believe it happened so long ago; perhaps this is a good time to reflect on what happened and how the world has changed in those few years.</p> <p>I stayed glued to the TV that day, watching the events unfold and sharing the reactions of others. I distinctly recall the two initial questions, asked over and over: \u201cWho?\u201d and \u201cWhy?\u201d Why would someone want to destroy symbols of way trade is conducted around the world?  Answers were found quickly, because nobody really bothered to think about the questions. The first was answered with the obvious truism: terrorists. And why? Because they are evil. Trying to answer this question in any other way \u2013 trying to understand the motives behind the attacks \u2013 quickly came to mean that you were \u201cunpatriotic\u201d (if you happened to be American) or \u201canti-american\u201d (if not), or that you were sympathetic to the terrorists\u2019 cause.  </p> <p>The buildings under attack, the center of World Trade and the Military pentagon-shaped HQ, were not to be symbols of America\u2019s aggressive pursuit of global capitalism but of \u201cour way of life\u201d. Thus we arrived at today\u2019s familiar slogan: \u201cEvil terrorists want to destroy our way of life\u201d. This use of kindergarten logic was subsequently forged into a mighty sword, which has been wielded extensively over the last five years.</p> <p>On September 12th, 2001, the whole world stood united. We were all New Yorkers; we were all shocked and ready to help. On that one day it didn\u2019t matter if you were an American or an Arab, if you were European, Persian or Asian; every country was ready to support the USA in what they would do next. </p> <p>It was also clear that the giant empire was badly embarrassed. The most phallic of the symbols of its power had been penetrated and felled. A revenge attack was called for, but picking the right target was somewhat tricky. The terrorists were citizens of Egypt and Saudi Arabia, both strategic allies of the US. Eventually Afghanistan was picked, and no-one really questioned why. The bombing of this country was swift and relatively moderate. The repressive Taliban regime was displaced and replaced by someone more friendly, and the troops were called home. The moment they left, the new Afghanistan collapsed like a house of cards, but that\u2019s a different story.</p> <p>The world, recovering somewhat from the initial shock and still united, strong and resolute, waited for America\u2019s next move. This was perhaps the most opportune moment for good to be done, but it was placed in the wrong hands. With the world uniquely united, the US could have attempted to lead the quest to bring peace to the Middle East; instead, they chose to bring war.</p> <p>How could peace have been achieved? Certainly it would not have been easy, but with the equivalent of the resources spent on the Iraqi adventure, it would have stood a fair chance. I\u2019m referring, of course, to the biggest thorn in the Muslim side: the Israeli-Palestinian conflict. If we had devoted the past four years to this cause, the world would still have its old respect for the USA; many more countries (including Arabic ones) would consider themselves allies and supported the USA\u2019s initiatives; nations would still be united. If all the American blood and money spilled in Iraq were used here instead, then perhaps two nations would now be on their way to becoming two countries. </p> <p>As it happened, a more imperial doctrine of \u2018divide and conquer\u2019 was pursued. The world certainly is divided, and George W. Bush and Osama bin Laden have become unlikely bedfellows Each recruits the most fanatical supporters to the other\u2019s cause. Whenever Osama reemerges, Bush\u2019s ratings go up; whenever Bush publicly pushes his aggressive agenda, more people become angry and more become \u201cradicalized\u201d.</p> <p>Meanwhile, the US is stuck in Iraq fighting the \u201cWar on Terror\u201d over there, so they don\u2019t have to fight it in Madrid or London. This \u201cWar\u201d has grown into a tool serving the same purpose that the Cold War once served. It is not real. The war in Iraq is real, but the one \u201con Terror\u201d is just an emotionally-charged misrepresentation and oversimplification of the world\u2019s geopolitical reality. As propaganda, it\u2019s useful as an excuse to attack anyone anywhere \u2013 Iraq, Lebanon, Chechnya, perhaps Iran. </p> <p>Staging military attacks in the name of the War on Terror is now an excuse given by a power wanting to occupy and control another country or region. If you really wanted to fight terrorism, you would send in spies, not soldiers; you would destroy their organizations, not bridges and power plants; and you wouldn\u2019t be doing it primarily \u201cthere\u201d, but here in your own country. </p> <p>It is useful to note that the latest terror plots \u2013 the Madrid metro bombings, the London transport bombings, the plot to destroy US-bound planes and the failed German plot to bomb trains \u2013 were all planned by Spanish, British and German nationals. The War on Terror has itself begotten terror. Young, disaffected Europeans (usually Muslims of Arabic descent, but this may turn out to be a non-essential component) have a new, fashionable, radical ideology to pursue. Terrorism is becoming a way to express their Weltschmerz, teenage angst and other emotions which we have, as yet, only German names for\u2026</p> <p>So now what? Where can we go from here? The way I see things, we could either continue to delve ever deeper into the world of Orwell\u2019s 1984 with an everlasting war and constant fear, or we must change the nature of our global conversation. We must leave terror to the terrorists and the police. We must focus our attention on something else instead. We should take a look around; see what the real problems of the world are.  An issue like global warming could be one worth combating. Let us come together to save our mother Gaya\u2026 Let us believe in something that can unite us.</p> <p>Whatever the uniting issue should be, it had better come fast, because a whole generation is growing up now believing that \u201cevil terrorists\u201d are lurking around every corner. This could be a dangerous, self-fulfilling prophecy if the Neocon\u2019s short-sighted propaganda strategy solidifies into a global framework of stereotypes used to make sense of the world.</p>"},{"location":"blog/2006/10/30/inflected/","title":"Inflected","text":"<p>If you would like to know just how inflected the Polish language is take a look at the following word.</p> <p>\u201cPRZECZYTA\u0141BYM\u201d</p> <p>This single verb contains a whole sentence full of information\u2026</p> <p>verb stem The stem of the word it \u201c-CZYTA-\u201d which comes from the infinitive \u201cCZYTA\u0106\u201d, meaning \u201cto read\u201d. </p> <p>tense The present tense is indicated by a lack of any letters between \u201c\u0141\u201d and \u201cBYM\u201d. A past tense could be constructed by adding a \u201cBY\u0141\u201d syllable to make \u201cPRZECZYTA\u0141BY\u0141BYM\u201d, but that\u2019s not a common construction.</p> <p>person The letter \u201cM\u201d at the end of this word indicates the first person. A second person construction would be \u201cPRZECZYTA\u0141BY\u015a\u201d.</p> <p>mood The special syllable at the end of this verb \u201cBYM\u201d is an indication of the grammatical mood. It converts the indicative mood to a subjunctive. This syllable is an add-on, but as we\u2019ll see in the following examples it is also inflected following it\u2019s own rules.</p> <p>number The letter \u201c\u0141\u201d in the word indicates a singular form. In a plural form \u201cLI\u201d would substitute the \u201c\u0141\u201d. In the case of this word however the last syllable \u201cBYM\u201d would also have to be changed to make: \u201cPRZECZYTALIBY\u015aMY\u201d.</p> <p>gender The \u201c\u0141\u201d letter also indicates the masculine gender. In the feminine form it would be substituted by \u201c\u0141A\u201d and in neuter by \u201c\u0141O\u201d, as in \u201cPRZECZYTA\u0141ABYM\u201d.</p> <p>voice This special place holds one more message, which is the active voice of this verb. In passive voice \u201cNO\u201d would substitute the \u201c\u0141\u201d to make \u201cPRZECZYTANOBY\u201d.</p> <p>aspect The last bit of information is contained in the prefix \u201cPRZE\u201d. It changes the imperfect verb \u201cCZYTA\u0106\u201d to the perfect form \u201cPRZECZYTA\u0106\u201d and indicates that the person intends to complete the reading.</p> <p>Overall this single word contains enough information to fill a whole English sentence: \u201cPRZECZYTA\u0141BYM\u201d = \u201cI, a male, would read [something] from cover to cover\u201d. </p> <p>I would like to hereby express my greatest admiration for all people who learn a Slavic language as their second.</p>"},{"location":"blog/2006/12/13/sixth-day/","title":"Sixth Day","text":"<p>On the sixth day man created God in his image.</p> <p>There is an ongoing debate around the issue of intelligent design, creation science or creationism and the theory of evolution. People who profess to hold one of these views usually discard all arguments presented by the other side. Whether you're a proponent of Intelligent Design (e.g. Dembski) or it's opponent (e.g. Dawkins, Dennet), your best arguments seem to be those of ridiculing the other side. When preaching to the converted, each side presents its case to the best of their abilities, but when it comes to debate reason is tossed aside and appeals to emotions and beliefs are made.</p> <p>I am a biologist, thus my views on the theory of evolution are quite favorable, but I can quite easily understand the reasons why some people find it lacking and unsatisfying. The main view standing in opposition to Darwinism is that of Intelligent Design, more specifically that of the design inference.</p> <p>The inference of intelligent design states that some things, which we observe in nature are not explainable by the theory of evolution through natural selection. If such an entity does indeed exist, a living organism, which clearly did not arise by natural selection, then the theory of evolution will be falsified. This incidentally makes evolution a scientific theory, subject to test and falsification.</p> <p>The design inference further states that the vast complexity of life around us shows clear signs of being more then the sum of multiple random events happening over a long period of time. It has attributes exhibiting signs of an intelligence, and thus evidence of a Designer.  Similarly, if a being from another planet encountered one of our inventions floating out in space (the Viking space probe for instance), they would have to assume, that an intelligent being designed that piece of equipment, that an intelligent designer exists, or existed somewhere out there and produced this device.</p> <p>By the same rationale, if we find entities on this planet, which are complex beyond random chance and unexplainable by evolutionary processes, then we have to infer that a designer was responsible for the complexity which we encounter.</p> <p>The evolutionary history of certain living entities has not been elucidated. Ultra-Darwinists of the Dawkins stripe hold endless discussions about every such example and they stipulate numerous scientific theories about how their evolution could have preceded. Their arguments however never truly satisfy the proponent of intelligent design and whenever one mystery seems solved multiple others come into view in an endless chain of more and more complex explanations. The deeper we begin to understand evolution, the more questions we have and the less understandable the theory becomes to a lay person.</p> <p>Ultimately we may arrive at certain questions which we will never be able to answer, because they lie beyond the scope of history and any answer we give will be an untestable, unfalsifieble, unscientific speculation. The origin of life on Earth may be one such question. Whether or not science can truly be applied to the explanation of ultimate beginnings is an open question, which I do not wish to address in this text.</p> <p>My critique is that of the intelligent design inference and I shall try to address it from an unusual angle... Let's go back to the Viking craft floating out in space. Let's say that we are this alien race which recovered the Earth probe. There would be those amongst us who would try to explain it as an natural phenomenon and those who would stipulate an intelligent designer at work. Let's also assume that we had all technologies available to us, whether they are possible or not, which would allow us unlimited travel through time and space. If those who supported the design idea wanted to find evidence for their theory, they would set out on a quest to find the Designer.</p> <p>If they were clever and lucky, they would arrive on Earth circa 1970 and discover a team of engineers at NASA using their intelligence to design the probe. They would be designing the engines, the shielding, the scientific probes, the radio transmitters, etc.</p> <p>Upon close scrutiny however, our alien friends would discover that not all technologies used are being designed by the NASA team. The metal alloys used in the shielding were perfected elsewhere, the radio technology used was developed not only elsewhere, but by another person living over a hundred Earth years previously. If they went back to talk to Heinrich Hertz, they would discover that he was basing his work on the ideas about electromagnetism developed even earlier by James Maxwell, and so on.</p> <p>Upon completing their mission the alien team would have to conclude that the Viking space craft was not designed by a single being but by a whole race of beings inhabiting a planet over the space of millennia.</p> <p>They would conclude that intelligence definitely was involved, but it was not an intelligence of a single being, rather the intelligence of a long process of diligent scientific study and technological advancement. It was an intelligence of these historical processes, rather then any single person, that allowed Viking to be sent into space.</p> <p>When we consider these problems which the alien race would have with answering such a simple question as \"who designed the Viking space probe\", we realize the gross oversimplification of the design inference. The problem with \"intelligent design\" comes not from the word \"intelligent\", but with the word \"design(er)\" itself. When we think about it, nothing we design or discover is truly due to our inventiveness or genius. It's a consequence of our needs, the available knowledge and technologies, prevailing fashions, etc.</p> <p>Our intelligence is collective and includes equally our acquired knowledge, our consciousness and our unconscious processes. What makes us act and create is equally that which makes us uniquely human and that what is animal within us. No starving people are working on the design of the next iPod... I don't want to get into Maslow here.</p> <p>What some call Intelligence is the very process of evolution. Fist simple ideas are formed and accepted and then more complex theories can be formulated on their basis. No single first designer needs to be inferred to begin the process. The process develops gradually over time, from simplicity to complexity.</p> <p>It is only our need to anthropomorphize all processes we observe and assign each action to an actor, which makes us stipulate an ultimate Designer. The same processes cause us to always find some group of \"them\" responsible for everything in the world. On top of this, our vanity makes us forget that none of us is a true designer, but just a part of the design process. These mental states create our need for the ultimate designer a designer like us, a god in our image.</p>"},{"location":"blog/2009/03/11/browsers-2009-we-have-winner/","title":"Browsers 2009: We have a winner!","text":"<p>I downloaded the newest Beta versions of three popular OS X browsers: Opera, Safari and Firefox. To see which one has the best performance, I ran some benchmarks. Here are the results. They pretty much single one browser out as the best.</p> Acid 3 Rendering Test (longer is better, 100 is max.) Google V8 Performance Benchmark (longer is better) SunSpider JavaScript Benchmark (shorter is better) <p>All tests performed 3 times and averaged, in a clean user-space on Mac OS X using a \"typical\" MacBook (2.4GHz 2 Duo, 2GB RAM).</p>"},{"location":"blog/2009/03/16/browsers-2009-now-windows/","title":"Browsers 2009: Now for Windows","text":"<p>This is a continuation of the Browsers 2009 post with results for Windows browsers.  This time there are 2 arguable winners, but one clear loser.</p> Acid 3 Rendering Test (longer is better, 100 is max.) Google V8 Performance Benchmark (longer is better) SunSpider JavaScript Benchmark (shorter is better) <p>All tests performed 3 times and averaged, on a clean installation of Windows 7 (Beta build 7000) using a MacBook (2.4GHz 2 Duo, 2GB RAM).</p>"},{"location":"blog/2009/06/22/milosc-integralna/","title":"Mi\u0142o\u015b\u0107 Integralna","text":""},{"location":"blog/2009/06/22/milosc-integralna/#holarchia","title":"Holarchia","text":"<p>Ameryka\u0144ski filozof Ken Wilber u\u017cywa s\u0142owa Holarchia, by opisa\u0107 procesy przemian ewolucyjnych, w kt\u00f3rych kolejne etapy rozwoju zawieraj\u0105 w sobie etapy poprzednie. W ten spos\u00f3b na przyk\u0142ad atomy zawarte s\u0105 w cz\u0105steczkach, cz\u0105steczki w kom\u00f3rkach, kom\u00f3rki w organizmach, a m\u00f3zg bardziej ewolucyjnie prymitywnych hominid\u00f3w w m\u00f3zgach Homo sapiens. Ka\u017cdy kolejny poziom wykracza poza, ale zawiera w sobie poziom poprzedni. Holarchia to model przedstawiaj\u0105cy kolejne etapy takiego rozwoju, wskazuj\u0105cy kolejno\u015b\u0107 etap\u00f3w, a zatem r\u00f3wnie\u017c zale\u017cno\u015b\u0107 etap\u00f3w wy\u017cszych od istnienia ni\u017cszych. Wilber sugeruje pewien eksperyment my\u015blowy, kt\u00f3ry mo\u017ce pom\u00f3c rozstrzygn\u0105\u0107 czy kolejno\u015b\u0107 element\u00f3w w danej holarchii jest poprawna. Je\u015bli wyobrazimy sobie, \u017ce elementu z danego poziomu nagle zabrak\u0142oby, to uniemo\u017cliwi\u0142oby to istnienie element\u00f3w wy\u017cszych poziom\u00f3w, ale nie ni\u017cszych. Zniszczenie wszystkich cz\u0105steczek we wszech\u015bwiecie uniemo\u017cliwi\u0142oby istnienie kom\u00f3rek, a co za tym idzie organizm\u00f3w, ale nie zniszczy\u0142oby atom\u00f3w.</p>"},{"location":"blog/2009/06/22/milosc-integralna/#miosc-partnerska","title":"Mi\u0142o\u015b\u0107 partnerska","text":"<p>W tym tek\u015bcie, chcia\u0142bym zaproponowa\u0107 holarchi\u0119 stanowi\u0105c\u0105 wyidealizowany obraz rozwoju uczu\u0107 mi\u0142osnych pomi\u0119dzy partnerami. Opisywane elementy holarchii to uczucia, s\u0105 wi\u0119c niematerialne. Powoduje to, \u017ce ich holarchia nie jest oczywista, oraz umo\u017cliwia powstawanie paradoks\u00f3w polegaj\u0105cych na wytworzeniu kolejnego etapu przed ustanowieniem etap\u00f3w, kt\u00f3re powinny go poprzedza\u0107. Chcia\u0142bym zasugerowa\u0107, \u017ce paradoksy te, o ile nie zostan\u0105 naprawione, prowadz\u0105 do powstania patologii, chor\u00f3b mi\u0142o\u015bci.</p> <p>Chcia\u0142bym zaproponowa\u0107 nast\u0119puj\u0105ce elementy holarchii: Magnetyzm, Przyja\u017a\u0144, Mi\u0142o\u015b\u0107 romantyczna, Zaufanie, Eros, Mett\u0101.</p>"},{"location":"blog/2009/06/22/milosc-integralna/#magnetyzm","title":"Magnetyzm","text":"<p>Pierwszy element sk\u0142aniaj\u0105cy ludzi do rozpocz\u0119cia zwi\u0105zku mo\u017cna nazwa\u0107 magnetyzmem. Nie jest to w pe\u0142ni \u015bwiadome uczucie, lecz raczej impuls prowadz\u0105cy do zwr\u00f3cenia uwagi ku drugiej osobie. Mo\u017cna spekulowa\u0107 co do ewolucyjnej genezy tego mechanizmu oraz ewentualnej roli odgrywanej w nim przez \"feromony\" lub inne bod\u017ace biologiczne. Niezale\u017cnie od tych spekulacji, instynkt ten jest \u0142atwo rozpoznawalny, okre\u015blany potocznie mianem \"chemii\" i powoduje, \u017ce ludzie \"podobaj\u0105\" si\u0119 sobie. Atrakcja dwu os\u00f3b ku sobie prowadzi zazwyczaj do zawi\u0105zania przyja\u017ani, chocia\u017c zdarza si\u0119, \u017ce silne przyci\u0105ganie prowadzi od razu do dalszych etap\u00f3w relacji. Zwi\u0105zki, kt\u00f3re omin\u0119\u0142y i nie rozwin\u0119\u0142y przyja\u017ani, s\u0105 jednak niepe\u0142ne i nietrwa\u0142e.</p>"},{"location":"blog/2009/06/22/milosc-integralna/#przyjazn-philia","title":"Przyja\u017a\u0144 (Philia)","text":"<p>\"Wy\u017csze formy przyja\u017ani polegaj\u0105 na r\u00f3wno\u015bci\" - Arystoteles \"Etyka Nikomachejska\"</p> <p>Opis przyja\u017ani zas\u0142ugiwa\u0142by na swoj\u0105 w\u0142asn\u0105 holarchi\u0119, ale pozosta\u0144my przy klasycznej charakterystyce przyja\u017ani wg. Arystotelesa. W \"Etyce Nikomachejskiej\" wyr\u00f3\u017cnia\u0142 on trzy rodzaje przyja\u017ani. Przyja\u017a\u0144 utylitarna, praktyczna to przyja\u017a\u0144 obop\u00f3lnej korzy\u015bci. Arystoteles by\u0142 wielokrotnie krytykowany za uznanie tej formu\u0142y za rodzaj \"prawdziwej\" przyja\u017ani, ale w integralnej teorii zwi\u0105zk\u00f3w musi ona by\u0107 r\u00f3wnie\u017c brana pod uwag\u0119. \u017bycie sk\u0142ada si\u0119 przecie\u017c z nieustaj\u0105cej serii problem\u00f3w do rozwi\u0105zania, a osoby bliskie pomagaj\u0105 sobie z nimi radzi\u0107. Ten element nie mo\u017ce by\u0107 niedoceniony, gdy\u017c w d\u0142ugotrwa\u0142ym zwi\u0105zku (np. ma\u0142\u017ce\u0144skim) wzajemna pomoc jest warunkiem sine qua non jego przetrwania. Jednym z zagro\u017ce\u0144 dla przyja\u017ani, a zatem r\u00f3wnie\u017c dla mi\u0142o\u015bci, jest poczucie jednej ze stron (s\u0142uszne lub nies\u0142uszne), \u017ce \"wykonuje ca\u0142\u0105 prac\u0119\". Podkre\u015bla to istotno\u015b\u0107 utrzymania i docenienia r\u00f3wnowagi obop\u00f3lnych korzy\u015bci. </p> <p>Drugim rodzajem przyja\u017ani opisanym przez Arystotelesa jest przyja\u017a\u0144 dla przyjemno\u015bci. Ten rodzaj przyja\u017ani zwi\u0105zany jest blisko z opisanym ju\u017c magnetyzmem oraz z upodobaniem do tych samych form rozrywki. Partnerzy musz\u0105 potrafi\u0107 cieszy\u0107 si\u0119 swoj\u0105 obecno\u015bci\u0105 i lubi\u0107 sp\u0119dza\u0107 razem czas.</p> <p>Trzeci rodzaj przyja\u017ani Arystoteles okre\u015bli\u0142 jako \"wsp\u00f3\u0142dzielno\u015b\u0107 etyczn\u0105\". Ludzie w trakcie \u017cycia rozwijaj\u0105 si\u0119, ich zainteresowania si\u0119 zmieniaj\u0105, a horyzonty \u015bwiadomo\u015bci rozszerzaj\u0105. Procesowi temu przy\u015bwieca cnota \"dzielno\u015bci etycznej\", kt\u00f3ra ukierunkowuje rozw\u00f3j ten ku \"dobru\". Mo\u017cna uj\u0105\u0107 to innymi s\u0142owami m\u00f3wi\u0105c, \u017ce istotnym aspektem przyja\u017ani jest wzajemne inspirowanie si\u0119, nap\u0119dzanie wzajemnego rozwoju. Brak tego elementu w zwi\u0105zku partnerskim jest bardzo du\u017cym problemem, gdy\u017c mo\u017ce prowadzi\u0107 do braku zrozumienia, braku szacunku i ostatecznie do rozmini\u0119cia si\u0119 osobowo\u015bci do stopnia, gdzie prawdziwa przyja\u017a\u0144 b\u0119dzie niemo\u017cliwa.</p> <p>Budowanie przyja\u017ani to proces, kt\u00f3ry trwa ca\u0142e \u017cycie, ale zaniedbanie tego elementu zwi\u0105zku uniemo\u017cliwia przetrwanie kolejnemu elementowi holarchii.</p>"},{"location":"blog/2009/06/22/milosc-integralna/#miosc-romantyczna-irracjonalna","title":"Mi\u0142o\u015b\u0107 romantyczna (irracjonalna)","text":"<p>Mi\u0142o\u015bci romantycznej zadedykowano ca\u0142\u0105 epok\u0119 i nie bez powodu. Jest to pi\u0119kne uczucie potrafi\u0105ce zaw\u0142adn\u0105\u0107 rozs\u0105dkiem i zmys\u0142ami. Istot\u0105 mi\u0142o\u015bci romantycznej jest jej irracjonalna natura. Skutkiem buzuj\u0105cych w naszym organizmie hormon\u00f3w, produkcj\u0119 kt\u00f3rych powoduje blisko\u015b\u0107 atrakcyjnej osoby, jest czasowe zawieszenie dzia\u0142ania niekt\u00f3rych wy\u017cszych o\u015brodk\u00f3w my\u015blowych. Powoduje to postrzeganie ukochanej osoby jako \"tej jedynej\" i najwa\u017cniejszej. Ze wzgl\u0119du na inherentn\u0105 irracjonalno\u015b\u0107 i fundamentaln\u0105 g\u0142\u0119boko\u015b\u0107 prze\u017cywanych uczu\u0107, jest to element holarchii trudny do dekonstrukcji. By\u0107 mo\u017ce nawet dekonstrukcja jest antytetyczna wobec mi\u0142o\u015bci romantycznej, a jej opis powinien pozosta\u0107 domen\u0105 poet\u00f3w.</p> <p>Irracjonalna natura mi\u0142o\u015bci romantycznej jest jednak godna podkre\u015blenia, gdy\u017c bez niej niemo\u017cliwe by\u0142oby rozwini\u0119cie nast\u0119pnego elementu mi\u0142o\u015bci integralnej.</p>"},{"location":"blog/2009/06/22/milosc-integralna/#absolutne-zaufanie","title":"Absolutne Zaufanie","text":"<p>Zaufanie jest potrzebne w zwi\u0105zku. Nad tym truizmem warto si\u0119 chwil\u0119 zastanowi\u0107, gdy\u017c pozwoli nam to zrozumie\u0107 dlaczego prawdziwe zaufanie jest tak rzadkie i cenne. Ca\u0142kowita szczero\u015b\u0107 wobec drugiej osoby, otwarto\u015b\u0107 i prawdom\u00f3wno\u015b\u0107 nie le\u017cy w interesie \u017cadnego Homo oeconomicus. W sercu ka\u017cdego z nas kryj\u0105 si\u0119 r\u00f3\u017cne tajemnice, kt\u00f3re potrafimy ukrywa\u0107 przez ca\u0142e \u017cycie. Potrafimy ukrywa\u0107 je nawet przed samymi sob\u0105, ok\u0142amuj\u0105c si\u0119 i wmawiaj\u0105c sobie bardziej wyidealizowany obraz w\u0142asnej osoby. Taka racjonalizacja jest czasem przydatna, u\u0142atwiaj\u0105ca \u017cycie, ale osoba aspiruj\u0105ca do samo\u015bwiadomo\u015bci i zdrowia psychicznego powinna \"przepracowa\u0107\" swoje problemy i nauczy\u0107 si\u0119 akceptowa\u0107 si\u0119 tak\u0105 jaka jest naprawd\u0119. Szaman, ksi\u0105dz, psychoterapeuta to kolejne wcielenia pomocnik\u00f3w na drodze ku samo\u015bwiadomo\u015bci. Argumentowa\u0142bym, \u017ce pomocy nie trzeba szuka\u0107 tak daleko, uciekaj\u0105c si\u0119 do os\u00f3b trzecich. Najbli\u017csze osoby, w zdrowych zwi\u0105zkach (partnerskich lub rodzinnych) s\u0105 najlepszymi rozm\u00f3wcami, najlepiej nas znaj\u0105, najskuteczniej mog\u0105 nam pom\u00f3c poradzi\u0107 sobie z naszymi demonami. </p> <p>Taki rodzaj otwarcia wobec drugiej osoby, osoby nie zwi\u0105zanej tajemnic\u0105 konfesjona\u0142u, jest jednak czym\u015b co wymaga bardzo wysokiego stopnia zaufania. \u0179r\u00f3d\u0142em takiego zaufania mog\u0105 by\u0107 wi\u0119zi krwi, ale wobec partnera, wymagane jest zawieszenie podejrzliwo\u015bci, wyrachowania, racjonalno\u015bci. Innymi s\u0142owy potrzebna jest irracjonalna mi\u0142o\u015b\u0107 romantyczna, kt\u00f3ra pozwala uwierzy\u0107, \u017ce tej jednej osobie mog\u0119 powiedzie\u0107 wszystko. Absolutne zaufanie jest czym\u015b bardzo rzadkim, wymaga pary samo\u015bwiadomych os\u00f3b, chc\u0105cych zrozumie\u0107 samych siebie i siebie nawzajem. My\u015bl\u0119, \u017ce je\u015bli zdrowie psychiczne cz\u0142owieka mo\u017cna opisa\u0107 jako \u015bwiadomo\u015b\u0107 i akceptacj\u0119 wszystkich aspekt\u00f3w w\u0142asnej osoby, tak ekstrapoluj\u0105c, zdrowie psychiczne zwi\u0105zku to wzajemna znajomo\u015b\u0107 i akceptacja.</p> <p>Podobnie do przyja\u017ani, proces budowania takiego zaufania jest d\u0142ugotrwa\u0142y. Zwi\u0105zek, w kt\u00f3rym brak takiego zaufania, albo przynajmniej procesu d\u0105\u017cenia ku jego zbudowaniu, wydaje mi si\u0119 jednak pust\u0105 gr\u0105 pozor\u00f3w.</p>"},{"location":"blog/2009/06/22/milosc-integralna/#eros","title":"Eros","text":"<p>Przejd\u017amy do seksu. Nie ma seksu bez, przynajmniej minimalnej, dozy zaufania, a wspania\u0142ego seksu bez prawdziwego zaufania. Wbrew niekt\u00f3rym konserwatywnym nauczaniom, seks nie jest tylko prostym aktem prokreacji. W dzisiejszej kulturze zachodu on sam przyj\u0105\u0142 kultowy status, w wyniku reakcji na pruderyjno\u015b\u0107 epok minionych. To przesada w drug\u0105 stron\u0119, seks nie powinien sta\u0107 si\u0119 widowiskow\u0105 dyscyplin\u0105 sportow\u0105. </p> <p>Seks to intymna aktywno\u015b\u0107 ludzi, \u0142\u0105cz\u0105ca ich cia\u0142a w taki spos\u00f3b, w jaki szczera rozmowa \u0142\u0105czy ich dusze. Wspania\u0142y seks jest procesem tw\u00f3rczym i wymaga otwarto\u015bci na fantazje w\u0142asne i partnera. Jest on ci\u0105g\u0142ym procesem poznawania, odkrywania i wynajdowania nowych przyjemno\u015bci. Przy pe\u0142nym zespoleniu granice pomi\u0119dzy partnerami zanikaj\u0105, a cia\u0142o drugiej osoby staje si\u0119 cz\u0119\u015bci\u0105 w\u0142asnego. Przy takiej za\u017cy\u0142o\u015bci seks staje si\u0119 niesko\u0144czenie fascynuj\u0105c\u0105 przygod\u0105, kt\u00f3rej jedynym ograniczeniem s\u0105 granice wyobra\u017ani.</p> <p>Seks, kt\u00f3ry opisuj\u0119, poza dobr\u0105 form\u0105 fizyczn\u0105 wymaga czego\u015b jeszcze bardziej podstawowego. Wymaga on akceptacji swojego cia\u0142a, wyzbycia si\u0119 uprzedze\u0144 i zahamowa\u0144, oraz prawdziwego zaufania dla partnera.</p>"},{"location":"blog/2009/06/22/milosc-integralna/#metta-kochajaca-zyczliwosc","title":"Mett\u0101 (Kochaj\u0105c\u0105 \u017cyczliwo\u015b\u0107)","text":"<p>Dochodzimy do ostatniego szczebla holarchii, kt\u00f3ry chc\u0119 opisa\u0107. Je\u015bli wszystkie opisane elementy: praktyczne, psychiczne, erotyczne, znajduj\u0105 si\u0119 w r\u00f3wnowadze, mo\u017cliwe jest prawdziwe oddanie si\u0119 drugiej osobie. Jest to pe\u0142na, spokojna mi\u0142o\u015b\u0107, nie znaj\u0105ca zazdro\u015bci, ani niecierpliwo\u015bci. Te negatywne uczucia wywodz\u0105 si\u0119 w\u0142a\u015bnie z zaniedbania na kt\u00f3rym\u015b z ni\u017cszych poziom\u00f3w. Kochaj\u0105ca \u017cyczliwo\u015b\u0107 to mi\u0142o\u015b\u0107 zdrowa, idealna i jestem przekonany, \u017ce mo\u017cliwa.</p>"},{"location":"blog/2009/07/19/using-apt-command-line/","title":"Using APT from the command line","text":"<p>Debian's Advanced Packaging Tool (APT) has been ported over to Ubuntu and many other Linux distributions. There are many useful graphical user interfaces to the system such as Synaptic, but sometimes it's faster or easier to use it from the command line. Here's how.</p>"},{"location":"blog/2009/07/19/using-apt-command-line/#installing","title":"Installing","text":"<p>Searching the APT cache to find which package to install. If you want to install APPLICATION_NAME: <code>apt-cache search APPLICATION_NAME</code></p> <p>Installing the appropriate package: <code>sudo apt-get install PACKAGE</code></p>"},{"location":"blog/2009/07/19/using-apt-command-line/#inspecting","title":"Inspecting","text":"<p>Listing all installed packages: <code>dpkg -l</code></p> <p>Finding which package contains FILE: <code>dpkg -S FILE</code></p>"},{"location":"blog/2009/07/19/using-apt-command-line/#upgrading","title":"Upgrading","text":"<p>Update the lists of available packages: <code>sudo apt-get update</code></p> <p>Upgrade all installed packages to the latest available versions: <code>sudo apt-get upgrade</code></p>"},{"location":"blog/2009/07/21/show-hidden-files-finder/","title":"Show hidden files in the Finder","text":"<p>It's sometimes necessary to view and manipulate files hidden in your system. Unfortunately the Mac OS X  file browser, the Finder, does not display these files by default and has no easy way to access this option. This simple hack allows you to choose whether hidden files are displayed or not.</p>"},{"location":"blog/2009/07/21/show-hidden-files-finder/#method","title":"Method","text":"<p>In order to change this setting, launch the Terminal and paste in the following command:  </p> <pre><code>defaults write com.apple.Finder AppleShowAllFiles YES\n</code></pre> <p>The next thing you'll need to do is to restart the Finder. You can quit the Finder by issuing this command:  </p> <pre><code>killall Finder\n</code></pre> <p>The Finder should restart automatically, if it does not, you can launch it from the Dock.</p>"},{"location":"blog/2009/07/21/show-hidden-files-finder/#explanation","title":"Explanation","text":"<p>This command updates the user's defaults database with the value <code>YES</code>. The updated variable is called <code>AppleShowAllFiles</code> and is stored in this file: <code>~/Library/Preferences/com.apple.finder.plist</code></p> <p>You can read the current value of the variable by issuing this command: <code>defaults read com.apple.Finder AppleShowAllFiles</code></p> <p>You can also access this variable by using the Property List Editor to edit the mentioned file. The Property List Editor is a part of Apple Developer Tools.</p>"},{"location":"blog/2009/07/21/show-hidden-files-finder/#undo","title":"Undo","text":"<p>As you can probably guess, you can prevent hidden files from being shown, by setting the value back to <code>NO</code>.</p> <pre><code>defaults write com.apple.Finder AppleShowAllFiles NO\nkillall Finder\n</code></pre>"},{"location":"blog/2009/08/20/mac-address-spoofing-os-x/","title":"MAC address spoofing on OS X","text":"<p>Sometimes you need to connect to a network, which is designed to only allow connections from certain network interface cards, filtered by their MAC address. This filtering can be avoided by changing or spoofing your computer's MAC.</p> <pre><code>sudo ifconfig en0 lladdr 00:00:00:00:00:00 # &lt;- the new MAC address\nsudo ifconfig en0 down\nsudo ifconfig en0 up\n</code></pre> <p>Your original Media Access Control address will be restored after a reboot.</p>"},{"location":"blog/2009/11/09/cirkus-redux/","title":"Cirkus Redux","text":"<p>As I was standing in that office, I could barely stop myself from a burst of laughter. I managed to contain myself and turn the laugh into a big smile as I approached the lady with whom I was going to talk. But inside I was roaring with laughter at the serious lady behind her little desk, with the little stacks of papers arranged neatly and her little coffee mug, her telephone, the guard standing watch by the door, the signs on the walls, the whole shebang. </p> <p>It's not that this place in particular is funny, it's the same everywhere. People are playing a big game, here we play \"house\", here we play \"city\", here we play \"country\". Games. Rules of these games are written into laws. Following them is more important then following rules of other games, because it's not possible to just walk away, or at least not easy. </p> <p>But it's all just a big game, or to use a better, Hindu metaphor, it's a play. We get assigned roles: son, man, businessman, father, etc. We are supposed to follow the script assigned for each part in this giant pageant. It greatly saddens me, but also makes me laugh out loud, to see people who take their roles so seriously, that they forget that they are merely divine actors in this three ring circus. Sadly, you find them everywhere, struggling with their problems like Sisyphus, not realizing that the mountain is scenography, and the boulder is a prop.</p> <p>What these people tend to forget is the real reason why we are all here in the first place. The only thing that makes animals like us superior to the rest of this zoo, is our ability to appreciate truth and beauty. And both are external to us, we can no more create them then we can clap with one hand. And yet without us, they do not exist. We are the beholder, we are the conditio sine qua non for their existence. Truth and beauty. We are the eyes of the universe, nothing more, but certainly nothing less.</p> <p>And if we forget this, if we don't take the time to appreciate nature, music, art, each other, then we loose the only thing which makes us human. We revert back to the state of an animal, but worse still, because that of an animal tamed and caged. Nothing more then cows grazing in the field, and no more useful then our milk. </p> <p>We risk becoming automatons, ready to sacrifice ourselves in the name of technology. The support structure for such behavior is already here, in our technocratic, plutocratic, rule-of-the-average civilization. Democracy, still the best form of government, is also the best system to average interesting things away.</p> <p>If we end up following these rigid rules, with the only aim of consumption and reproduction, then we will have stopped being human. We may be contented, we may live long and productive lives, but if we live in a world sans ideals, we will have been just a step on the way to something grander. Perhaps the technology we create will someday awaken, as we have failed to awaken and realize, that it is now the bearer of truth and beauty. Perhaps these machines will be more human then us.</p>"},{"location":"blog/2009/11/16/tweaking-dock-os-x/","title":"Tweaking the Dock in OS X","text":"<p>The Dock in OS X has quite a few hidden features, which are not accessible through its simple System Preferences panel. Here are some of them.</p>"},{"location":"blog/2009/11/16/tweaking-dock-os-x/#pin-point","title":"Pin Point","text":"<p>You can pin the Dock to the left or right edge of your screen (or top/bottom if your dock is on the side of the screen). To do this, you can use these commands:</p> <pre><code>#Pin Dock to the left/top edge:\ndefaults write com.apple.dock pinning -string start\nkillall Dock\n\n#Pin Dock to the right/bottom edge:\ndefaults write com.apple.dock pinning -string end\nkillall Dock\n\n#Reset to default:\ndefaults delete com.apple.dock pinning\nkillall Dock\n</code></pre>"},{"location":"blog/2009/11/16/tweaking-dock-os-x/#spacers","title":"Spacers","text":"<p>If you want to add spacers, to divide your Dock'ed applications into groups you can use the following command. This will add one empty spacer to the end of your Dock, which you can reposition or delete like any icon.</p> <pre><code>defaults write com.apple.dock persistent-apps -array-add '{\"tile-type\"=\"spacer-tile\";}'\nkillall Dock\n</code></pre> <p>All the above commands modify the Preference List file stored in: <code>~/Library/Preferences/com.apple.Dock.plist</code></p> <p>If you mess something up too much, you can remove this file and re-start with an empty Dock.</p> <p>More info: http://www.usingmac.com/2007/12/6/leopard-tweaking-another-terminal-commands</p>"},{"location":"blog/2009/11/18/mdadm-gui-via-webmin/","title":"mdadm GUI - A graphical interface to Linux software RAID via Webmin","text":"<p>Anybody who cares about their data understands, that data \"is not safe, unless it exists in at least two copies\". This redundancy can be achieved by keeping various backups, but it's clear that the only backup scheme which works is the \"set it and forget it\" kind. If you are technical enough to build your own NAS, or if you run Linux on your desktop, you probably know about RAID, fake RAID, and software RAID. Using RAID makes your backup strategy completely transparent and your data safe and happy.</p>"},{"location":"blog/2009/11/18/mdadm-gui-via-webmin/#mdadm","title":"mdadm","text":"<p>mdadm is a wonderful Linux utility, which allows you to set up a software RAID array. Despite the fact that there is a registered Sourceforge project called mdadm-GUI, there is no code in it and it seems that no work is currently being done. This leaves us without a graphical user interface to mdadm. This is especially hard on new users, because the CLI commands for monitoring your array give rather cryptic results.</p> <pre><code>$ cat /proc/mdstat\nPersonalities : [linear] [multipath] [raid0] [raid1] [raid6] [raid5] [raid4] [raid10] \nmd0 : active raid1 sda1[0] sdb1[1]\n      730660160 blocks [2/2] [UU]\n\nunused devices: &lt;none&gt;\n\n$ sudo mdadm -D /dev/md0\n/dev/md0:\n        Version : 00.90\n  Creation Time : Mon Jan  5 16:49:53 2009\n     Raid Level : raid1\n     Array Size : 730660160 (696.81 GiB 748.20 GB)\n  Used Dev Size : 730660160 (696.81 GiB 748.20 GB)\n   Raid Devices : 2\n  Total Devices : 2\nPreferred Minor : 0\n    Persistence : Superblock is persistent\n\n    Update Time : Sun Oct 18 15:27:20 2009\n          State : active\n Active Devices : 2\nWorking Devices : 2\n Failed Devices : 0\n  Spare Devices : 0\n\n           UUID : ae9a0180:107c7d2a:85e38229:c66e1e31\n         Events : 0.4541759\n\n    Number   Major   Minor   RaidDevice State\n       0       8        1        0      active sync   /dev/sda1\n       1       8       17        1      active sync   /dev/sdb1\n</code></pre>"},{"location":"blog/2009/11/18/mdadm-gui-via-webmin/#installing-webmin","title":"Installing Webmin","text":"<p>A GUI for mdadm is provided by Webmin, the browser-based administrative suite. Installation on a Debian-based Linux distribution, such as Ubuntu is trivial.</p> <p>1) Add the appropriate repository to your apt.sources list. On Ubuntu, create the following file: <code>/etc/apt/sources.list.d/webmin.list</code> and add the following lines to it:</p> <pre><code># Repository for Webmin\ndeb http://download.webmin.com/download/repository sarge contrib\n</code></pre> <p>2) Update your APT cache and install Issue the following commands:</p> <pre><code>$ sudo apt-get update\n$ sudo apt-get install webmin\n</code></pre> <p>3) Visit your Webmin administration panel Use your browser to access your webmin panel at the following url: https://localhost:10000</p>"},{"location":"blog/2009/11/18/mdadm-gui-via-webmin/#mdadm-through-webmin","title":"mdadm through Webmin","text":"<p>To administer the Software RAID using webmin login as a sudo-er, go to the page <code>Hardware &gt; Linux RAID</code> and play around.</p>"},{"location":"blog/2009/11/19/my-informative-shell-prompt/","title":"My informative shell prompt","text":"<p>The Bash shell prompt in your Terminal is very highly customizable and can display a wide variety of useful information. This is what my prompt looks like and how to create it.</p> <p><code>[09:10:11] user@host ~/Desktop +</code></p>"},{"location":"blog/2009/11/19/my-informative-shell-prompt/#explanation","title":"Explanation","text":"<p>The following information is presented at the prompt:</p> <ul> <li><code>[09:10:11]</code> : the current time  </li> <li><code>user@host</code> : the name of the logged in user and the host machine  </li> <li><code>~/Desktop</code> : the current working directory</li> <li><code>+</code> or <code>-_-</code> : this part presents the exit status of the most recently executed command. If the command executes correctly the prompt shows a green <code>+</code>. If the command returns an error, then the prompt shows an unhappy <code>-_-</code>.</li> </ul>"},{"location":"blog/2009/11/19/my-informative-shell-prompt/#bash-version","title":"Bash version","text":"<p>In order to recreate this prompt, you should add the following code to your <code>~/.bash_profile</code> file. On some systems this file may need to be created, or you'll need to edit the <code>~/.bashrc</code> file instead.</p>"},{"location":"blog/2009/11/19/my-informative-shell-prompt/#linux-version","title":"Linux version","text":"<pre><code>##\n# Color codes\n##\nDULL=0\nBRIGHT=1\n\nFG_BLACK=30\nFG_RED=31\nFG_GREEN=32\nFG_YELLOW=33\nFG_BLUE=34\nFG_VIOLET=35\nFG_CYAN=36\nFG_WHITE=37\n\nFG_NULL=00\n\nBG_BLACK=40\nBG_RED=41\nBG_GREEN=42\nBG_YELLOW=43\nBG_BLUE=44\nBG_VIOLET=45\nBG_CYAN=46\nBG_WHITE=47\n\nBG_NULL=00\n\n##\n# ANSI Escape Commands\n##\nESC=\"\\033\"\nNORMAL=\"\\[$ESC[m\\]\"\nRESET=\"\\[$ESC[${DULL};${FG_WHITE};${BG_NULL}m\\]\"\n\n##\n# Shortcuts for Colored Text ( Bright and FG Only )\n##\n\n# DULL TEXT\n\nBLACK=\"\\[$ESC[${DULL};${FG_BLACK}m\\]\"\nRED=\"\\[$ESC[${DULL};${FG_RED}m\\]\"\nGREEN=\"\\[$ESC[${DULL};${FG_GREEN}m\\]\"\nYELLOW=\"\\[$ESC[${DULL};${FG_YELLOW}m\\]\"\nBLUE=\"\\[$ESC[${DULL};${FG_BLUE}m\\]\"\nVIOLET=\"\\[$ESC[${DULL};${FG_VIOLET}m\\]\"\nCYAN=\"\\[$ESC[${DULL};${FG_CYAN}m\\]\"\nWHITE=\"\\[$ESC[${DULL};${FG_WHITE}m\\]\"\n\n# BRIGHT TEXT\nBRIGHT_BLACK=\"\\[$ESC[${BRIGHT};${FG_BLACK}m\\]\"\nBRIGHT_RED=\"\\[$ESC[${BRIGHT};${FG_RED}m\\]\"\nBRIGHT_GREEN=\"\\[$ESC[${BRIGHT};${FG_GREEN}m\\]\"\nBRIGHT_YELLOW=\"\\[$ESC[${BRIGHT};${FG_YELLOW}m\\]\"\nBRIGHT_BLUE=\"\\[$ESC[${BRIGHT};${FG_BLUE}m\\]\"\nBRIGHT_VIOLET=\"\\[$ESC[${BRIGHT};${FG_VIOLET}m\\]\"\nBRIGHT_CYAN=\"\\[$ESC[${BRIGHT};${FG_CYAN}m\\]\"\nBRIGHT_WHITE=\"\\[$ESC[${BRIGHT};${FG_WHITE}m\\]\"\n\n\nfunction proml {\ncase $TERM in\n    xterm*|rxvt*)\n        TITLEBAR='\\[\\033]0;\\u@\\h:\\w\\007\\]'\n        ;;\n    *)\n        TITLEBAR=\"\"\n        ;;\nesac\n\nPS1=\"${TITLEBAR}\\\n$NO_COLOUR[\\t]\\\n $GREEN\\u@\\h$YELLOW \\w$NORMAL \\\n \\`if [ \\$? = 0 ]; then echo '$GREEN+$NORMAL'; else echo '$RED-_-$NORMAL'; fi\\` \\\n\\n$ \"\nPS2='&gt; '\nPS4='+ '\n}\nproml\n</code></pre>"},{"location":"blog/2009/11/19/my-informative-shell-prompt/#mac-version-which-also-provides-the-error-code-value","title":"Mac version, which also provides the error code value:","text":"<pre><code>function proml {\nlocal BLUE=\"\\[\\033[0;34m\\]\"\nlocal RED=\"\\[\\033[0;31m\\]\"\nlocal LIGHT_RED=\"\\[\\033[1;31m\\]\"\nlocal WHITE=\"\\[\\033[1;37m\\]\"\nlocal GREEN=\"\\033[32m\\]\"\nlocal YELLOW=\"\\033[33m\\]\"\nlocal NO_COLOUR=\"\\[\\033[0m\\]\"\ncase $TERM in\n    xterm*|rxvt*)\n        TITLEBAR='\\[\\033]0;\\u@\\h:\\w\\007\\]'\n        ;;\n    *)\n        TITLEBAR=\"\"\n        ;;\nesac\n\nPS1=\"${TITLEBAR}\\\n$NO_COLOUR[\\t]\\\n $GREEN\\u@\\h$YELLOW \\w$NO_COLOUR $BLUE(\\\n\\` echo \\$?;\\`\\\n)$NO_COLOUR\n\\$ \"\n\nPS2='&gt; '\nPS4='+ '\n}\nproml\n</code></pre>"},{"location":"blog/2009/11/19/my-informative-shell-prompt/#theme-for-zsh","title":"Theme for Zsh","text":"<pre><code>PROMPT=$'%D{[%I:%M:%S]} %{$fg_bold[green]%}%n@%m %{$reset_color%}%{$fg[yellow]%}%~%{$reset_color%} $(git_prompt_info) %{$fg[blue]%}[%?]%{$reset_color%}\\\n%{$fg_bold[blue]%}%(!.#.$)%{$reset_color%} '\n\nZSH_THEME_GIT_PROMPT_PREFIX=\"(\"\nZSH_THEME_GIT_PROMPT_SUFFIX=\")%{$reset_color%}\"\nZSH_THEME_GIT_PROMPT_DIRTY=\" %{$fg[red]%}*%{$reset_color%}\"\nZSH_THEME_GIT_PROMPT_CLEAN=\"\"\n</code></pre>"},{"location":"blog/2009/11/19/my-informative-shell-prompt/#a-version-for-fish","title":"A version for Fish","text":"<pre><code>function fish_prompt --description 'Write out the prompt'\n    #Save the return status of the previous command\n    set stat $status\n\n\n    # Just calculate these once, to save a few cycles when displaying the prompt\n    if not set -q __fish_prompt_hostname\n        set -g __fish_prompt_hostname (hostname|cut -d . -f 1)\n    end\n\n    if not set -q __fish_prompt_normal\n        set -g __fish_prompt_normal (set_color normal)\n    end\n\n    if not set -q __fish_color_blue\n        set -g __fish_color_blue (set_color -o blue)\n    end\n\n    #Set the color for the status depending on the value\n    set __fish_color_status (set_color -o green)\n    if test $stat -gt 0\n        set __fish_color_status (set_color -o red)\n    end\n\n    switch $USER\n\n        case root\n\n        if not set -q __fish_prompt_cwd\n            if set -q fish_color_cwd_root\n                set -g __fish_prompt_cwd (set_color $fish_color_cwd_root)\n            else\n                set -g __fish_prompt_cwd (set_color $fish_color_cwd)\n            end\n        end\n\n        printf '%s@%s %s%s%s# ' $USER $__fish_prompt_hostname \"$__fish_prompt_cwd\" (prompt_pwd) \"$__fish_prompt_normal\"\n\n        case '*'\n\n        if not set -q __fish_prompt_cwd\n            set -g __fish_prompt_cwd (set_color $fish_color_cwd)\n        end\n\n        printf '[%s] %s%s@%s %s%s %s(%s)%s \\f\\r&gt; ' (date \"+%H:%M:%S\") \"$__fish_color_blue\" $USER $__fish_prompt_hostname \"$__fish_prompt_cwd\" (pwd) \"$__fish_color_status\" \"$stat\" \"$__fish_prompt_normal\"\n\n    end\nend\n</code></pre>"},{"location":"blog/2009/12/11/install-linux-inside-windows-using-virtualbox/","title":"Install Linux inside Windows using VirtualBox","text":"<p>I made a video tutorial on how to make a Linux virtual machine on Windows using Virtual Box. Take a look...</p> <p>Steps</p> <ol> <li>Download VirtualBox</li> <li>Install VirtualBox</li> <li>Download Ubuntu</li> <li>Create a virtual machine</li> <li>Install Ubuntu inside the virtual machine</li> <li>Install VirtualBox add-ons for Linux</li> </ol> <p> </p>"},{"location":"blog/2010/10/10/browser-usage-statistics-past-present-and-future/","title":"Browser usage statistics - past, present and future","text":"<p>Every web developer knows this story... Microsoft arrived late to the Internet party, but they huffed and they puffed... and they bundled their browser in with their dominating OS... and they blew down the house which Netscape built. After this, they congratulated themselves for winning the Browser wars and proceeded to sit on their laurels for over half a decade.</p> <p>Over the years using Internet Explorer became synonymous with using the Internet for most \"regular\" users. This created huge headaches for web developers, who had to support the stale platform, while much more powerful and feature rich browsers lay dormant and undiscovered. It turned out that the afore mentioned regular users didn't really know what a browser was, why they should change it or even update it. </p> <p>Black hat hackers, scammers and spammers had a field day with this, exploiting literally hundreds of security vulnerabilities in unpatched versions of IE. It took many years, but finally even regular users are beginning to understand, that there might be a reason not to use IE 6.</p>"},{"location":"blog/2010/10/10/browser-usage-statistics-past-present-and-future/#past","title":"Past","text":"<p>There are two charts, I would like to share with you. The first one is just an illustration, which demonstrates two things. Firstly point is the enormous influence of Microsoft on the world over the last decade and a half. And the second is the lack of savvy of users, who once presented with a browser are content to use it without question.</p> Figure 1. Browser usage timeline 1994-2010 <p>This chart shows the history of the Internet broken down by browser usage. It illustrates, how the early internet was once dominated by the first popular graphical browser Mosaic, the rise and fall of Netscape Navigator, and finally the rise and steady decline of Internet Explorer. The bottom right corner of the chart is where all the action is today, with Firefox, Chrome, Safari and the eternal Opera each vying for users' attention.</p>"},{"location":"blog/2010/10/10/browser-usage-statistics-past-present-and-future/#future","title":"Future","text":"<p>The biggest causes of headache for web developers are the oldest versions of Internet Explorer, which are still inexplicably popular, namely IE 6 and 7. Let's be honest, by today's standards, these browsers suck. They have limited support for CSS, very inefficient JavaScript engines, need I go on? The poor web developer may make an excellent site in HTML5/CSS3 which will work in all browsers, but it will of course not work in IE. Are we stuck with this situation forever?</p> Figure 2. Usage of Internet Explorer by version 2009-2010 <p>Hopefully no. This second chart illustrates the trends among users of IE over the past 2 years. As this chart shows, users are finally switching over to IE 8. If this trend continues (dashed lines in the chart are trend lines) older versions of IE should become marginalized by the end of 2011. Just one more year people, and we'll be free!</p>"},{"location":"blog/2010/10/19/run-multiple-websites-one-django-project/","title":"How to run multiple websites from one Django project","text":"<p>It is sometimes beneficial to run two or more web sites or subdomains of a site from a single Django code base. Each Django app in the project can then power a website on a different domain, but all the apps can still share a single database with a single administrative interface.</p> <p>In order to achieve this, one needs to prepare separate WSGI sockets for each website. You can provide a separate <code>settings.py</code> file for each website, thus selecting which apps will be active on that site and which <code>urls.py</code> file will be the <code>ROOT_URLCONF</code> and handle the routing of requests for that domain.</p> <p>In this example I will show how to set up two subdomains of one site running on the WebFaction hosting service.</p>"},{"location":"blog/2010/10/19/run-multiple-websites-one-django-project/#preliminaries","title":"Preliminaries","text":"<p>First of all, we need to set up: 1) a single WebFaction application running Django, 2) a WebFaction domain with two subdomains (separate domains could also be used), 3) a WebFaction website running on both domains and powered by the Django application.  </p>"},{"location":"blog/2010/10/19/run-multiple-websites-one-django-project/#apache-configuration","title":"Apache configuration","text":"<p>Secondly, we need to edit the <code>http.conf</code> file, which is stored in the <code>~/webapps/APPLICATION_NAME/apache2/conf</code> directory. In this file, we need to create a <code>&lt;VirtualHost&gt;</code> directive for each subdomain we are using...</p> <pre><code># Virtual hosts setup\nNameVirtualHost *\n&lt;VirtualHost *&gt;\n    ServerName subdomain1.example.com\n\n    WSGIDaemonProcess APPLICATION_NAME processes=5 python-path=/home/USERNAME/webapps/APPLICATION_NAME:/home/USERNAME/webapps/APPLICATION_NAME/lib/python2.6 threads=1\n    WSGIScriptAlias / /home/USERNAME/webapps/APPLICATION_NAME/subdomain1.wsgi\n&lt;/VirtualHost&gt;\n\n&lt;VirtualHost *&gt;\n    ServerName subdomain2.example.com\n\n    WSGIDaemonProcess APPLICATION_NAME_www processes=5 python-path=/home/USERNAME/webapps/APPLICATION_NAME:/home/USERNAME/webapps/APPLICATION_NAME/lib/python2.6 threads=1\n    WSGIScriptAlias / /home/USERNAME/webapps/APPLICATION_NAME/subdomain2.wsgi\n&lt;/VirtualHost&gt;\n</code></pre> <p>The <code>WSGIDaemonProcess</code> directive specifies the configuration of the server deamon processes which will power each domain. In the example above, each domain is powered by 5 separate processes. This consumes 5 times more memory then a single process, but allows you to handle more requests simultaneously. This directive also allows you to specify the <code>PYTHONPATH</code> specific to your Django codebase and library directory.</p> <p>The <code>WSGIScriptAlias</code> allows you to specify, which file will start the <code>WSGI</code> socket for the domain.</p>"},{"location":"blog/2010/10/19/run-multiple-websites-one-django-project/#wsgi-startup-files","title":"WSGI startup files","text":"<p>Next we need to create the two .wsgi files: <code>/home/USERNAME/webapps/APPLICATION_NAME/subdomain1.wsgi</code> <code>/home/USERNAME/webapps/APPLICATION_NAME/subdomain2.wsgi</code> </p> <p>Each file should contain the following code with appropriately <code>subdomain1</code> or <code>subdomain2</code>, and <code>PROJECT_NAME</code> should be changed to the name of the directory which holds your Django project files.</p> <pre><code>import os\nimport sys\nfrom django.core.handlers.wsgi import WSGIHandler\n\nos.environ['DJANGO_SETTINGS_MODULE'] = 'PROJECT_NAME.subdomain1_settings' # or PROJECT_NAME.subdomain2_settings\napplication = WSGIHandler()\n</code></pre>"},{"location":"blog/2010/10/19/run-multiple-websites-one-django-project/#settingspy-files","title":"<code>settings.py</code> files","text":"<p>Next, we need to set up the two <code>settings.py</code> files. I would actually recommend setting up 3 of these, one to hold information, which is common to all domains, let's leave it named <code>settings.py</code> and the two domain-specific files: <code>subdomain1_settings.py</code> and <code>subdomain2_settings.py</code>. </p> <p>The subdomain specific settings files will inherit all the defaults from the common <code>settings.py</code> file, and override only those values which are specific to the domain. For instance, lets create a subdomain specific settings file, which runs a different then default set of apps and uses a different <code>urls.py</code> as <code>ROOT_URLCONF</code>. Such a file should contain the following code:</p> <pre><code>from settings import *\n\nSITE_ID = 1\n\nROOT_URLCONF = 'subdomain1_urls'\n\nINSTALLED_APPS = (\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.sites',\n    'django.contrib.messages',\n\n    # other apps specific to this domain\n)\n</code></pre>"},{"location":"blog/2010/10/19/run-multiple-websites-one-django-project/#urlspy-files","title":"<code>urls.py</code> files","text":"<p>Now, we just need to make the two url configuration files, which will handle the routing of requests coming into our domains. These are standard <code>url.py</code>, they just have to be named, as specified in the <code>settings.py</code> files, so <code>subdomain1_urls.py</code> and <code>subdomain2_urls.py</code>.</p>"},{"location":"blog/2010/10/19/run-multiple-websites-one-django-project/#conclusion","title":"Conclusion","text":"<p>So there you have it. This technique works well on WebFaction, and I'm sure can be replicated on other hosting services, which allow you to modify Apache configuration files.</p> <p>One thing to keep in mind is that running two separate <code>WSGI</code> processes will use twice as much memory as running one. You can tweak the memory usage to your needs by specifying how many processes each <code>WSGI</code> socket is handled by.</p>"},{"location":"blog/2010/10/28/check-google-analytics-unique-visitors-python/","title":"Check Google Analytics unique visitors from Python","text":"<p>You may want to check your Google Analytics data programmatically. This allows you to write some logic around your analytics data, such as sending e-mails in certain situations or just providing a status update for you to inspect without the hassle of logging into your account with a browser.</p> <p>For a simple example, I use a utility called GeekTool to display certain information, such as incoming email, directly on my desktop for quick reference. I decided to also display updates of my Analytics profiles in this way, displaying a daily summary of unique visitors for each site I monitor. The end result looks like this:</p> Google Analytics unique visitor counters displayed by GeekTool","tags":["python","google-analytics","geektool"]},{"location":"blog/2010/10/28/check-google-analytics-unique-visitors-python/#install-the-google-data-apis-python-client-library","title":"Install the Google Data APIs Python Client Library","text":"<p>Visit the gdata-python-client page, grab the latest version and install.</p> <pre><code>$ wget http://gdata-python-client.googlecode.com/files/gdata-2.0.18.tar.gz\n$ tar -xzf gdata-2.0.18.tar.gz\n$ cd gdata-2.0.18\n$ sudo python setup.py install\n</code></pre>","tags":["python","google-analytics","geektool"]},{"location":"blog/2010/10/28/check-google-analytics-unique-visitors-python/#test-the-installation","title":"Test the installation","text":"<p>Test that the installation was success full by downloading the <code>account_feed_demo.py</code> script and running it.</p> <pre><code>$ curl -o account_feed_demo.py http://gdata-python-client.googlecode.com/hg/samples/analytics/account_feed_demo.py\n$ python account_feed_demo.py\n</code></pre> <p>Follow the onscreen instructions and try to log into your account.</p>","tags":["python","google-analytics","geektool"]},{"location":"blog/2010/10/28/check-google-analytics-unique-visitors-python/#design-your-query","title":"Design your query","text":"<p>If you want to display yesterday's unique visitors, then you can follow this tutorial directly. The only piece of data you will need is the ID of your website profile's table in Google Analytics. If you successfully logged in with the <code>account_feed_demo.py</code> script, then it displayed, among other things the following information:</p> <pre><code>-------- First 1000 Profiles in Account Feed --------\nWeb Property ID = UA-ACCOUNT_ID-4\nAccount Name    = ACCOUNT_NAME\nAccount Id      = ACCOUNT_ID\nProfile Name    = michal.karzynski.pl\nProfile ID      = PROFILE_ID\nTable ID        = ga:TABLE_ID\n</code></pre> <p>What you will need to make the below script work is just your <code>TABLE_ID</code> or a list of these IDs for each site you want to monitor.</p> <p>You may display all sorts of other data from Google Analytics and other Google services. There's a very useful utility, which allows you to design a data request for the <code>gdata</code> API, called <code>gdataExplorer</code>. Visit that page if you want to display other types of data.</p>","tags":["python","google-analytics","geektool"]},{"location":"blog/2010/10/28/check-google-analytics-unique-visitors-python/#connect-with-googles-gdata-api-using-python","title":"Connect with Google's gdata API using Python","text":"<p>This is the script which can collect your unique visitor counts from Analytics. It's faily straight forward, but if you have questions, leave them in the comments.</p> <pre><code>#!/usr/bin/python\n# (CC-by) 2010 Copyleft Michal Karzynski, GenomikaStudio.com \nimport datetime\nimport gdata.analytics.client\nimport gdata.sample_util\n\nemail=\"YOUREMAILADDRESS@gmail.com\"  # Set these values\npassword=\"YOUREMAILPASSWORD\"\ntable_ids = (\n            'ga:TABLE_ID',          # TABLE_ID for first website\n            'ga:TABLE_ID',          # TABLE_ID for second website\n                                    # (...)\n            )\n\nSOURCE_APP_NAME = 'Genomika-Google-Analytics-Quick-Client-v1'\nclient = gdata.analytics.client.AnalyticsClient(source=SOURCE_APP_NAME)\nclient.client_login(email, password, source=SOURCE_APP_NAME, service=client.auth_service)\n\ntoday = datetime.date.today()\nyesterday = today - datetime.timedelta(days=1)\n\nprint \"Visitors yesterday\"\nfor table_id in table_ids:   \n    data_query = gdata.analytics.client.DataFeedQuery({\n            'ids': table_id,\n            'start-date': yesterday.isoformat(),\n            'end-date': yesterday.isoformat(),\n            'dimensions': 'ga:date',\n            'metrics': 'ga:visitors'})\n    feed = client.GetDataFeed(data_query)\n    print \"%s : %s\" % (feed.data_source[0].table_name.text, feed.entry[0].metric[0].value)\n</code></pre>","tags":["python","google-analytics","geektool"]},{"location":"blog/2010/10/28/check-google-analytics-unique-visitors-python/#security-disclaimer","title":"Security disclaimer","text":"<p>The above script is a simple example of how to connect to your Google profile using your email/password for authentication. For security reasons, I wouldn't recommend storing your password in cleartext anywhere other then on your personal computer. Authenticating properly, using OAuth is a bit more complex. There is a very nice write up of using Google's OAuth on Mikhail Panchenko's blog...</p>","tags":["python","google-analytics","geektool"]},{"location":"blog/2013/01/13/how-turn-shell-commands-mac-os-x-services/","title":"How to turn shell commands into Mac OS X services","text":"<p>OS X has a nice functionality called services which allow you (and applications you install) to expand the functionality of your system by adding commands, which will be visible in a special menu. Services may also be available in contextual menus, for instance when you right-click on a file or folder in the Finder.</p> Services menu in Finder A contextual services menu in Finder <p>It's easy to create your own service commands using any shell or scripting commands you may already have written in most shell scripting languages, Perl, Python or Ruby.</p>"},{"location":"blog/2013/01/13/how-turn-shell-commands-mac-os-x-services/#how-to-hide-os-x-desktop-icons","title":"How to hide OS X desktop icons","text":"<p>The command to turn on or off desktop icons in OS X Finder, you need the following commands.</p> <p>Hide Desktop icons:</p> <pre><code>defaults write com.apple.finder CreateDesktop FALSE &amp;&amp; killall Finder\n</code></pre> <p>Show desktop icons:</p> <pre><code>defaults write com.apple.finder CreateDesktop TRUE &amp;&amp; killall Finder\n</code></pre> <p>In order to turn a command like that into a Finder service, you need just a few simple steps.</p>"},{"location":"blog/2013/01/13/how-turn-shell-commands-mac-os-x-services/#1-launch-automator-from-your-applications-folder-and-when-asked-to-choose-a-type-for-your-document-select-service","title":"1. Launch Automator (from your Applications folder) and when asked to choose a type for your document select \"Service\".","text":"Automator - create a new Service"},{"location":"blog/2013/01/13/how-turn-shell-commands-mac-os-x-services/#2-from-the-library-on-the-left-select-run-shell-script-action-from-the-utilities-category","title":"2. From the library on the left select \"Run Shell Script\" action from the \"Utilities\" category.","text":"<p>Drag-and-drop the action to the space on the right.</p>"},{"location":"blog/2013/01/13/how-turn-shell-commands-mac-os-x-services/#3-set-the-following-parameters","title":"3. Set the following parameters:","text":"<p>Service receives: No input in Finder  Shell: /bin/bash  And add your command to the command line.</p> Automator - \"Run Shell Script\" action"},{"location":"blog/2013/01/13/how-turn-shell-commands-mac-os-x-services/#4-save-the-service-to-a-name-you-choose-and-youre-done","title":"4. Save the service to a name you choose and you're done.","text":"<p>The service should now appear in the Services menu in the Finder.</p> Services menu in Finder <p>The Services files you create are stored in the following directory:  <code>~/Library/Services/</code></p>"},{"location":"blog/2013/05/16/xmin-extjs-admin-django/","title":"xmin - ExtJS Admin for Django","text":"<p>This is a demonstration video of django-xmin, a concept for an alternative administrative interface for Django, written in JavaScript using the ExtJS. </p> <p>You can take a peek at the code at: https://github.com/postrational/django-xmin</p>","tags":["code"]},{"location":"blog/2013/06/07/running-drupal-nginx-memcached/","title":"Running Drupal on Nginx with Memcached","text":"<p>Drupal is a great CMS system for deploying websites quickly and managing them easily. Traditionally Drupal was run on a LAMP stack, but this configuration does not necessarily offer the best performance for the system. These days you can squeeze more performance out of Drupal by running it on a LEMP (Linux-Nginx-MySQL-PHP) stack in which Apache is replaced by the Nginx reverse-proxy. Further performance improvement can be gained by hooking up memcached to handle cacheing. This article explains how you can prepare a professional LEMP server for your Drupal sites.</p>","tags":["code"]},{"location":"blog/2013/06/07/running-drupal-nginx-memcached/#prerequisites","title":"Prerequisites","text":"<p>I assume you have a server available on which you have root privileges. I am using a server running Debian 7, so everything here should work the same on an Ubuntu server or other Debian-based distribution. If you're using an RPM-based distro (such as CentOS), you will need to replace the <code>apt-get</code> commands by their <code>yum</code> counterparts.</p> <p>If you don't have a server to play with, I would recommend the inexpensive VPS servers offered by Digital Ocean. If you click through this link when signing up, you'll pay a bit of my server bill :)</p> <p>I'm also assuming you configured your DNS to point a domain at the server's IP. In this text, I assume it's <code>example.com</code></p>","tags":["code"]},{"location":"blog/2013/06/07/running-drupal-nginx-memcached/#update-your-system","title":"Update your system","text":"<p>It'a always a good idea to keep every part of your system up-to-date and since APT makes is so simple, let's start with an update of the APT cache and a system upgrade (installing up-to-date versions of all packages).</p> <pre><code>$ sudo apt-get update\n$ sudo apt-get upgrade\n</code></pre>","tags":["code"]},{"location":"blog/2013/06/07/running-drupal-nginx-memcached/#install-mysql","title":"Install MySQL","text":"<pre><code>$ sudo apt-get install mysql-server\n</code></pre> <p>During the installation process you will be asked for a password for the root user. If you don't set it during installation, you can set it later using the following command (substitute a password for NEWPASSWORD).</p> <pre><code>$ mysqladmin -u root password NEWPASSWORD\n</code></pre>","tags":["code"]},{"location":"blog/2013/06/07/running-drupal-nginx-memcached/#install-nginx","title":"Install Nginx","text":"<pre><code>$ sudo apt-get install nginx\n\n$ sudo service nginx start\n</code></pre> <p>You can navigate to your server (http://example.com) with your browser and Nginx should greet you with the words \"Welcome to nginx!\".</p>","tags":["code"]},{"location":"blog/2013/06/07/running-drupal-nginx-memcached/#install-php-fpm","title":"Install PHP-FPM","text":"<p>Under Apache PHP code is executed by the web server (via mod_php). The Nginx philosophy is somewhat different. It's a reverse proxy rather then a server, so it's not running any code itself. Instead it can serve (proxy) data generated by CGI applications running on your system.</p> <p>For PHP this is PHP-FPM (FastCGI Process Manager). This is a daemon process which waits for incoming requests to execute PHP code, runs the scripts and returns their output. More information can be found on the PGP-FPM site.</p> <pre><code>sudo apt-get install php5-fpm\n</code></pre>","tags":["code"]},{"location":"blog/2013/06/07/running-drupal-nginx-memcached/#configure-php-fpm","title":"Configure PHP-FPM","text":"<p>Edit the <code>/etc/php5/fpm/php.ini</code> and change cgi.fix_pathinfo to 0.</p> <pre><code>sudo vim /etc/php5/fpm/php.ini\n</code></pre> <pre><code>; cgi.fix_pathinfo provides *real* PATH_INFO/PATH_TRANSLATED support for CGI.  PHP's\n; previous behavior was to set PATH_TRANSLATED to SCRIPT_FILENAME, and to not grok\n; what PATH_INFO is.  For more information on PATH_INFO, see the cgi specs.  Setting\n; this to 1 will cause PHP CGI to fix its paths to conform to the spec.  A setting\n; of zero causes PHP to behave as before.  Default is 1.  You should fix your scripts\n; to use SCRIPT_FILENAME rather than PATH_TRANSLATED.\n; http://php.net/cgi.fix-pathinfo\ncgi.fix_pathinfo=0\n</code></pre> <p>Now check the php5-fpm configuration file <code>/etc/php5/fpm/pool.d/www.conf</code> and make sure that php5-fpm communicates with the outside world through a socket file:</p> <pre><code>listen = /var/run/php5-fpm.sock\n</code></pre>","tags":["code"]},{"location":"blog/2013/06/07/running-drupal-nginx-memcached/#restart-the-php-fpm-service","title":"Restart the php-fpm service:","text":"<pre><code>sudo service php5-fpm restart\n</code></pre>","tags":["code"]},{"location":"blog/2013/06/07/running-drupal-nginx-memcached/#install-drush-and-drupal","title":"Install Drush and Drupal","text":"<p>Install Drupal dependencies</p> <pre><code>$ sudo apt-get install php5-mysql\n$ sudo apt-get install php5-gd\n</code></pre> <p>Create a MySQL database and user for Drupal.</p> <pre><code>$ mysql -u root -p\n\nmysql&gt; CREATE DATABASE example;\nmysql&gt; GRANT ALL PRIVILEGES ON example.* TO example@localhost IDENTIFIED BY 'hskd7e345kfi';\n</code></pre> <p>Install Drush</p> <pre><code>$ sudo apt-get install drush\n</code></pre> <p>Install Drupal in any way you prefer, for instance using Drush like this:</p> <pre><code>$ cd /webapps/ # Or wherever you want to keep your sites\n$ drush dl drupal-7.22\n$ mv drupal-7.22/ example-drupal\n$ cd example-drupal\n$ drush site-install standard --account-name=admin --account-pass=admin --db-url=mysql://example:hskd7e345kfi@localhost/example\n</code></pre>","tags":["code"]},{"location":"blog/2013/06/07/running-drupal-nginx-memcached/#create-an-nginx-virtual-server-configuration-for-drupal","title":"Create an Nginx virtual server configuration for Drupal","text":"<p>Each Nginx virtual server should be described in a file in the <code>/etc/nginx/sites-available</code> directory. You select which sites you want to enable by making symbolic links to those in the  <code>/etc/nginx/sites-enabled</code> directory.</p> <p>Create a new nginx server configuration file for your Drupal site running on example.com in <code>/etc/nginx/sites-available/example-drupal</code>. The file should contain something along the following lines. A good explanation can be found on the Nginx wiki. </p> example-drupal.nginxconf<pre><code>server {\n        server_name example.com;       ## &lt;-- Your domain.\n        root /webapps/example-drupal;  ## &lt;-- Path to your Drupal files.\n\n        # Enable compression, this will help if you have for instance advagg module\n        # by serving Gzip versions of the files.\n        gzip_static on;\n\n        location / {\n                try_files $uri @rewrite;\n        }\n\n        location @rewrite {\n                rewrite ^ /index.php;\n        }\n\n        location ~ \\.php$ {\n                fastcgi_split_path_info ^(.+\\.php)(/.+)$;\n                #NOTE: You should have \"cgi.fix_pathinfo = 0;\" in php.ini\n                include fastcgi_params;\n                fastcgi_param SCRIPT_FILENAME $request_filename;\n                fastcgi_intercept_errors on;\n                fastcgi_pass unix:/var/run/php5-fpm.sock; ## &lt;-- location of the PHP-FPM socket\n        }\n\n        location = /favicon.ico {\n                log_not_found off;\n                access_log off;\n        }\n\n        location = /robots.txt {\n                allow all;\n                log_not_found off;\n                access_log off;\n        }\n\n        location ~ \\..*/.*\\.php$ {\n                return 403;\n        }\n\n        # No no for private\n        location ~ ^/sites/.*/private/ {\n                return 403;\n        }\n\n        # Block access to \"hidden\" files and directories whose names begin with a\n        # period. This includes directories used by version control systems such\n        # as Subversion or Git to store control files.\n        location ~ (^|/)\\. {\n                return 403;\n        }\n\n        location ~ ^/sites/.*/files/styles/ {\n                try_files $uri @rewrite;\n        }\n\n        location ~* \\.(js|css|png|jpg|jpeg|gif|ico)$ {\n                expires max;\n                log_not_found off;\n        }\n}\n</code></pre> <p>Restart Nginx:</p> <pre><code>$ sudo service nginx restart\n</code></pre> <p>You can now visit your Drupal site at http://example.com and log in as admin with the password admin. Remember to change your password.</p>","tags":["code"]},{"location":"blog/2013/06/07/running-drupal-nginx-memcached/#add-memcached-as-drupals-cache-backend","title":"Add memcached as Drupal's cache backend","text":"<p>Install memcached and the memcache PHP extension.</p> <pre><code>$ sudo apt-get install memcached\n$ sudo apt-get install php5-memcached\n</code></pre> <p>Edit the php.ini file to enable the extension and configure memcache. At minimum add the following lines:</p> <pre><code>extension=memcached.so\nmemcache.hash_strategy=\"consistent\"\n</code></pre> <p>In order to enable memcached-based cacheing on your Drupal site, you will need to download and enable the memcache module:</p> <pre><code>$ cd /webapps/example-drupal\n$ drush dl memcache\n$ drush en memcache\n</code></pre> <p>You will also need to add <code>cache_backends</code> configuration to your settings.php file. </p> <pre><code>$ vim sites/default/settings.php\n</code></pre> <p>Add the following lines:</p> <pre><code>$conf['cache_backends'][] = 'sites/all/modules/memcache/memcache.inc';\n$conf['cache_default_class'] = 'MemCacheDrupal';\n$conf['cache_class_cache_form'] = 'DrupalDatabaseCache';\n</code></pre> <p>Your site is now cached using memcache. You can enable a module which installed along memcache, which will display a summary of how many memcache hits or misses were executed during the generation of every page in the admin.</p> <pre><code>$ drush en memcache_admin\n</code></pre> <p>That's it, I hope it helps. If you have any problems or see areas which could be improved, feel free to leave me a comment or send me a message.</p>","tags":["code"]},{"location":"blog/2013/06/09/django-nginx-gunicorn-virtualenv-supervisor/","title":"Setting up Django with Nginx, Gunicorn, virtualenv, supervisor and PostgreSQL","text":"<p>Django is an efficient, versatile and dynamically evolving web application development framework. When Django initially gained popularity, the recommended setup for running Django applications was based around Apache with mod_wsgi. The art of running Django advanced and these days the recommended configuration is more efficient and resilient, but also more complex and includes such tools as: Nginx, Gunicorn, virtualenv, supervisord and PostgreSQL. </p> <p>In this text I will explain how to combine all of these components into a Django server running on Linux.</p>","tags":["django","nginx","gunicorn","virtualenv","supervisord","postgresql"]},{"location":"blog/2013/06/09/django-nginx-gunicorn-virtualenv-supervisor/#prerequisites","title":"Prerequisites","text":"<p>I assume you have a server available on which you have root privileges. I am using a server running Debian 7, so everything here should also work on an Ubuntu server or other Debian-based distribution. If you're using an RPM-based distro (such as CentOS), you will need to replace the <code>aptitude</code> commands by their <code>yum</code> counterparts and if you're using FreeBSD you can install the components from ports.</p> <p>If you don't have a server to play with, I would recommend the inexpensive VPS servers offered by Digital Ocean. If you click through this link when signing up, you'll pay a bit of my server bill :)</p> <p>I'm also assuming you configured your DNS to point a domain at the server's IP. In this text, I pretend your domain is <code>example.com</code></p>","tags":["django","nginx","gunicorn","virtualenv","supervisord","postgresql"]},{"location":"blog/2013/06/09/django-nginx-gunicorn-virtualenv-supervisor/#update-your-system","title":"Update your system","text":"<p>Let's get started by making sure our system is up to date.</p> <pre><code>$ sudo aptitude update\n$ sudo aptitude upgrade\n</code></pre>","tags":["django","nginx","gunicorn","virtualenv","supervisord","postgresql"]},{"location":"blog/2013/06/09/django-nginx-gunicorn-virtualenv-supervisor/#postgresql","title":"PostgreSQL","text":"<p>To install PostgreSQL on a Debian-based system run this command:</p> <pre><code>$ sudo aptitude install postgresql postgresql-contrib\n</code></pre> <p>Create a database user and a new database for the app. Grab a perfect password from GRC.</p> <pre><code>$ sudo su - postgres\npostgres@django:~$ createuser --interactive -P\nEnter name of role to add: hello_django\nEnter password for new role: \nEnter it again: \nShall the new role be a superuser? (y/n) n\nShall the new role be allowed to create databases? (y/n) n\nShall the new role be allowed to create more new roles? (y/n) n\npostgres@django:~$\n\npostgres@django:~$ createdb --owner hello_django hello\npostgres@django:~$ logout\n$\n</code></pre>","tags":["django","nginx","gunicorn","virtualenv","supervisord","postgresql"]},{"location":"blog/2013/06/09/django-nginx-gunicorn-virtualenv-supervisor/#application-user","title":"Application user","text":"<p>Even though Django has a pretty good security track record, web applications can become compromised. If the application has limited access to resources on your server, potential damage can also be limited. Your web applications should run as system users with limited privileges.</p> <p>Create a user for your app, named <code>hello</code> and assigned to a system group called <code>webapps</code>.</p> <pre><code>$ sudo groupadd --system webapps\n$ sudo useradd --system --gid webapps --shell /bin/bash --home /webapps/hello_django hello\n</code></pre>","tags":["django","nginx","gunicorn","virtualenv","supervisord","postgresql"]},{"location":"blog/2013/06/09/django-nginx-gunicorn-virtualenv-supervisor/#install-virtualenv-and-create-an-environment-for-you-app","title":"Install virtualenv and create an environment for you app","text":"<p>Virtualenv is a tool which allows you to create separate Python environments on your system. This allows you to run applications with different sets of requirements concurrently (e.g. one based on Django 1.5, another based on 1.6). virtualenv is easy to install on Debian:</p> <pre><code>$ sudo aptitude install python-virtualenv\n</code></pre>","tags":["django","nginx","gunicorn","virtualenv","supervisord","postgresql"]},{"location":"blog/2013/06/09/django-nginx-gunicorn-virtualenv-supervisor/#create-and-activate-an-environment-for-your-application","title":"Create and activate an environment for your application","text":"<p>I like to keep all my web apps in the <code>/webapps/</code> directory. If you prefer <code>/var/www/</code>, <code>/srv/</code> or something else, use that instead. Create a directory to store your application in <code>/webapps/hello_django/</code> and change the owner of that directory to your application user <code>hello</code></p> <pre><code>$ sudo mkdir -p /webapps/hello_django/\n$ sudo chown hello /webapps/hello_django/\n</code></pre> <p>As the application user create a virtual Python environment in the application directory:</p> <pre><code>$ sudo su - hello\nhello@django:~$ cd /webapps/hello_django/\nhello@django:~$ virtualenv .\n\nNew python executable in hello_django/bin/python\nInstalling distribute..............done.\nInstalling pip.....................done.\n\nhello@django:~$ source bin/activate\n(hello_django)hello@django:~$\n</code></pre> <p>Your environment is now activated and you can proceed to install Django inside it.</p> <pre><code>(hello_django)hello@django:~$ pip install django\n\nDownloading/unpacking django\n(...)\nInstalling collected packages: django\n(...)\nSuccessfully installed django\nCleaning up...\n</code></pre> <p>Your environment with Django should be ready to use. Go ahead and create an empty Django project.</p> <pre><code>(hello_django)hello@django:~$ django-admin.py startproject hello\n</code></pre> <p>You can test it by running the development server:</p> <pre><code>(hello_django)hello@django:~$ cd hello\n(hello_django)hello@django:~$ python manage.py runserver example.com:8000\nValidating models...\n\n0 errors found\nJune 09, 2013 - 06:12:00\nDjango version 1.5.1, using settings 'hello.settings'\nDevelopment server is running at http://example.com:8000/\nQuit the server with CONTROL-C.\n</code></pre> <p>You should now be able to access your development server from http://example.com:8000</p>","tags":["django","nginx","gunicorn","virtualenv","supervisord","postgresql"]},{"location":"blog/2013/06/09/django-nginx-gunicorn-virtualenv-supervisor/#allowing-other-users-write-access-to-the-application-directory","title":"Allowing other users write access to the application directory","text":"<p>Your application will run as the user <code>hello</code>, who owns the entire application directory. If you want regular user to be able to change application files, you can set the group owner of the directory to <code>users</code> and give the group write permissions.</p> <pre><code>$ sudo chown -R hello:users /webapps/hello_django\n$ sudo chmod -R g+w /webapps/hello_django\n</code></pre> <p>You can check what groups you're a member of by issuing the <code>groups</code> command or <code>id</code>.</p> <pre><code>$ id\nuid=1000(michal) gid=1000(michal) groups=1000(michal),27(sudo),100(users)\n</code></pre> <p>If you're not a member of <code>users</code>, you can add yourself to the group with this command:</p> <pre><code>$ sudo usermod -a -G users `whoami`\n</code></pre> <p>Note</p> <p>Group memberships are assigned during login, so you may need to log out and back in again for the system to recognize your new group.</p>","tags":["django","nginx","gunicorn","virtualenv","supervisord","postgresql"]},{"location":"blog/2013/06/09/django-nginx-gunicorn-virtualenv-supervisor/#configure-postgresql-to-work-with-django","title":"Configure PostgreSQL to work with Django","text":"<p>In order to use Django with PostgreSQL you will need to install the <code>psycopg2</code> database adapter in your virtual environment. This step requires the compilation of a native extension (written in C). The compilation will fail if it cannot find header files and static libraries required for linking C programs with <code>libpq</code> (library for communication with Postgres) and building Python modules (<code>python-dev</code> package). We have to install these two packages first, then we can install <code>psycopg2</code> using PIP.</p> <p>Install dependencies:</p> <pre><code>$ sudo aptitude install libpq-dev python-dev\n</code></pre> <p>Install <code>psycopg2</code> database adapter:</p> <pre><code>(hello_django)hello@django:~$ pip install psycopg2\n</code></pre> <p>You can now configure the databases section in your <code>settings.py</code>:</p> <pre><code>DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql_psycopg2',\n        'NAME': 'hello',\n        'USER': 'hello_django',\n        'PASSWORD': '1Ak5RTQt7mtw0OREsfPhJYzXIak41gnrm5NWYEosCeIduJck10awIzoys1wvbL8',\n        'HOST': 'localhost',\n        'PORT': '',                      # Set to empty string for default.\n    }\n}\n</code></pre> <p>And finally build the initial database for Django:</p> <pre><code>(hello_django)hello@django:~$ python manage.py migrate\n</code></pre> <p>Note</p> <p>In older versions of Django the equivalent command was: <code>manage.py syncdb</code></p>","tags":["django","nginx","gunicorn","virtualenv","supervisord","postgresql"]},{"location":"blog/2013/06/09/django-nginx-gunicorn-virtualenv-supervisor/#gunicorn","title":"Gunicorn","text":"<p>In production we won't be using Django's single-threaded development server, but a dedicated application server called gunicorn.</p> <p>Install gunicorn in your application's virtual environment:</p> <pre><code>(hello_django)hello@django:~$ pip install gunicorn\nDownloading/unpacking gunicorn\n  Downloading gunicorn-0.17.4.tar.gz (372Kb): 372Kb downloaded\n  Running setup.py egg_info for package gunicorn\n\nInstalling collected packages: gunicorn\n  Running setup.py install for gunicorn\n\n    Installing gunicorn_paster script to /webapps/hello_django/bin\n    Installing gunicorn script to /webapps/hello_django/bin\n    Installing gunicorn_django script to /webapps/hello_django/bin\nSuccessfully installed gunicorn\nCleaning up...\n</code></pre> <p>Now that you have gunicorn, you can test whether it can serve your Django application by running the following command:</p> <pre><code>(hello_django)hello@django:~$ gunicorn hello.wsgi:application --bind example.com:8001\n</code></pre> <p>You should now be able to access the Gunicorn server from http://example.com:8001 . I intentionally changed port 8000 to 8001 to force your browser to establish a new connection.</p> <p>Gunicorn is installed and ready to serve your app. Let's set some configuration options to make it more useful. I like to set a number of parameters, so let's put them all into a small BASH script, which I save as <code>bin/gunicorn_start</code></p> gunicorn_start.bash<pre><code>#!/bin/bash\n\nNAME=\"hello_app\"                                  # Name of the application\nDJANGODIR=/webapps/hello_django/hello             # Django project directory\nSOCKFILE=/webapps/hello_django/run/gunicorn.sock  # we will communicte using this unix socket\nUSER=hello                                        # the user to run as\nGROUP=webapps                                     # the group to run as\nNUM_WORKERS=3                                     # how many worker processes should Gunicorn spawn\nDJANGO_SETTINGS_MODULE=hello.settings             # which settings file should Django use\nDJANGO_WSGI_MODULE=hello.wsgi                     # WSGI module name\n\necho \"Starting $NAME as `whoami`\"\n\n# Activate the virtual environment\ncd $DJANGODIR\nsource ../bin/activate\nexport DJANGO_SETTINGS_MODULE=$DJANGO_SETTINGS_MODULE\nexport PYTHONPATH=$DJANGODIR:$PYTHONPATH\n\n# Create the run directory if it doesn't exist\nRUNDIR=$(dirname $SOCKFILE)\ntest -d $RUNDIR || mkdir -p $RUNDIR\n\n# Start your Django Unicorn\n# Programs meant to be run under supervisor should not daemonize themselves (do not use --daemon)\nexec ../bin/gunicorn ${DJANGO_WSGI_MODULE}:application \\\n  --name $NAME \\\n  --workers $NUM_WORKERS \\\n  --user=$USER --group=$GROUP \\\n  --bind=unix:$SOCKFILE \\\n  --log-level=debug \\\n  --log-file=-\n</code></pre> <p>Set the executable bit on the <code>gunicorn_start</code> script:</p> <pre><code>$ sudo chmod u+x bin/gunicorn_start\n</code></pre> <p>You can test your <code>gunicorn_start</code> script by running it as the user <code>hello</code>.</p> <pre><code>$ sudo su - hello\nhello@django:~$ bin/gunicorn_start\nStarting hello_app as hello\n2013-06-09 14:21:45 [10724] [INFO] Starting gunicorn 18.0\n2013-06-09 14:21:45 [10724] [DEBUG] Arbiter booted\n2013-06-09 14:21:45 [10724] [INFO] Listening at: unix:/webapps/hello_django/run/gunicorn.sock (10724)\n2013-06-09 14:21:45 [10724] [INFO] Using worker: sync\n2013-06-09 14:21:45 [10735] [INFO] Booting worker with pid: 10735\n2013-06-09 14:21:45 [10736] [INFO] Booting worker with pid: 10736\n2013-06-09 14:21:45 [10737] [INFO] Booting worker with pid: 10737\n\n^C (CONTROL-C to kill Gunicorn)\n\n2013-06-09 14:21:48 [10736] [INFO] Worker exiting (pid: 10736)\n2013-06-09 14:21:48 [10735] [INFO] Worker exiting (pid: 10735)\n2013-06-09 14:21:48 [10724] [INFO] Handling signal: int\n2013-06-09 14:21:48 [10737] [INFO] Worker exiting (pid: 10737)\n2013-06-09 14:21:48 [10724] [INFO] Shutting down: Master\n$ exit\n</code></pre> <p>Note the parameters set in <code>gunicorn_start</code>. You'll need to set the paths and filenames to match your setup.</p> <p>As a rule-of-thumb set the <code>--workers</code> (<code>NUM_WORKERS</code>) according to the following formula: 2\u00a0*\u00a0CPUs\u00a0+\u00a01. The idea being, that at any given time half of your workers will be busy doing I/O. For a single CPU machine it would give you 3.</p> <p>The <code>--name</code> (<code>NAME</code>) argument specifies how your application will identify itself in programs such as <code>top</code> or <code>ps</code>. It defaults to <code>gunicorn</code>, which might make it harder to distinguish from other apps if you have multiple Gunicorn-powered applications running on the same server.</p> <p>In order for the <code>--name</code> argument to have an effect you need to install a Python module called <code>setproctitle</code>. To build this native extension <code>pip</code> needs to have access to C header files for Python. You can add them to your system with the <code>python-dev</code> package and then install <code>setproctitle</code>.</p> <pre><code>$ sudo aptitude install python-dev\n(hello_django)hello@django:~$ pip install setproctitle\n</code></pre> <p>Now when you list processes, you should see which gunicorn belongs to which application.</p> <pre><code>$ ps aux\nUSER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND\n(...)\nhello    11588  0.7  0.2  58400 11568 ?        S    14:52   0:00 gunicorn: master [hello_app]\nhello    11602  0.5  0.3  66584 16040 ?        S    14:52   0:00 gunicorn: worker [hello_app]\nhello    11603  0.5  0.3  66592 16044 ?        S    14:52   0:00 gunicorn: worker [hello_app]\nhello    11604  0.5  0.3  66604 16052 ?        S    14:52   0:00 gunicorn: worker [hello_app]\n</code></pre>","tags":["django","nginx","gunicorn","virtualenv","supervisord","postgresql"]},{"location":"blog/2013/06/09/django-nginx-gunicorn-virtualenv-supervisor/#starting-and-monitoring-with-supervisor","title":"Starting and monitoring with Supervisor","text":"<p>Your <code>gunicorn_start</code> script should now be ready and working. We need to make sure that it starts automatically with the system and that it can automatically restart if for some reason it exits unexpectedly. These tasks can easily be handled by a service called supervisord. Installation is simple:</p> <pre><code>$ sudo aptitude install supervisor\n</code></pre> <p>When Supervisor is installed you can give it programs to start and watch by creating configuration files in the <code>/etc/supervisor/conf.d</code> directory. For our <code>hello</code> application we'll create a file named <code>/etc/supervisor/conf.d/hello.conf</code> with this content:</p> hello.conf<pre><code>[program:hello]\ncommand = /webapps/hello_django/bin/gunicorn_start                    ; Command to start app\nuser = hello                                                          ; User to run as\nstdout_logfile = /webapps/hello_django/logs/gunicorn_supervisor.log   ; Where to write log messages\nredirect_stderr = true                                                ; Save stderr in the same log\nenvironment=LANG=en_US.UTF-8,LC_ALL=en_US.UTF-8                       ; Set UTF-8 as default encoding\n</code></pre> <p>You can set many other options, but this basic configuration should suffice. </p> <p>Create the file to store your application's log messages:</p> <pre><code>hello@django:~$ mkdir -p /webapps/hello_django/logs/\nhello@django:~$ touch /webapps/hello_django/logs/gunicorn_supervisor.log\n</code></pre> <p>After you save the configuration file for your program you can ask supervisor to reread configuration files and update (which will start your the newly registered app).</p> <pre><code>$ sudo supervisorctl reread\nhello: available\n$ sudo supervisorctl update\nhello: added process group\n</code></pre> <p>You can also check the status of your app or start, stop or restart it using supervisor.</p> <pre><code>$ sudo supervisorctl status hello                       \nhello                            RUNNING    pid 18020, uptime 0:00:50\n$ sudo supervisorctl stop hello  \nhello: stopped\n$ sudo supervisorctl start hello                        \nhello: started\n$ sudo supervisorctl restart hello \nhello: stopped\nhello: started\n</code></pre> <p>Your application should now be automatically started after a system reboot and automatically restarted if it ever crashed for some reason.</p>","tags":["django","nginx","gunicorn","virtualenv","supervisord","postgresql"]},{"location":"blog/2013/06/09/django-nginx-gunicorn-virtualenv-supervisor/#nginx","title":"Nginx","text":"<p>Time to set up Nginx as a server for out application and its static files. Install and start Nginx:</p> <pre><code>$ sudo aptitude install nginx\n$ sudo service nginx start\n</code></pre> <p>You can navigate to your server (http://example.com) with your browser and Nginx should greet you with the words \"Welcome to nginx!\".</p>","tags":["django","nginx","gunicorn","virtualenv","supervisord","postgresql"]},{"location":"blog/2013/06/09/django-nginx-gunicorn-virtualenv-supervisor/#create-an-nginx-virtual-server-configuration-for-django","title":"Create an Nginx virtual server configuration for Django","text":"<p>Each Nginx virtual server should be described by a file in the <code>/etc/nginx/sites-available</code> directory. You select which sites you want to enable by making symbolic links to those in the  <code>/etc/nginx/sites-enabled</code> directory.</p> <p>Create a new nginx server configuration file for your Django application running on example.com in <code>/etc/nginx/sites-available/hello</code>. The file should contain something along the following lines. A more detailed example is available from the folks who make Gunicorn.</p> hello.nginxconf<pre><code>upstream hello_app_server {\n  # fail_timeout=0 means we always retry an upstream even if it failed\n  # to return a good HTTP response (in case the Unicorn master nukes a\n  # single worker for timing out).\n\n  server unix:/webapps/hello_django/run/gunicorn.sock fail_timeout=0;\n}\n\nserver {\n\n    listen   80;\n    server_name example.com;\n\n    client_max_body_size 4G;\n\n    access_log /webapps/hello_django/logs/nginx-access.log;\n    error_log /webapps/hello_django/logs/nginx-error.log;\n\n    location /static/ {\n        alias   /webapps/hello_django/static/;\n    }\n\n    location /media/ {\n        alias   /webapps/hello_django/media/;\n    }\n\n    location / {\n        # an HTTP header important enough to have its own Wikipedia entry:\n        #   http://en.wikipedia.org/wiki/X-Forwarded-For\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n\n        # enable this if and only if you use HTTPS, this helps Rack\n        # set the proper protocol for doing redirects:\n        # proxy_set_header X-Forwarded-Proto https;\n\n        # pass the Host: header from the client right along so redirects\n        # can be set properly within the Rack application\n        proxy_set_header Host $http_host;\n\n        # we don't want nginx trying to do something clever with\n        # redirects, we set the Host: header above already.\n        proxy_redirect off;\n\n        # set \"proxy_buffering off\" *only* for Rainbows! when doing\n        # Comet/long-poll stuff.  It's also safe to set if you're\n        # using only serving fast clients with Unicorn + nginx.\n        # Otherwise you _want_ nginx to buffer responses to slow\n        # clients, really.\n        # proxy_buffering off;\n\n        # Try to serve static files from nginx, no point in making an\n        # *application* server like Unicorn/Rainbows! serve static files.\n        if (!-f $request_filename) {\n            proxy_pass http://hello_app_server;\n            break;\n        }\n    }\n\n    # Error pages\n    error_page 500 502 503 504 /500.html;\n    location = /500.html {\n        root /webapps/hello_django/static/;\n    }\n}\n</code></pre> <p>Create a symbolic link in the <code>sites-enabled</code> folder:</p> <pre><code>$ sudo ln -s /etc/nginx/sites-available/hello /etc/nginx/sites-enabled/hello\n</code></pre> <p>Restart Nginx:</p> <pre><code>$ sudo service nginx restart\n</code></pre> <p>If you navigate to your site, you should now see your Django welcome-page powered by Nginx and Gunicorn. Go ahead and develop to your heart's content.</p> <p>Note</p> <p>At this stage you may find that instead of the Django welcome-page, you encounter the default \"Welcome to nginx!\" page. This may be caused by the <code>default</code> configuration file, which is installed with Nginx and masks your new site's configuration. If you don't plan to use it, delete the symbolic link to this file from <code>/etc/nginx/sites-enabled</code>.</p> <p>If you run into any problems with the above setup, please drop me a line.</p>","tags":["django","nginx","gunicorn","virtualenv","supervisord","postgresql"]},{"location":"blog/2013/06/09/django-nginx-gunicorn-virtualenv-supervisor/#final-directory-structure","title":"Final directory structure","text":"<p>If you followed this tutorial, you should have created a directory structure resembling this:</p> <pre><code>/webapps/hello_django/\n\u251c\u2500\u2500 bin                          &lt;= Directory created by virtualenv\n\u2502   \u251c\u2500\u2500 activate                 &lt;= Environment activation script\n\u2502   \u251c\u2500\u2500 django-admin.py\n\u2502   \u251c\u2500\u2500 gunicorn\n\u2502   \u251c\u2500\u2500 gunicorn_django\n\u2502   \u251c\u2500\u2500 gunicorn_start           &lt;= Script to start application with Gunicorn\n\u2502   \u2514\u2500\u2500 python\n\u251c\u2500\u2500 hello                        &lt;= Django project directory, add this to PYTHONPATH\n\u2502   \u251c\u2500\u2500 manage.py\n\u2502   \u251c\u2500\u2500 project_application_1\n\u2502   \u251c\u2500\u2500 project_application_2\n\u2502   \u2514\u2500\u2500 hello                    &lt;= Project settings directory\n\u2502       \u251c\u2500\u2500 __init__.py\n\u2502       \u251c\u2500\u2500 settings.py          &lt;= hello.settings - settings module Gunicorn will use\n\u2502       \u251c\u2500\u2500 urls.py\n\u2502       \u2514\u2500\u2500 wsgi.py              &lt;= hello.wsgi - WSGI module Gunicorn will use\n\u251c\u2500\u2500 include\n\u2502   \u2514\u2500\u2500 python2.7 -&gt; /usr/include/python2.7\n\u251c\u2500\u2500 lib\n\u2502   \u2514\u2500\u2500 python2.7\n\u251c\u2500\u2500 lib64 -&gt; /webapps/hello_django/lib\n\u251c\u2500\u2500 logs                         &lt;= Application logs directory\n\u2502   \u251c\u2500\u2500 gunicorn_supervisor.log\n\u2502   \u251c\u2500\u2500 nginx-access.log\n\u2502   \u2514\u2500\u2500 nginx-error.log\n\u251c\u2500\u2500 media                        &lt;= User uploaded files folder\n\u251c\u2500\u2500 run\n\u2502   \u2514\u2500\u2500 gunicorn.sock \n\u2514\u2500\u2500 static                       &lt;= Collect and serve static files from here\n</code></pre>","tags":["django","nginx","gunicorn","virtualenv","supervisord","postgresql"]},{"location":"blog/2013/06/09/django-nginx-gunicorn-virtualenv-supervisor/#uninstalling-the-django-application","title":"Uninstalling the Django application","text":"<p>If time comes to remove the application, follow these steps.</p> <p>Remove the virtual server from Nginx <code>sites-enabled</code> folder:</p> <pre><code>$ sudo rm /etc/nginx/sites-enabled/hello_django\n</code></pre> <p>Restart Nginx:</p> <pre><code>$ sudo service nginx restart\n</code></pre> <p>If you never plan to use this application again, you can remove its config file also from the <code>sites-available</code> directory</p> <pre><code>$ sudo rm /etc/nginx/sites-available/hello_django\n</code></pre> <p>Stop the application with Supervisor:</p> <pre><code>$ sudo supervisorctl stop hello\n</code></pre> <p>Remove the application from Supervisor's control scripts directory:</p> <pre><code>$ sudo rm /etc/supervisor/conf.d/hello.conf\n</code></pre> <p>If you never plan to use this application again, you can now remove its entire directory from <code>webapps</code>:</p> <pre><code>$ sudo rm -r /webapps/hello_django\n</code></pre>","tags":["django","nginx","gunicorn","virtualenv","supervisord","postgresql"]},{"location":"blog/2013/06/09/django-nginx-gunicorn-virtualenv-supervisor/#different-settings-in-production","title":"Different settings in production","text":"<p>You will probably want to use different settings on your production server and different settings during development.</p> <p>To achieve this I usually create a second settings file called <code>settings_local.py</code>, which contains overrides of some values, but imports every default like so:</p> <pre><code>from hello.settings import *\nDATABASES = ...\n</code></pre> <p>You can then tell Django to use this local settings file by specifying the environment variable <code>DJANGO_SETTINGS_MODULE=hello.settings_local</code>.</p>","tags":["django","nginx","gunicorn","virtualenv","supervisord","postgresql"]},{"location":"blog/2013/06/09/django-nginx-gunicorn-virtualenv-supervisor/#running-multiple-applications","title":"Running multiple applications","text":"<p>If you would like some help with setting up a Nginx server to run multiple Django applications, check out my next article.</p>","tags":["django","nginx","gunicorn","virtualenv","supervisord","postgresql"]},{"location":"blog/2013/06/09/django-nginx-gunicorn-virtualenv-supervisor/#translations","title":"Translations","text":"<p>This article was actually translated into a number of languages. If you would like, you can read it in Spanish or Chinese. If you know of other translations, let me know.</p>","tags":["django","nginx","gunicorn","virtualenv","supervisord","postgresql"]},{"location":"blog/2013/07/14/using-redis-as-django-session-store-and-cache-backend/","title":"Using Redis as Django's session store and cache backend","text":"<p>Redis is an in-memory key-value store, somewhat similar to Memcached. Because Redis keeps its dataset in memory, storage and retrieval is very fast. It's a good idea to use this kind of solution for storing ephemeral application data, such as contents of the cache, or temporary information associated with active user sessions. This unburdens your database system from performing unnecessary read and write operations and can considerably speed up your application. Modules for using Redis together with Django are available and quite easy to set up.</p>","tags":["django","redis"]},{"location":"blog/2013/07/14/using-redis-as-django-session-store-and-cache-backend/#prerequisites","title":"Prerequisites","text":"<p>I'm going to assume you have a Django application running in a virtual environment, under supervisord on a Debian server. Instructions for creating such a setup can be found in a previous article.</p>","tags":["django","redis"]},{"location":"blog/2013/07/14/using-redis-as-django-session-store-and-cache-backend/#redis","title":"Redis","text":"<p>Setting up Redis on Debian is simple using <code>apt-get</code>. On an RPM-based system you can use the equivalent <code>yum</code> command or similar.</p>","tags":["django","redis"]},{"location":"blog/2013/07/14/using-redis-as-django-session-store-and-cache-backend/#install-redis","title":"Install Redis","text":"<pre><code>$ sudo apt-get install redis-server\n$ redis-server --version\nRedis server version 2.4.14 (00000000:0)\n</code></pre>","tags":["django","redis"]},{"location":"blog/2013/07/14/using-redis-as-django-session-store-and-cache-backend/#configure-redis-to-connect-over-a-socket","title":"Configure Redis to connect over a socket","text":"<p>You can connect to a local Redis instance over the network layer (TCP to the loopback interface) or through a unix socket file. </p> <p>In order to avoid the small overhead of TCP, we can configure Redis to accept direct socket connections. To do this, edit your <code>/etc/redis/redis.conf</code> file, comment out the <code>bind</code> and <code>port</code> directives and uncomment the two <code>unixsocket</code> directives.</p> <pre><code># Accept connections on the specified port, default is 6379.\n# If port 0 is specified Redis will not listen on a TCP socket.\n# port 6379\n\n# If you want you can bind a single interface, if the bind option is not\n# specified all the interfaces will listen for incoming connections.\n#\n# bind 127.0.0.1\n\n# Specify the path for the unix socket that will be used to listen for\n# incoming connections. There is no default, so Redis will not listen\n# on a unix socket when not specified.\n#\nunixsocket /var/run/redis/redis.sock\nunixsocketperm 700\n</code></pre> <p>After making changes to its configuration you will need to restart Redis:</p> <pre><code>$ sudo service redis-server restart\n</code></pre> <p>You can now check if Redis is up and accepting connections:</p> <pre><code>$ redis-cli ping\nPONG\n</code></pre>","tags":["django","redis"]},{"location":"blog/2013/07/14/using-redis-as-django-session-store-and-cache-backend/#redis-socket-permissions","title":"Redis socket permissions","text":"<p>Default permissions on the Redis socket are very restrictive on Debian and allow only the user <code>redis</code> to connect through it. You can relax these permissions and allow any local user to connect to Redis by changing the <code>unixsocketperm</code> directive in <code>redis.conf</code> to:</p> <pre><code>unixsocketperm 777\n</code></pre> <p>Remember to restart Redis after making configuration changes</p> <pre><code>$ sudo service redis-server restart\n</code></pre> <p>For security reasons, it may be better to restrict access to the socket to a chosen group of users. You can add the user which your application will run as to the group <code>redis</code>:</p> <pre><code>$ sudo usermod -a -G redis django_username\n</code></pre> <p>Then change the permissions on the socket file by changing the <code>unixsocketperm</code> directive in <code>redis.conf</code> to:</p> <pre><code>unixsocketperm 770\n</code></pre> <p>Groups are assigned at login, so if your application is running, you'll need to restart it. If you're running an application called <code>hello</code> via <code>supervisor</code>, you can restart it like this:</p> <pre><code>$ sudo supervisorctl restart hello\n</code></pre> <p>Find more information about getting started with Redis in the documentation.</p>","tags":["django","redis"]},{"location":"blog/2013/07/14/using-redis-as-django-session-store-and-cache-backend/#python-bindings-for-redis","title":"Python bindings for Redis","text":"<p>In order to use Redis with a Python application such as Django, you'll need to install the Redis-Python interface bindings module. You can install it in your virtualenv with <code>pip</code>:</p> <pre><code>$ source bin/activate\n(hello_django) $ pip install redis\n</code></pre>","tags":["django","redis"]},{"location":"blog/2013/07/14/using-redis-as-django-session-store-and-cache-backend/#redis-as-backend-for-djangos-cache","title":"Redis as backend for Django's cache","text":"<p>You can set up Redis to store your application's cache data. Use the django-redis-cache module for this.</p> <p>Install <code>django-redis-cache</code> in your virtual environment:</p> <pre><code>(hello_django) $ pip install django-redis-cache\n</code></pre> <p>And add the following to your <code>settings.py</code> file:</p> <p><pre><code>CACHES = {\n    'default': {\n        'BACKEND': 'redis_cache.RedisCache',\n        'LOCATION': '/var/run/redis/redis.sock',\n    },\n}\n</code></pre> You can now restart your application and start using Django's Redis-powered cache.</p>","tags":["django","redis"]},{"location":"blog/2013/07/14/using-redis-as-django-session-store-and-cache-backend/#using-djangos-cache-in-your-application","title":"Using Django's cache in your application","text":"<p>Django's cache framework is very flexible and allows you to cache your entire site or individual views. You can control the behavior of the cache using the <code>@cache_page</code> decorator. For instance to cache the results of <code>my_view</code> for 15 minutes, you can use the following code:</p> <pre><code>from django.views.decorators.cache import cache_page\n\n@cache_page(60 * 15) \ndef my_view(request):\n    ...\n</code></pre> <p>If you haven't set up Django's cacheing middleware yet, you should do so by adding lines 2 and 6 from the snippet below to <code>MIDDLEWARE_CLASSES</code> in your <code>settings.py</code>.</p> <pre><code>MIDDLEWARE_CLASSES = (\n    'django.middleware.cache.UpdateCacheMiddleware',    # This must be first on the list\n    'django.middleware.common.CommonMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    (...)\n    'django.middleware.cache.FetchFromCacheMiddleware', # This must be last\n</code></pre> <p>More information: using Django's cache.</p>","tags":["django","redis"]},{"location":"blog/2013/07/14/using-redis-as-django-session-store-and-cache-backend/#using-the-cache-inside-your-functions","title":"Using the cache inside your functions","text":"<p>You can also use the cache in your functions to store arbitrary data for quick retrieval later on.</p> <pre><code># Start by importing your default cache:\nfrom django.core.cache import cache\n\n# Store data under a-unique-key:\ncache.set('a-unique-key', 'this is a string which will be cached')\n\n# Later on you can retrieve it in another function:\ncache.get('a-unique-key') # Will return None if key is not found in cache\n\n# You can specify a default value:\ncache.get('another-unique-key', 'default value')\n\n# You can store multiple values at once:\ncache.set_many({'a': 1, 'b': 2, 'c': 3})\n\n# And fetch multiple values:\ncache.get_many(['a', 'b', 'c']) # returns {'a': 1, 'b': 2, 'c': 3}\n\n# You can store complex types in the cache:\ncache.set('a-unique-key', {\n    'string'    : 'this is a string',\n    'int'       : 42,\n    'list'      : [1, 2, 3, 4],\n    'tuple'     : (1, 2, 3, 4),\n    'dict'      : {'A': 1, 'B' : 2},\n})\n</code></pre> <p>Note</p> <p>Complex values will be serialized and stored under a single key. Before you can look up a value in the structure, it has to be retrieved from cache and unserialized. This is not as fast as storing simple values directly in the cache under a more complex key namespace.</p> <p>More information: Django's cache API.</p>","tags":["django","redis"]},{"location":"blog/2013/07/14/using-redis-as-django-session-store-and-cache-backend/#redis-as-backend-for-django-session-data","title":"Redis as backend for Django session data","text":"<p>If you're using <code>django-redis-cache</code> as described above, you can use it to store Django's sessions by adding the following to your <code>setting.py</code>:</p> <pre><code>SESSION_ENGINE = 'django.contrib.sessions.backends.cache'\n</code></pre> <p>You can also write session information to the database and only load it from the cache by using:</p> <pre><code>SESSION_ENGINE = 'django.contrib.sessions.backends.cached_db'\n</code></pre> <p>This ensures that session data is persistent and can survive a restart of Redis.</p>","tags":["django","redis"]},{"location":"blog/2013/07/14/using-redis-as-django-session-store-and-cache-backend/#redis-for-django-session-data-without-django-redis-cache","title":"Redis for Django session data without django-redis-cache","text":"<p>Alternatively, you can use Redis exclusively as a store for Django's session data. The  django-redis-sessions module let's you do this.</p> <p>Inside your virtual environment install <code>django-redis-sessions</code>:</p> <pre><code>(hello_django) $ pip install django-redis-sessions\n</code></pre> <p>Now, configure <code>redis_sessions.session</code> as the session engine in your <code>setting.py</code>. Since we're using a socket to connect, we also need to provide its path:</p> <pre><code>SESSION_ENGINE = 'redis_sessions.session'\nSESSION_REDIS_UNIX_DOMAIN_SOCKET_PATH = '/var/run/redis/redis.sock'\n</code></pre> <p>That's it. After you restart your application, session data should be stored in Redis instead of the database.</p> <p>More information: working with sessions in Django.</p>","tags":["django","redis"]},{"location":"blog/2013/07/14/using-redis-as-django-session-store-and-cache-backend/#redis-for-multiple-applications","title":"Redis for multiple applications","text":"<p>Please note that the solution described above can only be used by a single Django application. If you want to use multiple Django applications with Redis, you could try to separate their namespaces, by using key prefixes, or using a different Redis numeric database for each (<code>1</code> for one application, <code>2</code> for another, etc). These solutions are not advised however.</p> <p>If you want to run multiple applications each with a Redis cache, the recommendation is to run a separate Redis instance for each application. On Chris Laskey's blog you can find instructions for setting up multiple Redis instances on the same server.</p>","tags":["django","redis"]},{"location":"blog/2013/08/19/pywaw-presentation/","title":"PyWaw Presentation","text":"<p>Slides for a presentation I'm giving today at Warsaw's Python User Group meetup PyWaw.</p>","tags":["django","extjs"]},{"location":"blog/2013/09/28/website-performance-script-for-the-grinder-using-har2grinder/","title":"Recording a website performance test for The Grinder using Chrome DevTools","text":"<p>The Grinder load testing framework is a good tool for stress testing your website or application. It can run tests in parallel on multiple machines, allowing you to check how your application would behave under heavy load. This makes it possible to determine your app's weak points, so you can proceed to optimize them. Unfortunately the TCPProxy component provided with The Grinder sometimes produces flawed testing scripts.  I created a simple tool called har2grinder, which produces Grinder test scripts from HAR files. This allows you to record a browsing session using Chrome's DevTools and then run it in the Grinder.</p>","tags":["performance-testing","grinder","devtools"]},{"location":"blog/2013/09/28/website-performance-script-for-the-grinder-using-har2grinder/#http-archive-har-files","title":"HTTP Archive (HAR) files","text":"<p>The HTTP Archive (HAR) format is able to store a history of HTTP transactions. This allows a web browser to export detailed performance data about web pages it loads. This format is currently a work in progress at the W3C.</p> <p>Chrome's DevTools allow you to save a history of your browsing including every HTTP request made by the browser during your session. We can convert this record to a script which The Grinder will run multiple times.</p>","tags":["performance-testing","grinder","devtools"]},{"location":"blog/2013/09/28/website-performance-script-for-the-grinder-using-har2grinder/#creating-a-har-file-using-chrome-devtools","title":"Creating a HAR file using Chrome DevTools","text":"<ol> <li> <p>Fire up Chrome and open the DevTools.</p> </li> <li> <p>Click the Settings icon   in the bottom right corner and Disable the cache.</p> </li> <li> <p>Open the Network tab of the DevTools.</p> </li> <li> <p>Clear the Network history  </p> </li> <li> <p>Choose the option to Preserve Log upon navigation   (circle icon turns red).</p> </li> <li> <p>Navigate around your site.</p> <p> Copy your recorded browser session in HAR format <ol> <li>After you navigate to the pages you want to test, right-click on the network history panel and choose Copy All as HAR. Save the clipboard to a <code>.har</code> file.</li> </ol>","tags":["performance-testing","grinder","devtools"]},{"location":"blog/2013/09/28/website-performance-script-for-the-grinder-using-har2grinder/#creating-a-test-script-for-the-grinder-from-a-har-file","title":"Creating a test script for The Grinder from a HAR file","text":"<p>Download the har2grinder script from Github.</p> <p>To convert your recorded navigation to a Grinder test, simply run the <code>har2grinder</code> script and redirect its output to a <code>.py</code> file.</p> <pre><code>$ python har2grinder.py my_website_test.har &gt; my_website_grinder_test.py\n</code></pre>","tags":["performance-testing","grinder","devtools"]},{"location":"blog/2013/09/28/website-performance-script-for-the-grinder-using-har2grinder/#running-tests-in-the-grinder","title":"Running tests in The Grinder","text":"<p>Information about using The Grinder can be found in it's user guide. Essentially it boils down to:</p> <ol> <li>Download Grinder binaries from SourceForge</li> <li> <p>Start a GUI console to control your tests using a command such as:</p> <pre><code>$ java -classpath lib/grinder.jar net.grinder.Console\n</code></pre> </li> <li> <p>Grinder agents are the programs which will connect to your website during tests. On the same machine, another machine or a set of machines create a file called <code>grinder.properties</code>, which will contain the configuration for Grinder's agents.</p> </li> </ol> grinder.properties<pre><code># Which test do you wish to run\ngrinder.script=my_website_grinder_test.py\n# How many tests do you want to run in parallel\ngrinder.processes=2\ngrinder.threads=100\n# How many times to repeat them\ngrinder.runs=5\n# Specify the IP and port of the host running the console\ngrinder.consoleHost=127.0.0.1\ngrinder.consolePort=6372\n# Enable logging of test runs for debugging\ngrinder.logDirectory=log\ngrinder.numberOfOldLogs=2\n</code></pre> <p>...and start the agent processes:</p> <pre><code>$ java -classpath lib/grinder.jar net.grinder.Grinder grinder.properties\n</code></pre> <p>You can now run your performance tests from the Grinder console.</p>","tags":["performance-testing","grinder","devtools"]},{"location":"blog/2013/10/29/serving-multiple-django-applications-with-nginx-gunicorn-supervisor/","title":"Serving multiple Django applications with Nginx and Gunicorn","text":"<p>Nginx makes a great server for your Gunicorn-powered Django applications. In this article I will demonstrate how you can run multiple Django applications on the same Nginx server, hosting sites on two different domains. Each application will be set up in its own Virtualenv and each will be owned by and run as a different user to limit consequences of a potential security breach.</p>","tags":["django","nginx","gunicorn","virtualenv","supervisord"]},{"location":"blog/2013/10/29/serving-multiple-django-applications-with-nginx-gunicorn-supervisor/#prerequisites","title":"Prerequisites","text":"<p>This artcle is a continuation of a previous article on setting up Django with Nginx and Gunicorn. You should start by following instructions in that article and prepare a server with the following components:</p> <ul> <li>Nginx</li> <li>PostgreSQL</li> <li>Virtualenv</li> <li>Supervisor</li> </ul> <p>Our goal in this article will be to create two applications, one called Hello and one called Goodbye. The former will be served under the address http://hello.test and the latter http://goodbye.test</p>","tags":["django","nginx","gunicorn","virtualenv","supervisord"]},{"location":"blog/2013/10/29/serving-multiple-django-applications-with-nginx-gunicorn-supervisor/#create-a-virtual-environment-for-each-app","title":"Create a virtual environment for each app","text":"<p>In order to keep your apps independent, each will run in its own virtual environment. Create an environment for each application using the <code>virtualenv</code> command. In each environment install Django, Gunicorn, the application itself and its other dependencies. Follow steps described in my previous article for each app.</p> <p>Let's say that for our <code>hello</code> and <code>goodbye</code> applications we would create environments in <code>/webapps/hello_django</code> and <code>/webapps/goodbye_django</code> respectively. We would get a directory structure containing the following entries:</p> <pre><code>/webapps/\n\u251c\u2500\u2500 hello_django                &lt;= virtualenv for the application Hello\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 bin\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 activate\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 gunicorn            &lt;= Hello app's gunicorn\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 gunicorn_start      &lt;= Hello app's gunicorn start script\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 python\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 hello                   &lt;= Hello app's Django project directory\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 hello\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 settings.py     &lt;= hello.settings\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 wsgi.py         &lt;= hello.wsgi\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 logs                    &lt;= Hello app's logs will be saved here\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 media\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 run                     &lt;= Gunicorn's socket file will be placed here\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 static\n\u2514\u2500\u2500 goodbye_django              &lt;= analogous virtualenv for the application Goodbye\n    \u251c\u2500\u2500 bin\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 activate\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 gunicorn\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 gunicorn_start\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 python\n    \u251c\u2500\u2500 goodbye\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 goodbye\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 settings.py\n    \u2502\u00a0\u00a0     \u2514\u2500\u2500 wsgi.py\n    \u251c\u2500\u2500 logs\n    \u251c\u2500\u2500 media\n    \u251c\u2500\u2500 run\n    \u2514\u2500\u2500 static\n</code></pre>","tags":["django","nginx","gunicorn","virtualenv","supervisord"]},{"location":"blog/2013/10/29/serving-multiple-django-applications-with-nginx-gunicorn-supervisor/#create-system-accounts-for-the-webapps","title":"Create system accounts for the webapps","text":"<p>Even though Django has a pretty good security track record, web applications can become compromised. In order to make running multiple applications safer we'll create a separate system user account for each application. The apps will run on our system with the privileges of those special users. Even if one application became compromised, an attacker would only be able to take over the part of your system available to the hacked application.</p> <p>Create system users named <code>hello</code> and <code>goodbye</code> and assign them to a system group called <code>webapps</code>.</p> <pre><code>$ sudo groupadd --system webapps\n$ sudo useradd --system --gid webapps --home /webapps/hello_django hello \n$ sudo useradd --system --gid webapps --home /webapps/goodbye_django goodbye\n</code></pre> <p>Now change the owner of files in each application's folder. I like to assign the group <code>users</code> as the owner, because that allows regular users of the server to access and modify parts of the application which are group-writable. This is optional.</p> <pre><code>$ sudo chown -R hello:users /webapps/hello_django\n$ sudo chown -R goodbye:users /webapps/goodbye_django\n</code></pre>","tags":["django","nginx","gunicorn","virtualenv","supervisord"]},{"location":"blog/2013/10/29/serving-multiple-django-applications-with-nginx-gunicorn-supervisor/#create-gunicorn-start-scripts","title":"Create Gunicorn start scripts","text":"<p>For each application create a simple shell script based on my gunicorn_start template. The scripts differ only in the values of variables which they set. </p> <p>For the Hello app, set the following values in <code>/webapps/hello_django/bin/gunicorn_start</code>:</p> /webapps/hello_django/bin/gunicorn_start<pre><code>(...)\nNAME=\"hello_app\"                                  # Name of the application\nDJANGODIR=/webapps/hello_django/hello             # Django project directory\nSOCKFILE=/webapps/hello_django/run/gunicorn.sock  # we will communicte using this unix socket\nUSER=hello                                        # the user to run as\nGROUP=webapps                                     # the group to run as\nNUM_WORKERS=3                                     # how many worker processes should Gunicorn spawn\nDJANGO_SETTINGS_MODULE=hello.settings             # which settings file should Django use\nDJANGO_WSGI_MODULE=hello.wsgi                     # WSGI module name\n(...)\n</code></pre> <p>And for the Goodbye app by analogy:</p> /webapps/goodbye_django/bin/gunicorn_start<pre><code>(...)\nNAME=\"goodbye_app\"                                  # Name of the application\nDJANGODIR=/webapps/goodbye_django/goodbye           # Django project directory\nSOCKFILE=/webapps/goodbye_django/run/gunicorn.sock  # we will communicte using this unix socket\nUSER=goodbye                                        # the user to run as\nGROUP=webapps                                       # the group to run as\nNUM_WORKERS=3                                       # how many worker processes should Gunicorn spawn\nDJANGO_SETTINGS_MODULE=goodbye.settings             # which settings file should Django use\nDJANGO_WSGI_MODULE=goodbye.wsgi                     # WSGI module name\n(...)\n</code></pre>","tags":["django","nginx","gunicorn","virtualenv","supervisord"]},{"location":"blog/2013/10/29/serving-multiple-django-applications-with-nginx-gunicorn-supervisor/#create-supervisor-configuration-files-and-start-the-apps","title":"Create Supervisor configuration files and start the apps","text":"<p>Next, create a Supervisor configuration for each application. Add a file for each app to the <code>/etc/supervisor/conf.d</code> directory.</p> <p>One for Hello:</p> /etc/supervisor/conf.d/hello.conf<pre><code>[program:hello]\ncommand = /webapps/hello_django/bin/gunicorn_start                    ; Command to start app\nuser = hello                                                          ; User to run as\nstdout_logfile = /webapps/hello_django/logs/gunicorn_supervisor.log   ; Where to write log messages\nredirect_stderr = true                                                ; Save stderr in the same log\n</code></pre> <p>And one for Goodbye:</p> /etc/supervisor/conf.d/goodbye.conf<pre><code>[program:goodbye]\ncommand = /webapps/goodbye_django/bin/gunicorn_start                    ; Command to start app\nuser = goodbye                                                          ; User to run as\nstdout_logfile = /webapps/goodbye_django/logs/gunicorn_supervisor.log   ; Where to write log messages\nredirect_stderr = true                                                  ; Save stderr in the same log\n</code></pre> <p>Reread the configuration files and update Supervisor to start the apps:</p> <pre><code>$ sudo supervisorctl reread\n$ sudo supervisorctl update\n</code></pre> <p>You can also start them manually, if you prefer:</p> <pre><code>$ sudo supervisorctl start hello\n$ sudo supervisorctl start goodbye\n</code></pre>","tags":["django","nginx","gunicorn","virtualenv","supervisord"]},{"location":"blog/2013/10/29/serving-multiple-django-applications-with-nginx-gunicorn-supervisor/#create-nginx-virtual-servers","title":"Create Nginx virtual servers","text":"<p>Finally we can create virtual server configurations for each app based on this template. These will be stored in <code>/etc/nginx/sites-available</code> and then activated by links in <code>/etc/nginx/sites-enabled</code>.</p> /etc/nginx/sites-available/hello<pre><code>upstream hello_app_server {\n  server unix:/webapps/hello_django/run/gunicorn.sock fail_timeout=0;\n}\n\nserver {\n    listen   80;\n    server_name hello.test;\n\n    client_max_body_size 4G;\n\n    access_log /webapps/hello_django/logs/nginx-access.log;\n    error_log /webapps/hello_django/logs/nginx-error.log;\n\n    location /static/ {\n        alias   /webapps/hello_django/static/;\n    }\n\n    location /media/ {\n        alias   /webapps/hello_django/media/;\n    }\n\n    location / {\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header Host $http_host;\n        proxy_redirect off;\n        if (!-f $request_filename) {\n            proxy_pass http://hello_app_server;\n            break;\n        }\n    }\n}\n</code></pre> /etc/nginx/sites-available/goodbye<pre><code>upstream goodbye_app_server {\n  server unix:/webapps/goodbye_django/run/gunicorn.sock fail_timeout=0;\n}\n\nserver {\n    listen   80;\n    server_name goodbye.test;\n\n    client_max_body_size 4G;\n\n    access_log /webapps/goodbye_django/logs/nginx-access.log;\n    error_log /webapps/goodbye_django/logs/nginx-error.log;\n\n    location /static/ {\n        alias   /webapps/goodbye_django/static/;\n    }\n\n    location /media/ {\n        alias   /webapps/goodbye_django/media/;\n    }\n\n    location / {\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header Host $http_host;\n        proxy_redirect off;\n        if (!-f $request_filename) {\n            proxy_pass http://goodbye_app_server;\n            break;\n        }\n    }\n}\n</code></pre> <p>Enable the virtual servers and restart Nginx:</p> <pre><code>$ sudo ln -s /etc/nginx/sites-available/hello /etc/nginx/sites-enabled/hello\n$ sudo ln -s /etc/nginx/sites-available/goodbye /etc/nginx/sites-enabled/goodbye\n$ sudo service nginx restart\n</code></pre>","tags":["django","nginx","gunicorn","virtualenv","supervisord"]},{"location":"blog/2013/10/29/serving-multiple-django-applications-with-nginx-gunicorn-supervisor/#test-the-virtual-servers","title":"Test the virtual servers","text":"<p>Now let's point each domain to our server for testing purposes. Making actual changes to the Domain Name System is usually among the final steps when working in production, performed after all tests are completed. For testing you can simulate the DNS changes by adding an entry to the <code>/etc/hosts</code> file of a computer from which you will be connecting to your server (your laptop for example).</p> <p>Say you want to serve Django applications under the domains <code>hello.test</code> and <code>goodbye.test</code> from a server with the IP address of <code>10.10.10.200</code>. You can simulate the appropriate DNS entries locally on your PC by putting the following line into your <code>/etc/hosts</code> file. On Windows the file is conveniently hidden in <code>%SystemRoot%\\system32\\drivers\\etc\\hosts</code>.</p> /etc/hosts<pre><code>(...)\n10.10.10.200    hello.test goodbye.test\n</code></pre> <p>You can now navigate to each domain from your PC to test that each app on the server is working correctly:</p> <ul> <li>http://hello.test</li> <li>http://goodbye.test</li> </ul> <p>Good luck!</p>","tags":["django","nginx","gunicorn","virtualenv","supervisord"]},{"location":"blog/2014/01/18/performance-testing-django-applications-with-the-grinder/","title":"Performance testing Django applications with The Grinder","text":"<p>Performance testing web applications is a little tricky when we want to test features accessible only to logged in users. Automated test recorders intercept session cookies and hardcode them into test scenarios. When we run these tests later, different session IDs are generated and recorded cookie values don't grant access anymore. This text demonstrates how to write a scenario for The Grinder to test a Django application. Tests include user login, submitting CSRF-protected forms and AJAX requests.</p>","tags":["django","grinder","performance-testing"]},{"location":"blog/2014/01/18/performance-testing-django-applications-with-the-grinder/#test-scenario-example","title":"Test scenario example","text":"<p>Let's dive right in. The code below is a sample test scenario for The Grinder. It represents various aspects of interaction between the test agent and your application including:</p> <ul> <li>logging a user in</li> <li>accessing password protected pages and API calls:<ul> <li>GETting a page</li> <li>submitting a CSRF-protected form</li> <li>sending an AJAX <code>XMLHttpRequest</code></li> </ul> </li> </ul> <pre><code>from net.grinder.script.Grinder import grinder\nfrom net.grinder.script import Test\nfrom net.grinder.plugin.http import HTTPRequest, HTTPPluginControl\nfrom HTTPClient import Cookie, CookieModule, CookiePolicyHandler, NVPair\n\nHOST_DOMAIN = 'example.com'\nHOST_URL = 'http://%s' % HOST_DOMAIN\n\n\ndef create_request(test, headers=None):\n    request = HTTPRequest()\n    if headers: \n        request.headers = headers\n    test.record(request)\n    return request\n\n\ndef get_csrf_token(thread_context):\n    cookies = CookieModule.listAllCookies(thread_context)\n    csrftoken = ''\n    for cookie in cookies:\n        if cookie.getName() == 'csrftoken':\n            csrftoken = cookie.getValue()\n    return csrftoken\n\n\nclass TestRunner:\n    def __call__(self):\n        print \"O, hai!\"\n\n        thread_context = HTTPPluginControl.getThreadHTTPClientContext()\n\n        create_request(Test(1100, 'Connect to host')).GET(HOST_URL + '/')\n\n        create_request(Test(1200, 'Get login page')).GET(HOST_URL + '/login/')\n\n        # Log a user in using username, password and CSRF token read from cookie\n        create_request(Test(1300, 'Log in user')).POST(HOST_URL + '/login/', (\n            NVPair('csrfmiddlewaretoken', get_csrf_token(thread_context)),\n            NVPair('username', 'michal'),\n            NVPair('password', 'myfakepassword'),\n            NVPair('next', '%2F'),))\n\n        create_request(Test(1400, 'Access page requiring login')).GET(HOST_URL + '/user/area/')\n\n        create_request(Test(1500, 'Post to form requiring login')).POST(HOST_URL + '/user/area/action', (\n            NVPair('csrfmiddlewaretoken', get_csrf_token(thread_context)),\n            NVPair('param1', 'value'),\n            NVPair('param2', 'value')))\n\n        # Prepare an \"AJAX\" request with appropriate headers, indluding CSRF token from cookie\n        ajax_request = create_request(Test(1600, 'Send an AJAX request requiring login'), [\n            NVPair('X-Requested-With', 'XMLHttpRequest'),\n            NVPair('X-CSRFToken', get_csrf_token(thread_context)),\n        ])\n        ajax_request.POST(HOST_URL + '/user/area/action', (\n            NVPair('param1', 'value'),\n            NVPair('param2', 'value')))\n\n        print \"Kthnxbye!\"\n</code></pre>","tags":["django","grinder","performance-testing"]},{"location":"blog/2014/01/18/performance-testing-django-applications-with-the-grinder/#how-does-it-work","title":"How does it work?","text":"<p>Django as well as many other web applications use a simple authentication mechanism. First, the user provides a username and password combination. The application then verifies user data, opens a session and sends a session cookie back to the user. A session ID contained in the cookie uniquely identifies the user's open session. As long as each request from the user comes in accompanied by the cookie, the user is considered logged in, at least until the session expires on the server.</p> <p>The example test scenario file above depends on The Grinder's ability to parse and resubmit cookies, so you don't actually have to worry about the <code>sessionid</code> cookie.</p>","tags":["django","grinder","performance-testing"]},{"location":"blog/2014/01/18/performance-testing-django-applications-with-the-grinder/#a-note-on-csrf-tokens-and-testing-ajax-methods","title":"A note on CSRF tokens and testing AJAX methods","text":"<p>Another obstacle to overcome when running automated tests on Django are anti cross-site request forgery tokens. These tokens are generated dynamically for every form and Django requires that they be submitted with every POST request. </p> <p>In the example test scenario we don't parse HTML forms, but instead rely on the fact that Django also sets a cookie with the CSRF token value. We fetch the cookie value (using the <code>get_csrf_token</code> function) and submit it as a field named <code>csrfmiddlewaretoken</code> in POST data. </p> <pre><code>create_request(Test(1500, 'Post to form requiring login')).POST(HOST_URL + '/user/area/action', (\n    NVPair('csrfmiddlewaretoken', get_csrf_token(thread_context)),\n    NVPair('param1', 'value'),\n    NVPair('param2', 'value'),\n))\n</code></pre> <p>We can also simulate AJAX requests by sending appropriate headers, namely <code>X-Requested-With</code> and <code>X-CSRFToken</code>. The anti-CSRF token value is read from cookie and written in the latter header.</p> <pre><code>ajax_request = create_request(Test(1600, 'Send an AJAX request requiring login'), [\n    NVPair('X-Requested-With', 'XMLHttpRequest'),\n    NVPair('X-CSRFToken', get_csrf_token(thread_context)),\n])\n</code></pre> <p>If you're still having trouble with CSRF and keep testing 403 errors instead of your application, you can disable CSRF completely using a small bit of middleware. Just make sure you don't leave this on in production.</p> <pre><code>class StressTestingMiddleware(object):\n    def process_request(self, request):\n        setattr(request, '_dont_enforce_csrf_checks', True)\n</code></pre>","tags":["django","grinder","performance-testing"]},{"location":"blog/2014/01/18/performance-testing-django-applications-with-the-grinder/#final-result","title":"Final result","text":"<p>When your tests are prepared and properly vetted you can leverage the power of The Grinder to run them from as many parallel agent machines (and/or threads) as you require. Your test output will include execution time statistics for every test step.</p> Partial output of a sample test run","tags":["django","grinder","performance-testing"]},{"location":"blog/2014/04/13/webmin-administrators-cookbook/","title":"My book &quot;Webmin Administrator's Cookbook&quot; available from Packt","text":"<p>I recently wrote a book about administering Linux servers with the aid of the friendly  and versatile utility called Webmin. The book covers a wide variety of topics,  from setting up and securing a new server to running and monitoring databases (MySQL, Postgres),  a web server (Apache) and a mail server (Postfix).</p> Webmin Administrator's Cookbook <p>The book is written as a series of 120 step-by-step recipes, which should be easily accessible to both novice and  professional system administrators. Check it out to see how Webmin can make your life easier.  The book is currently available from Packt Publishing.</p>","tags":["webmin","server","administration","book","apache","mysql","postgresql","postfix"]},{"location":"blog/2014/04/19/continuous-integration-server-for-django-using-jenkins/","title":"Setting up Jenkins as a continuous integration server for Django","text":"<p>Jenkins is an easy-to-use open-source continuous integration server. In this post we'll go through steps needed to set up Jenkins to deploy your Django application and run unit tests whenever someone commits code to your project's repository. If the new code causes any of your tests to fail, Jenkins will send the commiter an email alert.</p>","tags":["continuous-integration","django","jenkins"]},{"location":"blog/2014/04/19/continuous-integration-server-for-django-using-jenkins/#prerequisites","title":"Prerequisites","text":"<p>In this post I will assume that you want to set up Jenkins on a Debian server named <code>test-server</code>. I will further assume that:</p> <ul> <li>the server is hosting a test version of your application at the URL <code>http://test-server</code></li> <li>the application is running in a <code>virtualenv</code> located in the directory <code>/webapps/hello_django/</code></li> <li>the application code itself is located in <code>/webapps/hello_django/trunk/</code></li> <li>you're using an SVN repository located at <code>svn://svn-server/hello_django/trunk</code></li> </ul> <p>Take a look at my previous post for more information about setting up Django in a virtualenv.</p>","tags":["continuous-integration","django","jenkins"]},{"location":"blog/2014/04/19/continuous-integration-server-for-django-using-jenkins/#installing-jenkins","title":"Installing Jenkins","text":"<p>Jenkins provides packages for most system distributions. Installation is very simple and consists of adding the Jenkins repository to your package system and installing the package. On Debian this can be performed using the following steps:</p> <pre><code>### Add the Jenkins repository to the list of repositories\n$ sudo sh -c 'echo deb http://pkg.jenkins-ci.org/debian binary/ &gt; /etc/apt/sources.list.d/jenkins.list'\n\n### Add the repository's public key to your system's trusted keychain\n$ wget -q -O - http://pkg.jenkins-ci.org/debian/jenkins-ci.org.key | sudo apt-key add -\n\n### Download the repository index and install\n$ sudo apt-get update\n$ sudo apt-get install jenkins\n</code></pre> <p>Installation is very similar on other systems. For details take a look at the Jenkins installation docs.</p> <p>By default Jenkins runs on port <code>8080</code> and listens on all network interfaces. After installing the package, you can visit Jenkins under the URL: http://test-server:8080</p> <p>The default setup provides no security at all, so if your server is accessible outside of a trusted network you will need to secure it. Jenkins documentation describes a basic security setup, which you can extend by proxying Jenkins through your secured Apache or Nginx server, using HTTPs, etc.</p>","tags":["continuous-integration","django","jenkins"]},{"location":"blog/2014/04/19/continuous-integration-server-for-django-using-jenkins/#preparation-steps","title":"Preparation steps","text":"<p>Since we will want Jenkins to deploy our application to the directory from which it runs, ie. <code>/webapps/hello_django/trunk/</code>, we will need to give the <code>jenkins</code> user access to write to this directory. We can do this by changing the directory's owner to <code>jenkins</code> for example:</p> <pre><code>$ sudo chown jenkins /webapps/hello_django/trunk/\n</code></pre> <p>If you want the <code>jenkins</code> user to restart your web or application server after a new version of your code is deployed, you should add an appropriate entry to your server's <code>/etc/sudoers</code> file, such as:</p> <pre><code>jenkins ALL=NOPASSWD: /usr/sbin/apachectl\n</code></pre> <p>On your SVN server create a user named <code>jenkins</code> with access to the source code of your project.</p>","tags":["continuous-integration","django","jenkins"]},{"location":"blog/2014/04/19/continuous-integration-server-for-django-using-jenkins/#creating-a-build-configuration-for-your-django-project","title":"Creating a build configuration for your Django project","text":"","tags":["continuous-integration","django","jenkins"]},{"location":"blog/2014/04/19/continuous-integration-server-for-django-using-jenkins/#making-a-new-build-configuration","title":"Making a new build configuration","text":"<ol> <li>Navigate to your Jenkins installation and click New Item. </li> <li>Specify the name of the build you are creating, for example <code>hello-django-trunk</code></li> <li>Select the Build a free-style software project option.</li> </ol>","tags":["continuous-integration","django","jenkins"]},{"location":"blog/2014/04/19/continuous-integration-server-for-django-using-jenkins/#configuring-build-location","title":"Configuring build location","text":"<ol> <li>On the build configuration screen, click Advanced... in the Advanced Project Options section.</li> <li>Mark the checkbox Use custom workspace.</li> <li>Specify <code>/webapps/hello_django/trunk/</code> as the Directory.</li> </ol>","tags":["continuous-integration","django","jenkins"]},{"location":"blog/2014/04/19/continuous-integration-server-for-django-using-jenkins/#configuring-the-source-code-repository","title":"Configuring the source code repository","text":"<ol> <li>In the Source Code Management section, select Subversion.</li> <li>Specify your Repository URL as <code>svn://svn-server/hello_django/trunk</code></li> <li>Set Credentials to the username and password of the <code>jenkins</code> SVN user.</li> <li>Set Local module directory to a single dot <code>.</code> to indicate that we will be checking out code directly into the workspace directory.</li> </ol> Subversion configuration for Jenkins <p>Note</p> <p>If you are using Git, you should install the Jenkins Git Plugin and use a Git URL for your repository instead.</p>","tags":["continuous-integration","django","jenkins"]},{"location":"blog/2014/04/19/continuous-integration-server-for-django-using-jenkins/#configuring-build-triggers","title":"Configuring build triggers","text":"<p>We will want Jenkins to deploy our application to the test server and run our tests after every commit. We can accomplish this, in at least two ways: a) we can ask Jenkins to periodically poll the SVN server for information about new commits, or b) we can add a post-commit hook to our repository to trigger a build after every commit remotely. The first option is easier to set up, but slightly wasteful, as we end up polling our source-code repository for information even during times when no one is working. Choose the option which suits your needs best.</p> <p>To configure polling of your source code repository every 10 minutes:</p> <ol> <li>Check the Poll SCM box in the Build Triggers section.</li> <li>Enter the following string as Schedule: <code>H/10 * * * *</code></li> </ol> <p>Alternatively, to enable builds to be actively triggered by your source code repository's <code>post-commit</code> hook:</p> <ol> <li>Check the Trigger builds remotely (e.g., from scripts) box.</li> <li>Enter a long random string as the Authentication Token.</li> </ol> Build triggers (choose one or the other) <p>If you want builds to be triggered actively by your source code repository, you will need to create a script called <code>post-commit</code> (in the <code>hooks</code> directory of your SVN repo directory or the <code>.git/hooks</code> directory when using Git). Your hook script should execute a command such as <code>curl</code> to send an HTTP request to Jenkins which will trigger the build. The token is used here for security.</p> <pre><code>#!/bin/bash\ncurl http://test-server:8080/job/hello-django-trunk/build?token=xZrJ5WsSfJkGpNsriOlY4PtQ7hC5olzDhNE\n</code></pre> <p>Note</p> <p>Once you set up Jenkins user authentication, the command above will not work. There is a plugin which can fix this. Note that when using this plugin the build trigger URL changes, so your command will have to be modified slightly.</p> <pre><code>#!/bin/bash\ncurl http://test-server:8080/buildByToken/build?job=hello-django-trunk&amp;token=xZrJ5WsSfJkGpNsriOlY4PtQ7hC5olzDhNE\n</code></pre> <p>More information about using hooks: in SVN and Git.</p>","tags":["continuous-integration","django","jenkins"]},{"location":"blog/2014/04/19/continuous-integration-server-for-django-using-jenkins/#the-actual-build-script","title":"The actual build script","text":"<p>Here we finally get to the meat of the matter. In the Build section we can enter all commands which should be executed to deploy our application to the test server and run tests.</p> <ol> <li>In the Build section click the Add build step button.</li> <li>Select Execute shell from the drop-down.</li> <li>Adjust the following script to your needs and enter it in the Command text area:</li> </ol> <pre><code>#!/bin/bash\nsource /webapps/hello_django/activate     # Activate the virtualenv\ncd /webapps/hello_django/trunk/\npip install -r REQUIREMENTS.txt           # Install or upgrade dependencies\npython manage.py migrate                  # Apply South's database migrations\npython manage.py compilemessages          # Create translation files\npython manage.py collectstatic --noinput  # Collect static files\nsudo apachectl graceful                   # Restart the server, e.g. Apache\npython manage.py test --noinput app1 app2 # Run the tests\n</code></pre>","tags":["continuous-integration","django","jenkins"]},{"location":"blog/2014/04/19/continuous-integration-server-for-django-using-jenkins/#send-emails-when-tests-fail","title":"Send emails when tests fail","text":"<p>If a commit causes our tests to fail, we want to alert the guilty commiter. </p> <ol> <li>In the Post-build Actions section click the Add post-build action button.</li> <li>Select E-mail Notification from the dropdown.</li> <li>Check the box Send separate e-mails to individuals who broke the build.</li> <li>Click Save the bottom of the screen.</li> </ol> <p>Note</p> <p>There is an important caveat here. Emails will be sent to addresses which combine the SVN username and a default domain suffix. This means that your users will need to have mailboxes (or aliases) in the same domain named as their SVN users are. For example, if my SVN username is <code>michal</code>, I would have to have the e-mail <code>michal@email-server</code>.</p>","tags":["continuous-integration","django","jenkins"]},{"location":"blog/2014/04/19/continuous-integration-server-for-django-using-jenkins/#set-up-jenkins-to-send-emails","title":"Set up Jenkins to send emails","text":"<ol> <li>Navigate to Jenkins &gt; Manage Jenkins &gt; Configure System.</li> <li>Scroll down to the E-mail Notification section.</li> <li>Set Default user e-mail suffix to <code>@email-server</code> where <code>email-server</code> is the fully. qualified domain name of your organization's mail system.</li> <li>Click the Advanced button and enter your SMTP server configuration to allow the Jenkins user to send email.</li> <li>Check the box Test configuration by sending test e-mail and send yourself a message to test the settings.</li> </ol> <p>OK, we're done. From now on, whenever code is submitted to your repository, Jenkins should pick it up, deploy your Django application, run tests and alert the commiter if something he did broke a test. </p> <p>Note</p> <p>If your test server is available outside of your trusted network, make sure you proceed to lock it down tight.</p>","tags":["continuous-integration","django","jenkins"]},{"location":"blog/2014/05/18/setting-up-an-asynchronous-task-queue-for-django-using-celery-redis/","title":"Setting up an asynchronous task queue for Django using Celery and Redis","text":"<p>Celery is a powerful, production-ready asynchronous job queue, which allows you to run time-consuming Python functions in the background. A Celery powered application can respond to user requests quickly, while long-running tasks are passed onto the queue. In this article we will demonstrate how to add Celery to a Django application using Redis.</p> <p>Note</p> <p>Celery uses a broker to pass messages between your application and Celery worker processes. In this article we will set up Redis as the message broker. You should note that persistence is not the main goal of this data store, so your queue could be erased in the event of a power failure or other crash. Keep this in mind and don't use the job queue to store application state. If you need your queue to be have persistence, use another message broker such as RabbitMQ. </p>","tags":["django","celery","redis"]},{"location":"blog/2014/05/18/setting-up-an-asynchronous-task-queue-for-django-using-celery-redis/#prerequisites","title":"Prerequisites","text":"<p>In this article we will add Celery to a Django application running in a Python virtualenv. I will assume that the virtual environment is located in the directory <code>/webapps/hello_django/</code> and that the application is up an running. You can follow steps in my previous article to set up Django in virtualenv running on Nginx and Gunicorn.</p> <p>This article was tested on a server running Debian 7, so everything should also work on an Ubuntu server or other Debian-based distribution. If you're using an RPM-based distro (such as CentOS), you will need to replace the <code>aptitude</code> commands by their <code>yum</code> counterparts and if you're using FreeBSD you can install the components from ports. If you don't have a server to play with, I can recommend the inexpensive VPS servers offered by Digital Ocean.</p>","tags":["django","celery","redis"]},{"location":"blog/2014/05/18/setting-up-an-asynchronous-task-queue-for-django-using-celery-redis/#update-your-system","title":"Update your system","text":"<p>Let's get started by making sure your system is up to date.</p> <pre><code>$ sudo aptitude update\n$ sudo aptitude upgrade\n</code></pre>","tags":["django","celery","redis"]},{"location":"blog/2014/05/18/setting-up-an-asynchronous-task-queue-for-django-using-celery-redis/#install-redis","title":"Install Redis","text":"<p>The first piece of software we'll install is Redis.</p> <pre><code>$ sudo aptitude install redis-server\n$ redis-server --version\nRedis server version 2.4.14 (00000000:0)\n</code></pre> <p>Check if Redis is up and accepting connections:</p> <pre><code>$ redis-cli ping\nPONG\n</code></pre>","tags":["django","celery","redis"]},{"location":"blog/2014/05/18/setting-up-an-asynchronous-task-queue-for-django-using-celery-redis/#installing-celery-in-your-aplications-virtualenv","title":"Installing Celery in your aplication's virtualenv","text":"<p>Let's add Celery to your application's virtual Python environment. </p> <p>First we'll switch to the application user and activate the <code>virtualenv</code></p> <pre><code>$ sudo su - hello\nhello@django:~$ source bin/activate\n</code></pre> <p>Now we can use <code>pip</code> to install Celery along with its Redis bindings and dependencies:</p> <pre><code>(hello_django)hello@django:~$ pip install celery[redis]\nDownloading/unpacking celery[redis]\n(...)\nSuccessfully installed celery pytz billiard kombu redis anyjson amqp\nCleaning up...\n</code></pre>","tags":["django","celery","redis"]},{"location":"blog/2014/05/18/setting-up-an-asynchronous-task-queue-for-django-using-celery-redis/#setting-up-celery-support-in-your-django-application","title":"Setting up Celery support in your Django application","text":"<p>In order to use Celery as part of your Django application you'll need to create a few files and tweak some settings. Let's start by adding Celery-related configuration variables to <code>settings.py</code></p> /webapps/hello_django/hello/hello/settings.py<pre><code># CELERY SETTINGS\nBROKER_URL = 'redis://localhost:6379/0'\nCELERY_ACCEPT_CONTENT = ['json']\nCELERY_TASK_SERIALIZER = 'json'\nCELERY_RESULT_SERIALIZER = 'json'\n</code></pre> <p>Now we'll create a file named <code>celery.py</code>, which will instantiate Celery, creating a so called Celery application. You can find more information about available Celery application settings in the documentation.</p> /webapps/hello_django/hello/hello/celery.py<pre><code>from __future__ import absolute_import\n\nimport os\nfrom celery import Celery\nfrom django.conf import settings\n\n# set the default Django settings module for the 'celery' program.\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'hello.settings')\n\napp = Celery('hello_django')\n\n# Using a string here means the worker will not have to\n# pickle the object when using Windows.\napp.config_from_object('django.conf:settings')\napp.autodiscover_tasks(lambda: settings.INSTALLED_APPS)\n</code></pre> <p>In order to instantiate the Celery app every time our Django application is started, we can add the following lines to the <code>__init__.py</code> file in our Django <code>proj.proj</code> module. This will make sure that celery task use this app.</p> /webapps/hello_django/hello/hello/__init__.py<pre><code>from __future__ import absolute_import\nfrom .celery import app as celery_app\n</code></pre>","tags":["django","celery","redis"]},{"location":"blog/2014/05/18/setting-up-an-asynchronous-task-queue-for-django-using-celery-redis/#create-your-first-tasks","title":"Create your first tasks","text":"<p>We will now add an app called <code>testapp</code> to our Django project and add some tasks to this app. Let's start by creating the app:</p> <pre><code>(hello_django)hello@django:~/hello$ python manage.py startapp testapp\n</code></pre> <p>Make sure that the app is added to <code>INSTALLED_APPS</code> in <code>settings.py</code></p> /webapps/hello_django/hello/hello/settings.py<pre><code>INSTALLED_APPS = (\n    # (...)\n    'testapp',\n)\n</code></pre> <p>Create a file called <code>tasks.py</code> in your apps's directory and add the code of your first Celery task to the file.</p> /webapps/hello_django/hello/testapp/tasks.py<pre><code>from __future__ import absolute_import\n\nfrom celery import shared_task\n\n@shared_task\ndef test(param):\n    return 'The test task executed with argument \"%s\" ' % param\n</code></pre> <p>Find more information about writing task functions in the docs.</p> <p>If you created all files as outlined above, you should see the following directory structure:</p> <pre><code>/webapps/hello_django/hello\n\u251c\u2500\u2500 hello\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 celery.py       # The Celery app file\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py     # The project module file we modified\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 settings.py     # Settings go here, obviously :)\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 urls.py\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 wsgi.py\n\u251c\u2500\u2500 manage.py\n\u2514\u2500\u2500 testapp\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 models.py\n    \u251c\u2500\u2500 tasks.py        # File containing tasks for this app\n    \u251c\u2500\u2500 tests.py\n    \u2514\u2500\u2500 views.py\n</code></pre> <p>You can find a complete sample Django project on Celery's GitHub.</p>","tags":["django","celery","redis"]},{"location":"blog/2014/05/18/setting-up-an-asynchronous-task-queue-for-django-using-celery-redis/#testing-the-setup","title":"Testing the setup","text":"<p>In production we will want Celery workers to be daemonized, but let's just quickly start the workers to check that everything is configured correctly. Use the <code>celery</code> command located in your virtualenv's <code>bin</code> directory to start the workers. Make sure that the module path <code>hello.celery:app</code> is available on your <code>PYTHONPATH</code>.</p> <p>Note</p> <p>It's important to understand how Celery names tasks which it discovers and how these names are related to Python module paths. If you run into <code>NotRegistered</code> or <code>ImportError</code> exceptions make sure that your apps and tasks are imported in a consistent manner and your <code>PYTHONPATH</code> is set correctly.</p> <p>$ export PYTHONPATH=/webapps/hello_django/hello:$PYTHONPATH $ /webapps/hello_django/bin/celery --app=hello.celery:app worker --loglevel=INFO</p> <p>-------------- celery@django v3.1.11 (Cipater) ---- * ----- --- * ***  * -- Linux-3.2.0-4-amd64-x86_64-with-debian-7.5 -- * -  --- - ** ---------- [config] - ** ---------- .&gt; app:         hello_django:0x15ae410 - ** ---------- .&gt; transport:   redis://localhost:6379/0 - ** ---------- .&gt; results:     disabled - *** --- * --- .&gt; concurrency: 2 (prefork) -- ** ---- --- *** ----- [queues]  -------------- .&gt; celery           exchange=celery(direct) key=celery</p> <p>[tasks]   . testapp.tasks.test</p> <p>[2014-05-20 13:53:59,740: INFO/MainProcess] Connected to redis://localhost:6379/0 [2014-05-20 13:53:59,748: INFO/MainProcess] mingle: searching for neighbors [2014-05-20 13:54:00,756: INFO/MainProcess] mingle: all alone [2014-05-20 13:54:00,769: WARNING/MainProcess] celery@django ready.</p> <p>If everything worked, you should see a splash screen similar to the above and the <code>[tasks]</code> section should list tasks discovered in all the apps of your project.</p> <pre><code>[tasks]\n  . testapp.tasks.test\n</code></pre>","tags":["django","celery","redis"]},{"location":"blog/2014/05/18/setting-up-an-asynchronous-task-queue-for-django-using-celery-redis/#submitting-a-task-to-the-queue-for-execution","title":"Submitting a task to the queue for execution","text":"<p>In another terminal, activate the virtualenv and start a task from your project's shell.</p> <pre><code>$ sudo su - hello\nhello@django:~$ source bin/activate\n(hello_django)hello@django:~$ cd hello/\n(hello_django)hello@django:~/hello$ python manage.py shell\nPython 2.7.3 (default, Mar 13 2014, 11:03:55)\n[GCC 4.7.2] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n(InteractiveConsole)\n&gt;&gt;&gt; from testapp.tasks import test\n&gt;&gt;&gt; test.delay('This is just a test!')\n&lt;AsyncResult: 79e35cf7-0a3d-4786-b746-2d3dd45a5c16&gt;\n</code></pre> <p>You should see messages appear in the terminal where Celery workers are started:</p> <pre><code>[2014-05-18 11:43:24,801: INFO/MainProcess] Received task: testapp.tasks.test[79e35cf7-0a3d-4786-b746-2d3dd45a5c16]\n[2014-05-18 11:43:24,804: INFO/MainProcess] Task testapp.tasks.test[79e35cf7-0a3d-4786-b746-2d3dd45a5c16] succeeded in 0.00183034200018s: u'The test task executed with argument \"This is just a test!\" '\n</code></pre> <p>You can find more information about calling Celery tasks in the docs.</p>","tags":["django","celery","redis"]},{"location":"blog/2014/05/18/setting-up-an-asynchronous-task-queue-for-django-using-celery-redis/#running-celery-workers-as-daemons","title":"Running Celery workers as daemons","text":"<p>In production we can use supervisord to start Celery workers and make sure they are restarted in case of a system reboot or crash. Installation of Supervisor is simple:</p> <pre><code>$ sudo aptitude install supervisor\n</code></pre> <p>When Supervisor is installed you can give it programs to start and watch by creating configuration files in the <code>/etc/supervisor/conf.d</code> directory. For our <code>hello-celery</code> worker we'll create a file named <code>/etc/supervisor/conf.d/hello-celery.conf</code> with this content:</p> /etc/supervisor/conf.d/hello-celery.conf<pre><code>[program:hello-celery]\ncommand=/webapps/hello_django/bin/celery --app=hello.celery:app worker --loglevel=INFO\ndirectory=/webapps/hello_django/hello\nuser=hello\nnumprocs=1\nstdout_logfile=/webapps/hello_django/logs/celery-worker.log\nstderr_logfile=/webapps/hello_django/logs/celery-worker.log\nautostart=true\nautorestart=true\nstartsecs=10\n\n; Need to wait for currently executing tasks to finish at shutdown.\n; Increase this if you have very long running tasks.\nstopwaitsecs = 600\n\n; When resorting to send SIGKILL to the program to terminate it\n; send SIGKILL to its whole process group instead,\n; taking care of its children as well.\nkillasgroup=true\n\n; if rabbitmq is supervised, set its priority higher\n; so it starts first\npriority=998\n</code></pre> <p>This configuration is based on a sample config provided by the makers of Celery. You can set many other options.</p> <p>Create a file to store your application's log messages:</p> <pre><code>hello@django:~$ mkdir -p /webapps/hello_django/logs/\nhello@django:~$ touch /webapps/hello_django/logs/celery-worker.log\n</code></pre> <p>After you save the configuration file for your program you can ask supervisor to reread configuration files and update (which will start your the newly registered app).</p> <pre><code>$ sudo supervisorctl reread\nhello-celery: available\n$ sudo supervisorctl update\nhello-celery: added process group\n</code></pre> <p>You can now monitor output of Celery workers by following the <code>celery-worker.log</code> file:</p> <pre><code>$ tail -f /webapps/hello_django/logs/celery-worker.log\n</code></pre> <p>You can also check the status of Celery or start, stop or restart it using supervisor.</p> <pre><code>$ sudo supervisorctl status hello                       \nhello                            RUNNING    pid 18020, uptime 0:00:50\n$ sudo supervisorctl stop hello  \nhello: stopped\n$ sudo supervisorctl start hello                        \nhello: started\n$ sudo supervisorctl restart hello \nhello: stopped\nhello: started\n</code></pre> <p>Celery workers should now be automatically started after a system reboot and automatically restarted if they ever crashed for some reason.</p>","tags":["django","celery","redis"]},{"location":"blog/2014/05/18/setting-up-an-asynchronous-task-queue-for-django-using-celery-redis/#inspecting-worker-tasks","title":"Inspecting worker tasks","text":"<p>You can check that Celery is running by issuing the <code>celery status</code> command:</p> <pre><code>$ export PYTHONPATH=/webapps/hello_django/hello:$PYTHONPATH\n$ /webapps/hello_django/bin/celery --app=hello.celery:app status\ncelery@django: OK\n\n1 node online.\n</code></pre> <p>You can also inspect the queue using a friendly curses monitor:</p> <pre><code>$ export PYTHONPATH=/webapps/hello_django/hello:$PYTHONPATH\n$ /webapps/hello_django/bin/celery --app=hello.celery:app control enable_events\n$ /webapps/hello_django/bin/celery --app=hello.celery:app events\n</code></pre> Celery Worker monitor <p>I hope that's enough to get you started. You should probably read the Celery User Guide now. Happy coding!</p>","tags":["django","celery","redis"]},{"location":"blog/2014/06/22/devops-tools-for-everyone---vagrant-puppet-and-webmin/","title":"DevOps tools for everyone - Vagrant, Puppet and Webmin","text":"<p>Slides for a presentation I gave last week at DevCon in Warsaw.</p>","tags":["vagrant","puppet","webmin","devops"]},{"location":"blog/2015/04/19/packaging-django-applications-as-docker-container-images/","title":"Packaging Django applications into Docker container images","text":"<p>Docker is an open-source software container management system. It allows you to create an isolated, self-contained environment to run your application. In this article we will walk thought steps needed to create a Docker image containing a Django application and demonstrate how to run it and access the container.</p>","tags":["django","docker","container"]},{"location":"blog/2015/04/19/packaging-django-applications-as-docker-container-images/#benefits-of-docker","title":"Benefits of Docker","text":"<p>So why is this Docker thing so popular these days? The basic answer is that it makes your applications portable. Django applications can make use of Python's <code>virtualenv</code> to create isolated environments, but if some of your apps use Python 2 and some use Python 3, you may need to install a whole slew of additional libraries on your host server.</p> <p>With Docker on the other hand, each container includes a specific version of the Linux kernel and all other dependencies of your app. You install dependencies such as <code>libjpeg</code> in the container, not on the host, so if your apps need different version of this or any other system libraries, you won't run into problems.</p> <ul> <li>An application running in a Docker container is sandboxed and doesn't have access to the host machine. This limits the potential security implications of a breach if someone were to exploit a bug in your app.</li> <li>Docker containers are much lighter then full VMs, because they don't run the operating system and rely on the host's kernel. The only processes running in the container are the ones your application requires.</li> <li>Once created the same container can be shared among developers and run in your testing and production environments.</li> </ul> <p>You can find more information about Docker in its FAQ pages.</p>","tags":["django","docker","container"]},{"location":"blog/2015/04/19/packaging-django-applications-as-docker-container-images/#in-this-article","title":"In this article","text":"<ul> <li>Installing Docker</li> <li>Creating a Docker image with your Django application</li> <li>Creating an entry-point script which starts Gunicorn</li> <li>Creating a Dockerfile</li> <li>Building a Docker container image</li> <li>Running a Docker container with your application</li> <li>Running the container in detached mode</li> <li>Passing additional arguments to Gunicorn</li> <li>Running Django management commands in the container</li> <li>Backing up user media files</li> <li>Writing logs to the Docker host</li> <li>Running the container with custom Django settings</li> </ul>","tags":["django","docker","container"]},{"location":"blog/2015/04/19/packaging-django-applications-as-docker-container-images/#prerequisites","title":"Prerequisites","text":"<p>The following procedure was tested on systems running Debian 7 and Ubuntu 14.04LTS. Everything should also work other Debian-based distributions. If you're using an RPM-based distro (such as CentOS), you will need to replace the <code>apt-get</code> commands by their <code>yum</code> counterparts and if you're using FreeBSD you can install the components from ports. If you don't have a server to play with, I can recommend the inexpensive VPS servers offered by Digital Ocean.</p>","tags":["django","docker","container"]},{"location":"blog/2015/04/19/packaging-django-applications-as-docker-container-images/#installing-docker","title":"Installing Docker","text":"<p>A Docker package is available in the Debian 8 repositories, so installing is as simple as:</p> <pre><code>$ sudo apt-get install docker.io\n</code></pre> <p>On Debian 7 and Ubuntu, you will have to run an installation script provided by Docker:</p> <pre><code>$ sudo apt-get install wget\n$ wget -qO- https://get.docker.com/ | sh\n</code></pre> <p>If you want to be able to run Docker containers as your user, not only as <code>root</code>, you should add yourself to the group called <code>docker</code> using the following command. </p> <pre><code>$ sudo usermod -aG docker `whoami`\n</code></pre> <p>Note</p> <p>Remember to log out and back in to pick up your new groups.</p> <p>Once Docker is installed, you can test it by running the following command. This will take a few minutes, so be patient.</p> <pre><code>$ docker run -i -t ubuntu:14.04 /bin/bash\nUnable to find image 'ubuntu:14.04' locally\n14.04: Pulling from ubuntu\n511136ea3c5a: Pull complete\nf3c84ac3a053: Pull complete\na1a958a24818: Pull complete\n9fec74352904: Pull complete\nd0955f21bf24: Already exists\nDigest: sha256:2a214fd5c1c2048ef34bb79b5411efe4aa1e082b53ac1de3191992fe3ec64395\nStatus: Downloaded newer image for ubuntu:14.04\nroot@a8fd0ab40b7e:/#\n</code></pre> <p>The above command actually downloaded (pulled) a docker container with Ubuntu 14.04 from the official Docker base images repository. After the image was downloaded, Docker fired up the container and started <code>bash</code> inside.  Feel free to look around. It looks like a normal Ubuntu system, except that only your <code>bash</code> process is running here:</p> <pre><code>root@a8fd0ab40b7e:/# ps aux\nUSER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND\nroot         1  0.0  0.0  18160  1984 ?        Ss   13:07   0:00 /bin/bash\nroot        23  0.0  0.0  15560  1148 ?        R+   13:10   0:00 ps aux\n</code></pre> <p>Type <code>exit</code> or hit <code>Ctrl-D</code> to exit <code>bash</code> and stop the container.</p> <p>You can list all running Docker containers using the <code>docker ps</code> command. If you add the <code>--all</code> switch you will also list containers, which were running previously, but are currently closed.</p> <pre><code>$ docker ps --all\nCONTAINER ID        IMAGE          COMMAND        CREATED          STATUS       PORTS    NAMES\na8fd0ab40b7e        ubuntu:14.04   \"/bin/bash\"    6 minutes ago    Exited (0)            sad_galileo\n</code></pre>","tags":["django","docker","container"]},{"location":"blog/2015/04/19/packaging-django-applications-as-docker-container-images/#creating-a-docker-image-with-your-django-application","title":"Creating a Docker image with your Django application","text":"<p>Let's proceed to create the Docker image for our Django application.</p> <p>We will need a directory to work in and a copy of our application's source. Let's create a directory called <code>dockyard</code>, where we will be making our containers and a subdirectory for the Docker image we are creating.</p> <pre><code>$ mkdir -p dockyard/hello_django_docker\n$ cd dockyard/hello_django_docker\n</code></pre> <p>For the purposes of this article I uploaded a sample Django app to Github, so we can grab a copy of the source code using the following command:</p> <pre><code>$ git clone https://github.com/postrational/hello_django.git\n</code></pre> <p>We should now have a working directory containing the source code of our Django application. Please note that I assume that a PIP-compatible <code>requirements.txt</code> file and the Django <code>manage.py</code> script are in the main source code directory named <code>hello_django</code>. The project's <code>settings.py</code> file is located in the subdirectory <code>hello</code>.</p> <pre><code>~/dockyard/hello_django_docker    # Our working directory\n`-- hello_django                  # Main project source directroy (from repo)\n    |-- hello\n    |   |-- __init__.py\n    |   |-- settings.py           # Project settings\n    |   |-- urls.py\n    |   `-- wsgi.py               # Project's WSGI start script\n    |-- manage.py                 # Django's management command\n    |-- project_application_1\n    |   `-- (more files...)\n    |-- project_application_2\n    |   `-- (more files...)\n    `-- requirements.txt          # File generated using pip freeze\n</code></pre> <p>With the code in place, let's proceed to create Docker-related files.</p>","tags":["django","docker","container"]},{"location":"blog/2015/04/19/packaging-django-applications-as-docker-container-images/#create-an-entry-point-script","title":"Create an entry-point script","text":"<p>A Docker container can use an script as the default command which will be fired when the container is run. In our case we will use the following script as the entry point.</p> docker-entrypoint.sh<pre><code>#!/bin/bash\npython manage.py migrate                  # Apply database migrations\npython manage.py collectstatic --noinput  # Collect static files\n\n# Prepare log files and start outputting logs to stdout\ntouch /srv/logs/gunicorn.log\ntouch /srv/logs/access.log\ntail -n 0 -f /srv/logs/*.log &amp;\n\n# Start Gunicorn processes\necho Starting Gunicorn.\nexec gunicorn hello.wsgi:application \\\n    --name hello_django \\\n    --bind 0.0.0.0:8000 \\\n    --workers 3 \\\n    --log-level=info \\\n    --log-file=/srv/logs/gunicorn.log \\\n    --access-logfile=/srv/logs/access.log \\\n    \"$@\"\n</code></pre> <p>The above entry point script does a few things:</p> <ul> <li>starts by running a few management commands, to apply the changes made in the application source code</li> <li>proceeds to create two log files in <code>/srv/logs/</code> and to run the <code>tail -f</code> command which will output the logs to the console</li> <li>finally is starts <code>gunicorn</code> which will serve our Django application</li> <li>the <code>\"$@\"</code> notation in the last line will allow you to pass additional arguments to <code>gunicorn</code> when you start the container.</li> </ul> <p>Save the script as <code>docker-entrypoint.sh</code> and change its permissions to make it executable:</p> <pre><code>$ chmod u+x docker-entrypoint.sh\n</code></pre>","tags":["django","docker","container"]},{"location":"blog/2015/04/19/packaging-django-applications-as-docker-container-images/#create-the-dockerfile","title":"Create the Dockerfile","text":"<p>We will now make the container definition file named <code>Dockerfile</code>. Create the file and give it the following content.</p> Dockerfile<pre><code>############################################################\n# Dockerfile to run a Django-based web application\n# Based on an Ubuntu Image\n############################################################\n\n# Set the base image to use to Ubuntu\nFROM ubuntu:14.04\n\n# Set the file maintainer (your name - the file's author)\nMAINTAINER Michal Karzynski\n\n# Set env variables used in this Dockerfile (add a unique prefix, such as DOCKYARD)\n# Local directory with project source\nENV DOCKYARD_SRC=hello_django\n# Directory in container for all project files\nENV DOCKYARD_SRVHOME=/srv\n# Directory in container for project source files\nENV DOCKYARD_SRVPROJ=/srv/hello_django\n\n# Update the default application repository sources list\nRUN apt-get update &amp;&amp; apt-get -y upgrade\nRUN apt-get install -y python python-pip\n\n# Create application subdirectories\nWORKDIR $DOCKYARD_SRVHOME\nRUN mkdir media static logs\nVOLUME [\"$DOCKYARD_SRVHOME/media/\", \"$DOCKYARD_SRVHOME/logs/\"]\n\n# Copy application source code to SRCDIR\nCOPY $DOCKYARD_SRC $DOCKYARD_SRVPROJ\n\n# Install Python dependencies\nRUN pip install -r $DOCKYARD_SRVPROJ/requirements.txt\n\n# Port to expose\nEXPOSE 8000\n\n# Copy entrypoint script into the image\nWORKDIR $DOCKYARD_SRVPROJ\nCOPY ./docker-entrypoint.sh /\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n</code></pre> <p><code>Dockerfile</code> specifies the steps needed to create our container image:</p> <ol> <li>Use Ubuntu 14.04 as the base image of our container. Docker will download the image named <code>ubuntu:14.04</code> and all subsequent commands will be executed inside of a running container with this base OS.</li> <li>We set some environment variables in our container using the <code>ENV</code> commands. These variables can be used later in the <code>Dockerfile</code>, but will also be available in the environment of all programs executed in the container. For this reason we use a prefix (<code>DOCKYARD</code>), so that our variables don't accidentally override anything else.</li> <li>We run <code>apt-get</code> to install any system tools and libraries we may need.</li> <li>We prepare all directories our application will use in the <code>/srv/</code> directory of our container. Using the <code>VOLUME</code> command we make some of these directories available to other containers. This will come in handy later, see \"Backing up user media files\".</li> <li>Next we use the <code>COPY</code> command to copy the source code of our app into the container.</li> <li>We use the <code>requirements.txt</code> file from the source code to install Python dependencies.</li> <li>We use the <code>EXPOSE</code> command to make the Gunicorn port (8000) accessible outside of our container.</li> <li>Finally we copy over <code>docker-entrypoint.sh</code> and define it as the script which should execute when the container is started.</li> </ol> <p>You may want to refer to the Dockerfile documentation for more information about the available commands.</p>","tags":["django","docker","container"]},{"location":"blog/2015/04/19/packaging-django-applications-as-docker-container-images/#build-the-docker-container-image","title":"Build the Docker container image","text":"<p>All the pieces are now in place. Let's just review to make sure the files we created are in the right spot:</p> <pre><code>~/dockyard/hello_django_docker\n|-- docker-entrypoint.sh         # We added the executable entry script here\n|-- Dockerfile                   # And the Dockerfile here\n`-- hello_django\n    |-- hello\n    |   |-- __init__.py\n    |   |-- settings.py\n    |   |-- urls.py\n    |   `-- wsgi.py\n    |-- manage.py\n    |-- project_application_1\n    |-- project_application_2\n    `-- requirements.txt\n</code></pre> <p>We can now build the Docker container image. I will call the image <code>michal/hello_django</code>. </p> <p>Note</p> <p>Docker image names follow the convention of <code>user-name/image-name</code>. When you upload your image to a repository it will be added to your user account based on the name.</p> <p>$ docker build -t michal/hello_django ~/dockyard/hello_django_docker Sending build context to Docker daemon 80.38 kB Sending build context to Docker daemon Step 0 : FROM ubuntu:14.04 (...) Successfully built 03c7aeb70a09</p> <p>You will see output of many commands as the container is put together. At the end you should be able to see you newly created image when running the <code>docker images</code> command:</p> <pre><code>$ docker images\nREPOSITORY            TAG      IMAGE ID       CREATED         VIRTUAL SIZE\nmichal/hello_django   latest   17a441b8bdbd   2 seconds ago   394.6 MB\n</code></pre>","tags":["django","docker","container"]},{"location":"blog/2015/04/19/packaging-django-applications-as-docker-container-images/#running-a-docker-container-with-your-application","title":"Running a Docker container with your application","text":"<p>Now that the container image is created, we can use it to start a container.</p> <pre><code>$ docker run --publish=8001:8000 michal/hello_django:latest\n</code></pre> <p>This command starts a new container from the <code>michal/hello_django</code> image.</p> <p>Note</p> <p>It also makes the container's port 8000, which is the default Gunicorn port available on port 8001 of the Docker host. Reassigning ports in this way allows you to have multiple Django applications running in different containers. You just need to assign port 8000 of each container to a different port on the Docker host.</p> <p>Once the container is started in this way, you should be able to navigate to port 8001 of the Docker host and see the famous Django start page declaring that \"It worked!\".</p> <p>Visit your docker host in a browser (use the IP or domain of you machine): http://docker.host:8001</p> <p>You can stop the container by hitting Ctrl-C in the terminal.</p>","tags":["django","docker","container"]},{"location":"blog/2015/04/19/packaging-django-applications-as-docker-container-images/#running-the-container-in-detached-mode","title":"Running the container in detached mode","text":"<p>Starting and stopping a container as we did above is useful for debugging, but in most other cases you will want to start the container without attaching it to a terminal session. </p> <p>Use the <code>--detach=true</code> argument when starting the container.</p> <pre><code>$ docker run --name=hello_django \\\n    --detach=true \\\n    --restart=always \\\n    --publish=8001:8000 \\\n    michal/hello_django:latest\n81512acac0e4875a218587737ea31ce09aae746e4a8248461e16ab601bb1b0aa\n</code></pre> <p>Note, that we specified the name of the container (<code>--name=hello_django</code>). We also specified that the container should always be restarted if the process inside stops or crashes (<code>--restart=always</code>).</p> <p>You can now check that the container is running by listing all running Docker containers using the <code>docker ps</code> command.</p> <pre><code>$ docker ps\nCONTAINER ID        IMAGE                        COMMAND                CREATED             STATUS              PORTS                    NAMES\n2c7cbc6fd5b8        michal/hello_django:latest   \"/docker-entrypoint.   3 seconds ago       Up 3 seconds        0.0.0.0:8001-&gt;8000/tcp   hello_django\n</code></pre> <p>You can also follow the logs which are being output by the processes running in the container using the <code>docker logs</code> command.</p> <pre><code>$ docker logs -f hello_django\n</code></pre> <p>You can stop and restart the container:</p> <pre><code>$ docker stop hello_django\n$ docker start hello_django\n$ docker restart hello_django\n</code></pre> <p>And you can delete the container when you're done with it.</p> <pre><code>$ docker stop hello_django\n$ docker rm hello_django\n</code></pre>","tags":["django","docker","container"]},{"location":"blog/2015/04/19/packaging-django-applications-as-docker-container-images/#passing-additional-arguments-to-gunicorn","title":"Passing additional arguments to Gunicorn","text":"<p>Docker will pass any arguments specified after the name of the image to the command which starts the container. In our case those arguments will be passed to the <code>docker-entrypoint.sh</code> script, which in turn will pass them to the <code>gunicorn</code> command which it starts.</p> <p>If we want to change the number of Gunicorn worker processes running in the container, we just need to add the <code>--workers</code> argument to the end of <code>docker run</code>.</p> <pre><code>$ docker run \\\n    michal/hello_django:latest \\\n    --workers 5\n</code></pre>","tags":["django","docker","container"]},{"location":"blog/2015/04/19/packaging-django-applications-as-docker-container-images/#backing-up-user-media-files","title":"Backing up user media files","text":"<p>As we noted earlier, the <code>VOLUME</code> command in the Dockerfile made some directories accessible from other containers. If you would like to make a backup up of files stored in the <code>/srv/media/</code> directory, you can start another container using the <code>--volumes-from</code> argument. The volume directories will be accessible in the newly stared container.</p> <pre><code>$ docker run --rm -i -t --volumes-from=hello_django ubuntu:14.04 /bin/bash\nroot@ed95f0967489:/# cd /srv/media/\nroot@d0198a264b3a:/srv/media# apt-get install -y ssh-client\nroot@d0198a264b3a:/srv/media# scp -r * user@remote-host:~/path/to/backup\n</code></pre> <p>You can find more information about managing volumes in containers in the docs.</p>","tags":["django","docker","container"]},{"location":"blog/2015/04/19/packaging-django-applications-as-docker-container-images/#writing-logs-to-a-directory-on-the-docker-host","title":"Writing logs to a directory on the Docker host","text":"<p>You can also mount a Docker host machine directory as a volume inside the container, using the <code>--volume</code> argument.</p> <pre><code>$ sudo mkdir -p /var/log/webapps/hello\n$ docker run --name=hello_django \\\n    --detach=true \\\n    --restart=always \\\n    --publish=8001:8000 \\\n    --volume=/var/log/webapps/hello:/srv/logs \\\n    michal/hello_django:latest \\\n    --workers 5\n$ tail -f /var/log/webapps/hello/*.log\n</code></pre> <p>You can find more information about managing volumes in containers in the docs.</p>","tags":["django","docker","container"]},{"location":"blog/2015/04/19/packaging-django-applications-as-docker-container-images/#using-custom-django-settings","title":"Using custom Django settings","text":"<p>In many cases you will want to use different settings when running your Django application in development, during testing and in production. </p> <p>In order to do this, create a new settings file on the Docker host. Let's assume you save it in the directory <code>/etc/webapps/hello_django/local_settings.py</code>. In the file import all of your project's default settings and override only what's needed. </p> local_settings.py<pre><code>    from hello.settings import *\n    DATABASES = {\n        # Databases for this instance of the container\n    }\n</code></pre> <p>You can then use the <code>--volume</code> argument to mount the single file <code>local_settings.py</code> into your container and use the <code>--env</code> argument to set the <code>DJANGO_SETTINGS_MODULE</code> environment variable to the new settings module.</p> <pre><code>$ docker run --name=hello_django \\\n    --detach=true \\\n    --restart=always \\\n    --publish=8001:8000 \\\n    --env=\"DJANGO_SETTINGS_MODULE=hello.local_settings\" \\\n    --volume=/etc/webapps/hello_django/local_settings.py:/srv/hello_django/hello/local_settings.py \\\n    michal/hello_django:latest \\\n    --workers 5\n</code></pre>","tags":["django","docker","container"]},{"location":"blog/2015/04/19/packaging-django-applications-as-docker-container-images/#running-django-management-commands-in-the-container","title":"Running Django management commands in the container","text":"<p>You will probably want to run some Django management commands on the Docker host. In order to do this you can start another container from the same image and specify another command which will be started instead of the entrypoint script. If you use <code>/bin/bash</code>, you will arrive at a shell in the container. From here you can execute Django's <code>manage.py</code> commands.</p> <pre><code>$ docker run --rm -i -t --entrypoint=/bin/bash michal/hello_django:latest\nroot@ac0073a6bb9c:/srv/hello_django# ./manage.py createsuperuser\nUsername (leave blank to use 'root'): michal\nEmail address: michal@docker.image\nPassword:\nPassword (again):\nSuperuser created successfully.\n</code></pre> <p>Thanks for reading. If you find any issues with this article of have any other ideas, leave a comment below.</p>","tags":["django","docker","container"]},{"location":"blog/2016/06/19/building-beautiful-restful-apis-using-flask-swagger-ui-flask-restplus/","title":"Building beautiful REST APIs using Flask, Swagger UI and Flask-RESTPlus","text":"<p>This article outlines steps needed to create a REST API using Flask and Flask-RESTPlus. These tools combine into a framework, which automates common tasks:</p> <ul> <li>API input validation</li> <li>formatting output (as JSON)</li> <li>generating interactive documentation (with Swagger UI)</li> <li>turning Python exceptions into machine-readable HTTP responses</li> </ul>","tags":["rest","restful","api","flask","swagger","openapi","flask-restplus"]},{"location":"blog/2016/06/19/building-beautiful-restful-apis-using-flask-swagger-ui-flask-restplus/#flask","title":"Flask","text":"<p>Flask is a web micro-framework written in Python. Since it's a micro-framework, Flask does very little by itself. In contrast to a framework like Django, which takes the \"batteries included\" approach, Flask does not come with an ORM, serializers, user management or built-in internationalization. All these features and many others are available as Flask extensions, which make up a rich, but loosely coupled ecosystem.</p> <p>The challenge, then, for an aspiring Flask developer lies in picking the right extensions and combining them together to get just the right set of functions. In this article we will describe how to use the Flask-RESTPlus extension to create a Flask-based RESTful JSON API.</p>","tags":["rest","restful","api","flask","swagger","openapi","flask-restplus"]},{"location":"blog/2016/06/19/building-beautiful-restful-apis-using-flask-swagger-ui-flask-restplus/#flask-restplus","title":"Flask-RESTPlus","text":"<p>Flask-RESTPlus aims to make building REST APIs quick and easy. It provides just enough syntactic sugar to make your code readable and easy to maintain. Its killer feature is the ability to automatically generate interactive documentation for your API using Swagger\u00a0UI.</p>","tags":["rest","restful","api","flask","swagger","openapi","flask-restplus"]},{"location":"blog/2016/06/19/building-beautiful-restful-apis-using-flask-swagger-ui-flask-restplus/#swagger-ui","title":"Swagger UI","text":"<p>Swagger UI is part of a suite of technologies for documenting RESTful web services. Swagger has evolved into the OpenAPI specification, currently curated by the Linux Foundation. Once you have an OpenAPI description of your web service, you can use software tools to generate documentation or even boilerplate code (client or server) in a variety of languages. Take a look at swagger.io for more information.</p> <p>Swagger\u00a0UI is a great tool for describing and visualizing RESTful web services. It generates a small webpage, which documents your API and allows you to make test queries using JavaScript. Click here to see a small demo.</p> <p>In this article we'll describe how to use Flask and Flask-RESTPlus to create a RESTful API which comes equipped with Swagger\u00a0UI.</p>","tags":["rest","restful","api","flask","swagger","openapi","flask-restplus"]},{"location":"blog/2016/06/19/building-beautiful-restful-apis-using-flask-swagger-ui-flask-restplus/#getting-started","title":"Getting started","text":"<p>To show off the features of Flask-RESTPlus I prepared a small demo application. It's a part of an API for a blogging platform, which allows you to manage blog posts and categories.</p> <p>Let's start by downloading and running this demo on your system, then we'll walk through the code.</p>","tags":["rest","restful","api","flask","swagger","openapi","flask-restplus"]},{"location":"blog/2016/06/19/building-beautiful-restful-apis-using-flask-swagger-ui-flask-restplus/#prerequisites","title":"Prerequisites","text":"<p>You will need to have Python with Virtualenv and Git installed on your machine.</p> <p>I would recommend using Python 3, but Python 2 should work just fine.</p>","tags":["rest","restful","api","flask","swagger","openapi","flask-restplus"]},{"location":"blog/2016/06/19/building-beautiful-restful-apis-using-flask-swagger-ui-flask-restplus/#setting-up-the-demo-application","title":"Setting up the demo application","text":"<p>To download and start the demo application issue the following commands. First clone the application code into any directory on your disk:</p> <pre><code>$ cd /path/to/my/workspace/\n$ git clone https://github.com/postrational/rest_api_demo\n$ cd rest_api_demo\n</code></pre> <p>Create a virtual Python environment in a directory named <code>venv</code>, activate the virtualenv and install required dependencies using <code>pip</code>:</p> <pre><code>$ virtualenv -p `which python3` venv\n$ source venv/bin/activate\n(venv) $ pip install -r requirements.txt\n</code></pre> <p>Now let's set up the app for development and start it:</p> <pre><code>(venv) $ python setup.py develop\n(venv) $ python rest_api_demo/app.py\n</code></pre> <p>OK, everything should be ready. In your browser, open the URL http://localhost:8888/api/</p> <p>You should be greeted with a page similar to the following.</p> Swagger\u00a0UI showing a list of API methods","tags":["rest","restful","api","flask","swagger","openapi","flask-restplus"]},{"location":"blog/2016/06/19/building-beautiful-restful-apis-using-flask-swagger-ui-flask-restplus/#defining-your-flask-app-and-restplus-api","title":"Defining your Flask app and RESTPlus API","text":"<p>Flask and Flask-RESTPlus make it very easy to get started. Minimal code required to create a working API is just 10 lines long.</p> <pre><code>from flask import Flask\nfrom flask_restplus import Resource, Api\n\napp = Flask(__name__)                  #  Create a Flask WSGI application\napi = Api(app)                         #  Create a Flask-RESTPlus API\n\n@api.route('/hello')                   #  Create a URL route to this resource\nclass HelloWorld(Resource):            #  Create a RESTful resource\n    def get(self):                     #  Create GET endpoint\n        return {'hello': 'world'}\n\nif __name__ == '__main__':\n    app.run(debug=True)                #  Start a development server\n</code></pre> <p>To make the code more maintainable, in our demo application we separate the app definition, API methods and other types of code into separate files. The following directory tree shows where each part of the logic is located.</p> <pre><code>\u251c\u2500\u2500 api                         #\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 blog                    #  Blog-related API directory\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 business.py         #\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 endpoints           #  API namespaces and REST methods\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 categories.py   #\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 posts.py        #\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 parsers.py          #  Argument parsers\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 serializers.py      #  Output serializers\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 restplus.py             #  API bootstrap file\n\u251c\u2500\u2500 app.py                      #  Application bootstrap file\n\u251c\u2500\u2500 database                    #\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 models.py               #  Definition of SQLAlchemy models\n\u251c\u2500\u2500 db.sqlite                   #\n\u2514\u2500\u2500 settings.py                 #  Global app settings\n</code></pre> <p>The definition of the RESTPlus API is stored in the file <code>rest_api_demo/api/restplus.py</code>, while the logic for configuring and starting the Flask app is stored in <code>rest_api_demo/app.py</code>.</p> <p>Take a look into the <code>app.py</code> file and the <code>initialize_app</code> function.</p> rest_api_demo/app.py<pre><code>def initialize_app(flask_app):\n    configure_app(flask_app)\n\n    blueprint = Blueprint('api', __name__, url_prefix='/api')\n    api.init_app(blueprint)\n    api.add_namespace(blog_posts_namespace)\n    api.add_namespace(blog_categories_namespace)\n    flask_app.register_blueprint(blueprint)\n\n    db.init_app(flask_app)\n</code></pre> <p>This function does a number of things, but in particular it sets up a Flask blueprint, which will host the API under the <code>/api</code> URL prefix. This allows you to separate the API part of your application from other parts. Your app's frontend could be hosted in the same Flask application but under a different <code>blueprint</code> (perhaps with the <code>/</code> URL prefix).</p> <p>The RESTPlus API itself is also split into a number of separate namespaces. Each namespace has its own URL prefix and is stored in a separate file in the <code>/api/blog/endpoints</code> directory. In order to add these namespaces to the API, we need to use the <code>api.add_namespace()</code> function.</p> <p><code>initialize_app</code> also sets configuration values loaded from <code>settings.py</code> and configures the app to use a database through the magic of Flask-SQLAlchemy.</p>","tags":["rest","restful","api","flask","swagger","openapi","flask-restplus"]},{"location":"blog/2016/06/19/building-beautiful-restful-apis-using-flask-swagger-ui-flask-restplus/#defining-api-namespaces-and-restful-resources","title":"Defining API namespaces and RESTful resources","text":"<p>Your API will be organized using API namespaces, RESTful resources and HTTP methods. Namespaces, as described above, allow your API definitions to be split into multiple files, each defining a part of the API with a different URL prefix.</p> <p>RESTful resources are used to organize the API into endpoints corresponding to different types of data used by your application. Each endpoint is called using a different HTTP method. Each method issues a different command to the API. For example, <code>GET</code> is used to fetch a resource from the API, <code>PUT</code> is used to update its information, <code>DELETE</code> to delete it.</p> <ul> <li><code>GET /blog/categories/1</code> - Retrieve category with ID 1</li> <li><code>PUT /blog/categories/1</code> - Update the category with ID 1</li> <li><code>DELTE /blog/categories/1</code> - Delete the category with ID 1</li> </ul> <p>Resources usually have an associated collection endpoint, which can be used to create new resources (<code>POST</code>) or fetch lists (<code>GET</code>).</p> <ul> <li><code>GET /blog/categories</code> - Retrieve a list of categories</li> <li><code>POST /blog/categories</code> - Create a new category</li> </ul> <p>Using Flask-RESTPlus you can define an API for all of the endpoints listed above with the following block of code. We start by creating a namespace, we create a collection, a resource and associated HTTP methods.</p> rest_api_demo/api/blog/endpoints/categories.py<pre><code>ns = api.namespace('blog/categories', description='Operations related to blog categories')\n\n\n@ns.route('/')\nclass CategoryCollection(Resource):\n\n    def get(self):\n        \"\"\"Returns list of blog categories.\"\"\"\n        return get_all_categories()\n\n    @api.response(201, 'Category successfully created.')\n    def post(self):\n        \"\"\"Creates a new blog category.\"\"\"\n        create_category(request.json)\n        return None, 201\n\n\n@ns.route('/&lt;int:id&gt;')\n@api.response(404, 'Category not found.')\nclass CategoryItem(Resource):\n\n    def get(self, id):\n        \"\"\"Returns details of a category.\"\"\"\n        return get_category(id)\n\n    @api.response(204, 'Category successfully updated.')\n    def put(self, id):\n        \"\"\"Updates a blog category.\"\"\"\n        update_category(id, request.json)\n        return None, 204\n\n    @api.response(204, 'Category successfully deleted.')\n    def delete(self, id):\n        \"\"\"Deletes blog category.\"\"\"\n        delete_category(id)\n        return None, 204\n</code></pre> <p>The <code>api.namespace()</code> function creates a new namespace with a URL prefix. The <code>description</code> field will be used in the Swagger\u00a0UI to describe this set of methods.</p> <p>The <code>@ns.route()</code> decorator is used to specify which URLs will be associated with a given resource. You can specify path parameters using angle brackets, such as in <code>@ns.route('/&lt;int:id&gt;')</code>.</p> <p>You can optionally specify the type of parameter using the the name of a converter and colon.  Available converters are <code>string:</code> (default), <code>path:</code> (string with slashes), <code>int:</code>, <code>float:</code> and <code>uuid:</code>.</p> <p>Note</p> <p>URL converters come from the Werkzeug library on which Flask is based. You can read more about them in Werkzeug docs. Unfortunately not all Werkzeug converter options are currently supported by Flask-RESTPlus. Additional types can be added using Flask's <code>url_map</code> option.</p> <p>Each resource is a class which contains functions which will be mapped to HTTP methods. The following functions are mapped: <code>get</code>, <code>post</code>, <code>put</code>, <code>delete</code>, <code>patch</code>, <code>options</code> and <code>head</code>.</p> <p>If a docstring is present in any function, it will be displayed in the Swagger\u00a0UI as \"Implementation Notes\". You can use Markdown syntax to format these notes.</p> <p>You can use the <code>@api.response()</code> decorator to list what HTTP status codes each method is expected to return and what the status code means.</p> <p>Once all this code is in place, your method will be nicely documented in the Swagger\u00a0UI.</p> Swagger\u00a0UI showing details of an API method <p>Swagger\u00a0UI documentation also includes a form in which parameters can be set. If a request body is expected, its format will be specified on the right.</p> <p>If you hit the <code>Try it out!</code> button, your request will be sent to the API and the response will be displayed on screen.</p>","tags":["rest","restful","api","flask","swagger","openapi","flask-restplus"]},{"location":"blog/2016/06/19/building-beautiful-restful-apis-using-flask-swagger-ui-flask-restplus/#documenting-and-validating-method-parameters","title":"Documenting and validating method parameters","text":"<p>We already mentioned path parameters above, but you can also document parameters in the request query (after the <code>?</code> in the URL), the headers or in the form submitted in the request body.</p> <p>In order to define these parameters, we use an object called the <code>RequestParser</code>. The parser  has a function named <code>add_argument()</code>, which allows us to specify what the parameter is named and what its allowed values are.</p> rest_api_demo/api/blog/parsers.py<pre><code>from flask_restplus import reqparse\n\npagination_arguments = reqparse.RequestParser()\npagination_arguments.add_argument('page', type=int, required=False)\npagination_arguments.add_argument('per_page', type=int, required=False,\n                                  choices=[5, 10, 20, 30, 40, 50], default=10)\n</code></pre> <p>Once defined, we can use the <code>@api.expect</code> decorator to attach the parser to a method.</p> rest_api_demo/api/blog/endpoints/posts.py<pre><code>@ns.route('/')\nclass PostsCollection(Resource):\n\n    @api.expect(pagination_arguments, validate=True)\n    def get(self):\n        ...\n</code></pre> <p>Once the method is decorated with an argument parser, the method's Swagger\u00a0UI will display a form to specify argument values.</p>","tags":["rest","restful","api","flask","swagger","openapi","flask-restplus"]},{"location":"blog/2016/06/19/building-beautiful-restful-apis-using-flask-swagger-ui-flask-restplus/#validating-argument-values","title":"Validating argument values","text":"<p>The argument parser serves another function, it can validate the argument values. If a value fails validation, the API will return an <code>HTTP 400</code> error with an appropriate message.</p> <pre><code>{\n    \"errors\": {\n        \"per_page\": \"Results per page 3 is not a valid choice\"\n    },\n    \"message\": \"Input payload validation failed\"\n}\n</code></pre> <p>You can enable or disable argument validation for each method using the <code>validate</code> argument in the <code>@api.expect</code> method. You can also enable validation globally by using the <code>RESTPLUS_VALIDATE</code> configuration variable when bootstrapping your Flask application.</p> <pre><code>app.config['RESTPLUS_VALIDATE'] = True\n</code></pre> <p>In the demo application we enable validation globally in the <code>app.py</code> file.</p>","tags":["rest","restful","api","flask","swagger","openapi","flask-restplus"]},{"location":"blog/2016/06/19/building-beautiful-restful-apis-using-flask-swagger-ui-flask-restplus/#argument-options","title":"Argument options","text":"<p>To specify the argument's type use the <code>type</code> keyword. Allowed values are <code>int</code>, <code>str</code> and <code>bool</code>.</p> <p>You can specify arguments to be present in the query of your method, but also in the headers or request body using the <code>location</code> keyword.</p> <pre><code>parser.add_argument('headers', location='headers')\nparser.add_argument('form', location='form')\nparser.add_argument('json', location='json')\n</code></pre> <p>To create an argument which accepts multiple values, use the <code>action</code> keyword and specify <code>'append'</code> as value:</p> <pre><code>parser.add_argument('multiple', type=int, action='append', required=True)\n</code></pre> <p>To specify a list of valid argument values, use the <code>choices</code> keyword and provide an iterator as value.</p> <pre><code>pagination_arguments.add_argument('pages', choices=[5, 10, 20, 30, 40, 50])\n</code></pre> <p>Read more about RequestParser in the Flask-RESTPlus docs.</p>","tags":["rest","restful","api","flask","swagger","openapi","flask-restplus"]},{"location":"blog/2016/06/19/building-beautiful-restful-apis-using-flask-swagger-ui-flask-restplus/#documenting-and-validating-request-json-objects","title":"Documenting and validating request JSON objects","text":"<p>If you want to update or create a new resource in a RESTful collection, you should send the item's data serialized as JSON in the body of a request. Flask-RESTPlus allows you to automatically document and validate the format of incoming JSON objects by using API models.</p> <p>A RESTPlus API model defines the format of an object by listing all expected fields. Each field has an associated type (e.g. <code>String</code>, <code>Integer</code>, <code>DateTime</code>), which determines what values will be considered valid.</p> <p>The demo app has a number of API models in the <code>serializers.py</code> file. A simple example would look something like this:</p> rest_api_demo/api/blog/serializers.py<pre><code>from flask_restplus import fields\nfrom rest_api_demo.api.restplus import api\n\nblog_post = api.model('Blog post', {\n    'id': fields.Integer(description='The unique identifier of a blog post'),\n    'title': fields.String(required=True, description='Article title'),\n    'body': fields.String(required=True, description='Article content'),\n    'status': fields.String(required=True, enum=['DRAFT', 'PUBLISHED', 'DELETED']),\n    'pub_date': fields.DateTime,\n})\n</code></pre> <p>Once the model is defined you can attach it to a method using the <code>@api.expect()</code> decorator.</p> <pre><code>@ns.route('/')\nclass BlogPostCollection(Resource):\n\n    @api.response(201, 'Blog post successfully created.')\n    @api.expect(blog_post)\n    def post(self):\n        ...\n</code></pre>","tags":["rest","restful","api","flask","swagger","openapi","flask-restplus"]},{"location":"blog/2016/06/19/building-beautiful-restful-apis-using-flask-swagger-ui-flask-restplus/#field-options","title":"Field options","text":"<p>All fields share some common options which can change their behavior:</p> <ul> <li><code>required</code> - is the field required</li> <li><code>default</code> - default value for the field</li> <li><code>description</code> - field description (will appear in Swagger\u00a0UI)</li> <li><code>example</code> - optional example value (will appear in Swagger\u00a0UI)</li> </ul> <p>Additional validation options can be added to fields to make them more specific:</p> <p><code>String</code>:</p> <ul> <li><code>min_length</code> and <code>max_length</code> - minimum and maximum length of a string</li> <li><code>pattern</code> - a regular expression, which the sting must match</li> </ul> <pre><code>'slug': fields.String(required=True, pattern='^[a-z0-9-]+$', min_length=5, max_length=200)\n</code></pre> <p>Numbers (<code>Integer</code>, <code>Float</code>, <code>Fixed</code>, <code>Arbitrary</code>):</p> <ul> <li><code>min</code> and <code>max</code> - minimum and maximum values</li> <li><code>exclusiveMin</code> and <code>exclusiveMax</code> - as above, but the boundary values are not valid</li> <li><code>multiple</code> - number must be a multiple of this value</li> </ul> <p>You can learn more about RESTPlus model fields, by looking at their source code.</p>","tags":["rest","restful","api","flask","swagger","openapi","flask-restplus"]},{"location":"blog/2016/06/19/building-beautiful-restful-apis-using-flask-swagger-ui-flask-restplus/#nested-models-and-lists","title":"Nested models and lists","text":"<p>A field of an API model may use another model as its expected value. You would then provide a JSON object as a valid value for this field.</p> <pre><code>'details': fields.Nested(blog_post_details)\n</code></pre> <p>A field may also require a list of values, or even a list of nested objects.</p> <pre><code>'item_ids': fields.List(fields.Integer),\n'items': fields.List(fields.Nested(blog_post))\n</code></pre>","tags":["rest","restful","api","flask","swagger","openapi","flask-restplus"]},{"location":"blog/2016/06/19/building-beautiful-restful-apis-using-flask-swagger-ui-flask-restplus/#model-inheritance","title":"Model inheritance","text":"<p>If you have two similar models, you may use model inheritance to extend the definition of a model with additional fields. In the example below we have one generic API model called <code>pagination</code> and we create a more specific model <code>page_of_blog_posts</code> by using the <code>api.inherit()</code> method.</p> rest_api_demo/api/blog/serializers.py<pre><code>pagination = api.model('A page of results', {\n    'page': fields.Integer(description='Number of this page of results'),\n    'pages': fields.Integer(description='Total number of pages of results'),\n    'per_page': fields.Integer(description='Number of items per page of results'),\n    'total': fields.Integer(description='Total number of results'),\n})\n\npage_of_blog_posts = api.inherit('Page of blog posts', pagination, {\n    'items': fields.List(fields.Nested(blog_post))\n})\n</code></pre>","tags":["rest","restful","api","flask","swagger","openapi","flask-restplus"]},{"location":"blog/2016/06/19/building-beautiful-restful-apis-using-flask-swagger-ui-flask-restplus/#marshaling-output-json-objects","title":"Marshaling output JSON objects","text":"<p>API models can also be used as serializers. If you decorate a method with <code>@api.marshal_with(model)</code>, Flask-RESTPlus will generate a JSON object with the same fields as are specified in the <code>model</code>.</p> <p>The method just has to return an object which has attributes with the same names as the fields. Alternatively, the method could return a dictionary with values assigned to the same keys as the names of model fields.</p> <p>For example, your method can return an SQLAlchemy ORM object which has the same fields as your API model.</p> rest_api_demo/api/blog/endpoints/categories.py<pre><code>    @ns.route('/&lt;int:id&gt;')\n    @api.response(404, 'Category not found.')\n    class CategoryItem(Resource):\n\n        @api.marshal_with(category_with_posts)\n        def get(self, id):\n            \"\"\"\n            Returns a category with a list of posts.\n            \"\"\"\n            return Category.query.filter(Category.id == id).one()\n</code></pre> <p>If you want to return a list of objects, use the <code>@api.marshal_list_with(model)</code> decorator.</p> <p>The <code>attribute</code> keyword allows you specify which object attribute the field value should be taken from:</p> <pre><code>'firstName': fields.String(attribute='first_name'),\n</code></pre> <p>Using the <code>attribute</code> parameter you can pull out a value nested deeper in the object's structure:</p> <pre><code>'firstName': fields.String(attribute='user.first_name'),\n</code></pre> <p>In more complex cases you can use a <code>lambda</code> function to query for the value:</p> <pre><code>'fullName': fields.String(attribute=lambda x: '{} {}'.format(x.first_name, x.last_name)),\n</code></pre>","tags":["rest","restful","api","flask","swagger","openapi","flask-restplus"]},{"location":"blog/2016/06/19/building-beautiful-restful-apis-using-flask-swagger-ui-flask-restplus/#handling-errors","title":"Handling errors","text":"<p>When writing your API endpoint functions you may find yourself handling a request that cannot be fulfilled. In such cases your only recourse it to return an error message to the user. You can use the <code>api.abort()</code> function to do so.</p> <pre><code>api.abort(code=400, message=\"Sorry, Dave. I'm afraid I can't do that.\")\n</code></pre> <p>In cases where you don't explicitly handle the error yourself, Flask will catch the exception and turn it into an <code>HTTP 500</code> error page.</p> <p>You can override the default error handler using the <code>@api.errorhandler</code> decorator.</p> rest_api_demo/api/restplus.py<pre><code>@api.errorhandler\ndef default_error_handler(e):\n    message = 'An unhandled exception occurred.'\n    log.exception(message)\n\n    if not settings.FLASK_DEBUG:\n        return {'message': message}, 500\n</code></pre> <p>You can specify custom error handling logic for different types of exceptions.</p> rest_api_demo/api/restplus.py<pre><code>@api.errorhandler(NoResultFound)\ndef database_not_found_error_handler(e):\n    log.warning(traceback.format_exc())\n    return {'message': 'A database result was required but none was found.'}, 404\n</code></pre> <p>The <code>default_error_handler</code> function as written above will not return any response if the Flask application is running in <code>DEBUG</code> mode. Instead of returning an error message, this will activate the Werkzeug interactive debugger.</p> Werkzeug interactive debugger","tags":["rest","restful","api","flask","swagger","openapi","flask-restplus"]},{"location":"blog/2016/06/19/building-beautiful-restful-apis-using-flask-swagger-ui-flask-restplus/#resetting-the-database","title":"Resetting the database","text":"<p>If you delete the <code>db.sqlite</code> file or simply want to reset your database to an empty state, you can enter the following commands in your Python console.</p> <pre><code>&gt;&gt;&gt; from rest_api_demo.app import initialize_app, app\n&gt;&gt;&gt; from rest_api_demo.database import reset_database\n&gt;&gt;&gt;\n&gt;&gt;&gt; initialize_app(app)\n&gt;&gt;&gt; with app.app_context():\n...     reset_database()\n</code></pre>","tags":["rest","restful","api","flask","swagger","openapi","flask-restplus"]},{"location":"blog/2016/06/19/building-beautiful-restful-apis-using-flask-swagger-ui-flask-restplus/#further-reading","title":"Further reading","text":"<p>There are a lot of resources on the net which can guide you to full Flask enlightenment. I would recommend getting to know the following:</p> <ul> <li>Flask docs</li> <li>Flask-RESTPlus docs</li> <li>Flask-SQLAlchemy docs and SQLAlchemy Tutorial - for more information about using a database with Flask</li> <li>Flask Extensions Registry - for more useful Flask extensions</li> <li>Rest API Design Rulebook</li> </ul>","tags":["rest","restful","api","flask","swagger","openapi","flask-restplus"]},{"location":"blog/2016/08/22/beautiful-rest-apis-with-flask-swagger-and-flask-restplus/","title":"Beautiful REST APIs with Flask, Swagger and Flask-RESTPlus","text":"<p>Slides for a presentation I gave the EuroPython 2016 conference in Bilbao.</p>","tags":["python","flask","rest","api"]},{"location":"blog/2017/03/19/developing-workflows-with-apache-airflow/","title":"Get started developing workflows with Apache Airflow","text":"<p>Apache Airflow is an open-source tool for orchestrating complex computational workflows and data processing pipelines. If you find yourself running cron task which execute ever longer scripts, or keeping a calendar of big data processing batch jobs then Airflow can probably help you. This article provides an introductory tutorial for people who want to get started writing pipelines with Airflow.</p> <p>An Airflow workflow is designed as a directed acyclic graph (DAG). That means, that when authoring a workflow, you should think how it could be divided into tasks which can be executed independently. You can then merge these tasks into a logical whole by combining them into a graph. </p> An example Airflow pipeline DAG <p>The shape of the graph decides the overall logic of your workflow. An Airflow DAG can include multiple branches and you can decide which of them to follow and which to skip at the time of workflow execution.</p> <p>This creates a very resilient design, because each task can be retried multiple times if an error occurs. Airflow can even be stopped entirely and running workflows will resume by restarting the last unfinished task.</p> <p>Note</p> <p>When designing Airflow operators, it's important to keep in mind that they may be executed more than once. Each task should be idempotent, i.e. have the ability to be applied multiple times without producing unintended consequences.</p>","tags":["python","airflow","workflow","pipeline"]},{"location":"blog/2017/03/19/developing-workflows-with-apache-airflow/#airflow-nomenclature","title":"Airflow nomenclature","text":"<p>Here is a brief overview of some terms used when designing Airflow workflows:</p> <ul> <li>Airflow DAGs are composed of Tasks.</li> <li>Each Task is created by instantiating an Operator class. A configured instance of an Operator becomes a Task, as in: <code>my_task = MyOperator(...)</code>.</li> <li>When a DAG is started, Airflow creates a DAG Run entry in its database.</li> <li>When a Task is executed in the context of a particular DAG Run, then a Task Instance is created.</li> <li><code>AIRFLOW_HOME</code> is the directory where you store your DAG definition files and Airflow plugins.</li> </ul> When? DAG Task Info about other tasks During definition DAG Task <code>get_direct_relatives</code> During a run DAG Run Task Instance <code>xcom_pull</code> Base class <code>DAG</code> <code>BaseOperator</code> <p>Airflow documentation provides more information about these and other concepts.</p>","tags":["python","airflow","workflow","pipeline"]},{"location":"blog/2017/03/19/developing-workflows-with-apache-airflow/#prerequisites","title":"Prerequisites","text":"<p>Airflow is written in Python, so I will assume you have it installed on your machine. I'm using Python 3 (because it's 2017, come on people!), but Airflow is supported on Python 2 as well. I will also assume that you have virtualenv installed.</p> <pre><code>$ python3 --version\nPython 3.6.0\n$ virtualenv --version\n15.1.0\n</code></pre>","tags":["python","airflow","workflow","pipeline"]},{"location":"blog/2017/03/19/developing-workflows-with-apache-airflow/#install-airflow","title":"Install Airflow","text":"<p>Let's create a workspace directory for this tutorial, and inside it a Python 3 virtualenv directory:</p> <pre><code>$ cd /path/to/my/airflow/workspace\n$ virtualenv -p `which python3` venv\n$ source venv/bin/activate\n(venv) $\n</code></pre> <p>Now let's install Airflow 1.8:</p> <pre><code>(venv) $ pip install airflow==1.8.0\n</code></pre> <p>Now we'll need to create the <code>AIRFLOW_HOME</code> directory where your DAG definition files and Airflow plugins will be stored. Once the directory is created, set the <code>AIRFLOW_HOME</code> environment variable:</p> <pre><code>(venv) $ cd /path/to/my/airflow/workspace\n(venv) $ mkdir airflow_home\n(venv) $ export AIRFLOW_HOME=`pwd`/airflow_home\n</code></pre> <p>You should now be able to run Airflow commands. Let's try by issuing the following:</p> <pre><code>(venv) $ airflow version\n  ____________       _____________\n ____    |__( )_________  __/__  /________      __\n____  /| |_  /__  ___/_  /_ __  /_  __ \\_ | /| / /\n___  ___ |  / _  /   _  __/ _  / / /_/ /_ |/ |/ /\n _/_/  |_/_/  /_/    /_/    /_/  \\____/____/|__/\n   v1.8.0rc5+apache.incubating\n</code></pre> <p>If the <code>airflow version</code> command worked, then Airflow also created its default configuration file <code>airflow.cfg</code> in <code>AIRFLOW_HOME</code>:</p> <pre><code>airflow_home\n\u251c\u2500\u2500 airflow.cfg\n\u2514\u2500\u2500 unittests.cfg\n</code></pre> <p>Default configuration values stored in <code>airflow.cfg</code> will be fine for this tutorial, but in case you want to tweak any Airflow settings, this is the file to change. Take a look at the docs for more information about configuring Airflow.</p>","tags":["python","airflow","workflow","pipeline"]},{"location":"blog/2017/03/19/developing-workflows-with-apache-airflow/#initialize-the-airflow-db","title":"Initialize the Airflow DB","text":"<p>Next step is to issue the following command, which will create and initialize the Airflow SQLite database:</p> <pre><code>(venv) $ airflow initdb\n</code></pre> <p>The database will be create in <code>airflow.db</code> by default.</p> <pre><code>airflow_home\n\u251c\u2500\u2500 airflow.cfg\n\u251c\u2500\u2500 airflow.db        &lt;- Airflow SQLite DB\n\u2514\u2500\u2500 unittests.cfg\n</code></pre> <p>Note</p> <p>Using SQLite is an adequate solution for local testing and development, but it does not support concurrent access. In a production environment you will most certainly want to use a more robust database solution such as Postgres or MySQL.</p>","tags":["python","airflow","workflow","pipeline"]},{"location":"blog/2017/03/19/developing-workflows-with-apache-airflow/#start-the-airflow-web-server","title":"Start the Airflow web server","text":"<p>Airflow's UI is provided in the form of a Flask web application. You can start it by issuing the command:</p> <pre><code>(venv) $ airflow webserver\n</code></pre> <p>You can now visit the Airflow UI by navigating your browser to port <code>8080</code> on the host where Airflow was started, for example: http://localhost:8080/admin/</p> <p>Note</p> <p>Airflow comes with a number of example DAGs. Note that these examples may not work until you have at least one DAG definition file in your own <code>dags_folder</code>. You can hide the example DAGs by changing the <code>load_examples</code> setting in <code>airflow.cfg</code>.</p>","tags":["python","airflow","workflow","pipeline"]},{"location":"blog/2017/03/19/developing-workflows-with-apache-airflow/#your-first-airflow-dag","title":"Your first Airflow DAG","text":"<p>OK, if everything is ready, let's start writing some code. We'll start by creating a Hello World workflow, which does nothing other then sending \"Hello world!\" to the log.</p> <p>Create your <code>dags_folder</code>, that is the directory where your DAG definition files will be stored in <code>AIRFLOW_HOME/dags</code>. Inside that directory create a file named <code>hello_world.py</code>.</p> <pre><code>airflow_home\n\u251c\u2500\u2500 airflow.cfg\n\u251c\u2500\u2500 airflow.db\n\u251c\u2500\u2500 dags                &lt;- Your DAGs directory\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 hello_world.py  &lt;- Your DAG definition file\n\u2514\u2500\u2500 unittests.cfg\n</code></pre> <p>Add the following code to <code>dags/hello_world.py</code>:</p> airflow_home/dags/hello_world.py<pre><code>from datetime import datetime\nfrom airflow import DAG\nfrom airflow.operators.dummy_operator import DummyOperator\nfrom airflow.operators.python_operator import PythonOperator\n\ndef print_hello():\n    return 'Hello world!'\n\ndag = DAG('hello_world', description='Simple tutorial DAG',\n          schedule_interval='0 12 * * *',\n          start_date=datetime(2017, 3, 20), catchup=False)\n\ndummy_operator = DummyOperator(task_id='dummy_task', retries=3, dag=dag)\n\nhello_operator = PythonOperator(task_id='hello_task', python_callable=print_hello, dag=dag)\n\ndummy_operator &gt;&gt; hello_operator\n</code></pre> <p>This file creates a simple DAG with just two operators, the <code>DummyOperator</code>, which does nothing and a <code>PythonOperator</code> which calls the <code>print_hello</code> function when its task is executed.</p>","tags":["python","airflow","workflow","pipeline"]},{"location":"blog/2017/03/19/developing-workflows-with-apache-airflow/#running-your-dag","title":"Running your DAG","text":"<p>In order to run your DAG, open a second terminal and start the Airflow scheduler by issuing the following commands:</p> <pre><code>$ cd /path/to/my/airflow/workspace\n$ export AIRFLOW_HOME=`pwd`/airflow_home\n$ source venv/bin/activate\n(venv) $ airflow scheduler\n</code></pre> <p>Note</p> <p>The scheduler will send tasks for execution. The default Airflow settings rely on an executor named <code>SequentialExecutor</code>, which is started automatically by the scheduler. In production you would probably want to use a more robust executor, such as the <code>CeleryExecutor</code>.</p> <p>When you reload the Airflow UI in your browser, you should see your <code>hello_world</code> DAG listed in Airflow UI.</p> Hello World DAG in Airflow UI <p>In order to start a DAG Run, first turn the workflow on (arrow 1), then click the Trigger Dag button (arrow 2) and finally, click on the Graph View (arrow 3) to see the progress of the run.</p> Hello World DAG Run - Graph View <p>You can reload the graph view until both tasks reach the status Success. When they are done, you can click on the <code>hello_task</code> and then click View Log. If everything worked as expected, the log should show a number of lines and among them something like this:</p> <pre><code>[2017-03-19 13:49:58,789] {base_task_runner.py:95} INFO - Subtask: --------------------------------------------------------------------------------\n[2017-03-19 13:49:58,789] {base_task_runner.py:95} INFO - Subtask: Starting attempt 1 of 1\n[2017-03-19 13:49:58,789] {base_task_runner.py:95} INFO - Subtask: --------------------------------------------------------------------------------\n[2017-03-19 13:49:58,790] {base_task_runner.py:95} INFO - Subtask: \n[2017-03-19 13:49:58,800] {base_task_runner.py:95} INFO - Subtask: [2017-03-19 13:49:58,800] {models.py:1342} INFO - Executing &lt;Task(PythonOperator): hello_task&gt; on 2017-03-19 13:49:44.775843\n[2017-03-19 13:49:58,818] {base_task_runner.py:95} INFO - Subtask: [2017-03-19 13:49:58,818] {python_operator.py:81} INFO - Done. Returned value was: Hello world!\n</code></pre> <p>The code you should have at this stage is available in this commit on GitHub.</p>","tags":["python","airflow","workflow","pipeline"]},{"location":"blog/2017/03/19/developing-workflows-with-apache-airflow/#your-first-airflow-operator","title":"Your first Airflow Operator","text":"<p>Let's start writing our own Airflow operators. An Operator is an atomic block of workflow logic, which performs a single action. Operators are written as Python classes (subclasses of <code>BaseOperator</code>), where the <code>__init__</code> function can be used to configure settings for the task and a method named <code>execute</code> is called when the task instance is executed.</p> <p>Any value that the <code>execute</code> method returns is saved as an Xcom message under the key <code>return_value</code>. We'll cover this topic later.</p> <p>The <code>execute</code> method may also raise the <code>AirflowSkipException</code> from <code>airflow.exceptions</code>. In such a case the task instance would transition to the Skipped status.</p> <p>If another exception is raised, the task will be retried until the maximum number of <code>retries</code> is reached.</p> <p>Note</p> <p>Remember that since the <code>execute</code> method can retry many times, it should be idempotent.</p> <p>We'll create your first operator in an Airflow plugin file named <code>plugins/my_operators.py</code>. First create the <code>airflow_home/plugins</code> directory, then add the <code>my_operators.py</code> file with the following content:</p> airflow_home/plugins/my_operators.py<pre><code>import logging\n\nfrom airflow.models import BaseOperator\nfrom airflow.plugins_manager import AirflowPlugin\nfrom airflow.utils.decorators import apply_defaults\n\nlog = logging.getLogger(__name__)\n\nclass MyFirstOperator(BaseOperator):\n\n    @apply_defaults\n    def __init__(self, my_operator_param, *args, **kwargs):\n        self.operator_param = my_operator_param\n        super(MyFirstOperator, self).__init__(*args, **kwargs)\n\n    def execute(self, context):\n        log.info(\"Hello World!\")\n        log.info('operator_param: %s', self.operator_param)\n\nclass MyFirstPlugin(AirflowPlugin):\n    name = \"my_first_plugin\"\n    operators = [MyFirstOperator]\n</code></pre> <p>In this file we are defining a new operator named <code>MyFirstOperator</code>. Its <code>execute</code> method is very simple, all it does is log \"Hello World!\" and the value of its own single parameter. The parameter is set in the <code>__init__</code> function. </p> <p>We are also defining an Airflow plugin named <code>MyFirstPlugin</code>. By defining a plugin in a file stored in the <code>airflow_home/plugins</code> directory, we're providing Airflow the ability to pick up our plugin and all the operators it defines. We'll be able to import these operators later using the line <code>from airflow.operators import MyFirstOperator</code>. </p> <p>In the docs, you can read more about Airflow plugins.</p> <p>Note</p> <p>Make sure your <code>PYTHONPATH</code> is set to include directories where your custom modules are stored.</p> <p>Now, we'll need to create a new DAG to test our operator. Create a <code>dags/test_operators.py</code> file and fill it with the following content:</p> airflow_home/dags/test_operators.py<pre><code>from datetime import datetime\nfrom airflow import DAG\nfrom airflow.operators.dummy_operator import DummyOperator\nfrom airflow.operators import MyFirstOperator\n\ndag = DAG('my_test_dag', description='Another tutorial DAG',\n          schedule_interval='0 12 * * *',\n          start_date=datetime(2017, 3, 20), catchup=False)\n\ndummy_task = DummyOperator(task_id='dummy_task', dag=dag)\n\noperator_task = MyFirstOperator(my_operator_param='This is a test.', \n                                task_id='my_first_operator_task', dag=dag)\n\ndummy_task &gt;&gt; operator_task\n</code></pre> <p>Here we just created a simple DAG named <code>my_test_dag</code> with a <code>DummyOperator</code> task and another task using our new <code>MyFirstOperator</code>. Notice how we pass the configuration value for <code>my_operator_param</code> here during DAG definition.</p> <p>At this stage your source tree will look like this:</p> <pre><code>airflow_home\n\u251c\u2500\u2500 airflow.cfg\n\u251c\u2500\u2500 airflow.db\n\u251c\u2500\u2500 dags\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 hello_world.py\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 test_operators.py  &lt;- Second DAG definition file\n\u251c\u2500\u2500 plugins\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 my_operators.py    &lt;- Your plugin file\n\u2514\u2500\u2500 unittests.cfg\n</code></pre> <p>All the code you should have at this stage is available in this commit on GitHub.</p> <p>To test your new operator, you should stop (CTRL-C) and restart your Airflow web server and scheduler. Afterwards, go back to the Airflow UI, turn on the <code>my_test_dag</code> DAG and trigger a run. Take a look at the logs for <code>my_first_operator_task</code>.</p>","tags":["python","airflow","workflow","pipeline"]},{"location":"blog/2017/03/19/developing-workflows-with-apache-airflow/#debugging-an-airflow-operator","title":"Debugging an Airflow operator","text":"<p>Debugging would quickly get tedious if you had to trigger a DAG run and wait for all upstream tasks to finish before you could retry your new operator. Thankfully Airflow has the <code>airflow test</code> command, which you can use to manually start a single operator in the context of a specific DAG run.</p> <p>The command takes 3 arguments: the name of the dag, the name of a task and a date associated with a particular DAG Run.</p> <pre><code>(venv) $ airflow test my_test_dag my_first_operator_task 2017-03-18T18:00:00.0\n</code></pre> <p>You can use this command to restart you task as many times as needed, while tweaking your operator code.</p> <p>Note</p> <p>If you want to test a task from a particular DAG run, you can find the needed date value in the logs of a failing task instance.</p>","tags":["python","airflow","workflow","pipeline"]},{"location":"blog/2017/03/19/developing-workflows-with-apache-airflow/#debugging-an-airflow-operator-with-ipython","title":"Debugging an Airflow operator with IPython","text":"<p>There is a cool trick you can use to debug your operator code. If you install IPython in your venv:</p> <pre><code>(venv) $ pip install ipython\n</code></pre> <p>You can then place IPython's <code>embed()</code> command in your code, for example in the <code>execute</code> method of an operator, like so:</p> airflow_home/plugins/my_operators.py<pre><code>def execute(self, context):\n    log.info(\"Hello World!\")\n\n    from IPython import embed; embed()\n\n    log.info('operator_param: %s', self.operator_param)\n</code></pre> <p>Now when you run the <code>airflow test</code> command again:</p> <pre><code>(venv) $ airflow test my_test_dag my_first_operator_task 2017-03-18T18:00:00.0\n</code></pre> <p>the task will run, but execution will stop and you will be dropped into an IPython shell, from which you can explore the place in the code where you placed <code>embed()</code>:</p> <pre><code>In [1]: context\nOut[1]:\n{'END_DATE': '2017-03-18',\n 'conf': &lt;module 'airflow.configuration' from '/path/to/my/airflow/workspace/venv/lib/python3.6/site-packages/airflow/configuration.py'&gt;,\n 'dag': &lt;DAG: my_test_dag&gt;,\n 'dag_run': None,\n 'ds': '2017-03-18',\n 'ds_nodash': '20170318',\n 'end_date': '2017-03-18',\n 'execution_date': datetime.datetime(2017, 3, 18, 18, 0),\n 'latest_date': '2017-03-18',\n 'macros': &lt;module 'airflow.macros' from '/path/to/my/airflow/workspace/venv/lib/python3.6/site-packages/airflow/macros/__init__.py'&gt;,\n 'next_execution_date': datetime.datetime(2017, 3, 19, 12, 0),\n 'params': {},\n 'prev_execution_date': datetime.datetime(2017, 3, 18, 12, 0),\n 'run_id': None,\n 'tables': None,\n 'task': &lt;Task(MyFirstOperator): my_first_operator_task&gt;,\n 'task_instance': &lt;TaskInstance: my_test_dag.my_first_operator_task 2017-03-18 18:00:00 [running]&gt;,\n 'task_instance_key_str': 'my_test_dag__my_first_operator_task__20170318',\n 'test_mode': True,\n 'ti': &lt;TaskInstance: my_test_dag.my_first_operator_task 2017-03-18 18:00:00 [running]&gt;,\n 'tomorrow_ds': '2017-03-19',\n 'tomorrow_ds_nodash': '20170319',\n 'ts': '2017-03-18T18:00:00',\n 'ts_nodash': '20170318T180000',\n 'var': {'json': None, 'value': None},\n 'yesterday_ds': '2017-03-17',\n 'yesterday_ds_nodash': '20170317'}\n\nIn [2]: self.operator_param\nOut[2]: 'This is a test.'\n</code></pre> <p>You could of course also drop into Python's interactive debugger <code>pdb</code> (<code>import pdb; pdb.set_trace()</code>) or the IPython enhanced version <code>ipdb</code> (<code>import ipdb; ipdb.set_trace()</code>). Alternatively, you can also use an <code>airflow test</code> based run configuration to set breakpoints in IDEs such as PyCharm.</p> A PyCharm debug configuration <p>Code is in this commit on GitHub.</p>","tags":["python","airflow","workflow","pipeline"]},{"location":"blog/2017/03/19/developing-workflows-with-apache-airflow/#your-first-airflow-sensor","title":"Your first Airflow Sensor","text":"<p>An Airflow Sensor is a special type of Operator, typically used to monitor a long running task on another system. </p> <p>To create a Sensor, we define a subclass of <code>BaseSensorOperator</code> and override its <code>poke</code> function. The <code>poke</code> function will be called over and over every <code>poke_interval</code> seconds until one of the following happens:</p> <ul> <li><code>poke</code> returns <code>True</code> - if it returns <code>False</code> it will be called again.</li> <li><code>poke</code> raises an <code>AirflowSkipException</code> from <code>airflow.exceptions</code> - the Sensor task instance's status will be set to Skipped.</li> <li><code>poke</code> raises another exception, in which case it will be retried until the maximum number of <code>retries</code> is reached.</li> </ul> <p>There are many predefined sensors, which can be found in Airflow's codebase:</p> <p>To add a new Sensor to your <code>my_operators.py</code> file, add the following code:</p> airflow_home/plugins/my_operators.py<pre><code>from datetime import datetime\nfrom airflow.operators.sensors import BaseSensorOperator\n\nclass MyFirstSensor(BaseSensorOperator):\n\n    @apply_defaults\n    def __init__(self, *args, **kwargs):\n        super(MyFirstSensor, self).__init__(*args, **kwargs)\n\n    def poke(self, context):\n        current_minute = datetime.now().minute\n        if current_minute % 3 != 0:\n            log.info(\"Current minute (%s) not is divisible by 3, sensor will retry.\", current_minute)\n            return False\n\n        log.info(\"Current minute (%s) is divisible by 3, sensor finishing.\", current_minute)\n        return True\n</code></pre> <p>Here we created a very simple sensor, which will wait until the the current minute is a number divisible by 3. When this happens, the sensor's condition will be satisfied and it will exit. This is a contrived example, in a real case you would probably check something more unpredictable than just the time.</p> <p>Remember to also change the plugin class, to add the new sensor to the <code>operators</code> it exports:</p> airflow_home/plugins/my_operators.py<pre><code>class MyFirstPlugin(AirflowPlugin):\n    name = \"my_first_plugin\"\n    operators = [MyFirstOperator, MyFirstSensor]\n</code></pre> <p>You can now place the operator in your DAG:</p> airflow_home/dags/test_operators.py<pre><code>from datetime import datetime\nfrom airflow import DAG\nfrom airflow.operators.dummy_operator import DummyOperator\nfrom airflow.operators import MyFirstOperator, MyFirstSensor\n\n\ndag = DAG('my_test_dag', description='Another tutorial DAG',\n          schedule_interval='0 12 * * *',\n          start_date=datetime(2017, 3, 20), catchup=False)\n\ndummy_task = DummyOperator(task_id='dummy_task', dag=dag)\n\nsensor_task = MyFirstSensor(task_id='my_sensor_task', poke_interval=30, dag=dag)\n\noperator_task = MyFirstOperator(my_operator_param='This is a test.', \n                                task_id='my_first_operator_task', dag=dag)\n\ndummy_task &gt;&gt; sensor_task &gt;&gt; operator_task\n</code></pre> <p>Restart your webserver and scheduler and try out your new workflow.</p> <p>If you click View log of the <code>my_sensor_task</code> task, you should see something similar to this:</p> <pre><code>[2017-03-19 14:13:28,719] {base_task_runner.py:95} INFO - Subtask: --------------------------------------------------------------------------------\n[2017-03-19 14:13:28,719] {base_task_runner.py:95} INFO - Subtask: Starting attempt 1 of 1\n[2017-03-19 14:13:28,720] {base_task_runner.py:95} INFO - Subtask: --------------------------------------------------------------------------------\n[2017-03-19 14:13:28,720] {base_task_runner.py:95} INFO - Subtask: \n[2017-03-19 14:13:28,728] {base_task_runner.py:95} INFO - Subtask: [2017-03-19 14:13:28,728] {models.py:1342} INFO - Executing &lt;Task(MyFirstSensor): my_sensor_task&gt; on 2017-03-19 14:13:05.651721\n[2017-03-19 14:13:28,743] {base_task_runner.py:95} INFO - Subtask: [2017-03-19 14:13:28,743] {my_operators.py:34} INFO - Current minute (13) not is divisible by 3, sensor will retry.\n[2017-03-19 14:13:58,747] {base_task_runner.py:95} INFO - Subtask: [2017-03-19 14:13:58,747] {my_operators.py:34} INFO - Current minute (13) not is divisible by 3, sensor will retry.\n[2017-03-19 14:14:28,750] {base_task_runner.py:95} INFO - Subtask: [2017-03-19 14:14:28,750] {my_operators.py:34} INFO - Current minute (14) not is divisible by 3, sensor will retry.\n[2017-03-19 14:14:58,752] {base_task_runner.py:95} INFO - Subtask: [2017-03-19 14:14:58,752] {my_operators.py:34} INFO - Current minute (14) not is divisible by 3, sensor will retry.\n[2017-03-19 14:15:28,756] {base_task_runner.py:95} INFO - Subtask: [2017-03-19 14:15:28,756] {my_operators.py:37} INFO - Current minute (15) is divisible by 3, sensor finishing.\n[2017-03-19 14:15:28,757] {base_task_runner.py:95} INFO - Subtask: [2017-03-19 14:15:28,756] {sensors.py:83} INFO - Success criteria met. Exiting.\n</code></pre> <p>Code is in this commit on GitHub.</p>","tags":["python","airflow","workflow","pipeline"]},{"location":"blog/2017/03/19/developing-workflows-with-apache-airflow/#communicating-between-operators-with-xcom","title":"Communicating between operators with Xcom","text":"<p>In most workflow scenarios downstream tasks will have to use some information from an upstream task. Since each task instance will run in a different process, perhaps on a different machine, Airflow provides a communication mechanism called Xcom for this purpose.</p> <p>Each task instance can store some information in Xcom using the <code>xcom_push</code> function and another task instance can retrieve this information using <code>xcom_pull</code>. The information passed using Xcoms will be pickled and stored in the Airflow database (<code>xcom</code> table), so it's better to save only small bits of information, rather then large objects.</p> <p>Let's enhance our Sensor, so that it saves a value to Xcom. We're using the <code>xcom_push()</code> function which takes two arguments - a key under which the value will be saved and the value itself.</p> airflow_home/plugins/my_operators.py<pre><code>class MyFirstSensor(BaseSensorOperator):\n    ...\n\n    def poke(self, context):\n        ...\n        log.info(\"Current minute (%s) is divisible by 3, sensor finishing.\", current_minute)\n        task_instance = context['task_instance']\n        task_instance.xcom_push('sensors_minute', current_minute)\n        return True\n</code></pre> <p>Now in our operator, which is downstream from the sensor in our DAG, we can use this value, by retrieving it from Xcom. Here we're using the <code>xcom_pull()</code> function providing it with two arguments - the task ID of the task instance which stored the value and the <code>key</code> under which the value was stored.</p> airflow_home/plugins/my_operators.py<pre><code>class MyFirstOperator(BaseOperator):\n    ...\n\n    def execute(self, context):\n        log.info(\"Hello World!\")\n        log.info('operator_param: %s', self.operator_param)\n        task_instance = context['task_instance']\n        sensors_minute = task_instance.xcom_pull('my_sensor_task', key='sensors_minute')\n        log.info('Valid minute as determined by sensor: %s', sensors_minute)\n</code></pre> <p>Final version of the code is in this commit on GitHub.</p> <p>If you trigger a DAG run now and look in the operator's logs, you will see that it was able to display the value created by the upstream sensor.</p> <p>In the docs, you can read more about Airflow XComs.</p> <p>I hope you found this brief introduction to Airflow useful. Have fun developing your own workflows and data processing pipelines!</p>","tags":["python","airflow","workflow","pipeline"]},{"location":"blog/2017/07/13/elegant-workflows-with-apache-airflow/","title":"Elegant workflows with Apache Airflow","text":"<p>Talk about developing powerful workflows in Python code with Apache Airflow.</p> <p>Slides for a presentation I gave the EuroPython 2017 conference in Rimini, Italy.</p>","tags":["python","airflow","workflow","graphs"]},{"location":"blog/2017/07/13/elegant-workflows-with-apache-airflow/#abstract","title":"Abstract","text":"<p>Every time a new batch of data comes in, you start a set of tasks. Some tasks can run in parallel, some must run in a sequence, perhaps on a number of different machines. That\u2019s a workflow.</p> <p>Did you ever draw a block diagram of your workflow? Imagine you could bring that diagram to life and actually run it as it looks on the whiteboard. With Airflow you can just about do that.</p> <p>Apache Airflow is an open-source Python tool for orchestrating data processing pipelines. In each workflow tasks are arranged into a directed acyclic graph (DAG). Shape of this graph decides the overall logic of the workflow. A DAG can have many branches and you can decide which of them to follow and which to skip at execution time.</p> <p>This creates a resilient design because each task can be retried multiple times if an error occurs. Airflow can even be stopped entirely and running workflows will resume by restarting the last unfinished task. Logs for each task are stored separately and are easily accessible through a friendly web UI.</p> <p>In my talk I will go over basic Airflow concepts and through examples demonstrate how easy it is to define your own workflows in Python code. We\u2019ll also go over ways to extend Airflow by adding custom task operators, sensors and plugins.</p>","tags":["python","airflow","workflow","graphs"]},{"location":"blog/2017/07/13/elegant-workflows-with-apache-airflow/#talk-recording","title":"Talk recording","text":"","tags":["python","airflow","workflow","graphs"]},{"location":"blog/2017/07/13/elegant-workflows-with-apache-airflow/#related-article","title":"Related article","text":"<p>You can read more about developing workflows with Apache Airflow in my previous article.</p>","tags":["python","airflow","workflow","graphs"]},{"location":"blog/2023/","title":"2023","text":""},{"location":"blog/2022/","title":"2022","text":""},{"location":"blog/2019/","title":"2019","text":""},{"location":"blog/2017/","title":"2017","text":""},{"location":"blog/2016/","title":"2016","text":""},{"location":"blog/2015/","title":"2015","text":""},{"location":"blog/2014/","title":"2014","text":""},{"location":"blog/2013/","title":"2013","text":""},{"location":"blog/2010/","title":"2010","text":""},{"location":"blog/2009/","title":"2009","text":""},{"location":"blog/2006/","title":"2006","text":""},{"location":"blog/2005/","title":"2005","text":""},{"location":"blog/2004/","title":"2004","text":""},{"location":"blog/2003/","title":"2003","text":""},{"location":"blog/2002/","title":"2002","text":""},{"location":"blog/2001/","title":"2001","text":""},{"location":"blog/2000/","title":"2000","text":""},{"location":"blog/category/tech/","title":"tech","text":""},{"location":"blog/category/personal/","title":"personal","text":""},{"location":"blog/page/2/","title":"Web Log","text":""},{"location":"blog/page/3/","title":"Web Log","text":""},{"location":"blog/page/4/","title":"Web Log","text":""},{"location":"blog/page/5/","title":"Web Log","text":""},{"location":"blog/page/6/","title":"Web Log","text":""},{"location":"blog/page/7/","title":"Web Log","text":""},{"location":"blog/page/8/","title":"Web Log","text":""},{"location":"blog/page/9/","title":"Web Log","text":""},{"location":"blog/page/10/","title":"Web Log","text":""},{"location":"blog/page/11/","title":"Web Log","text":""},{"location":"blog/page/12/","title":"Web Log","text":""},{"location":"blog/page/13/","title":"Web Log","text":""},{"location":"blog/2009/page/2/","title":"2009","text":""},{"location":"blog/2004/page/2/","title":"2004","text":""},{"location":"blog/2003/page/2/","title":"2003","text":""},{"location":"blog/2003/page/3/","title":"2003","text":""},{"location":"blog/2003/page/4/","title":"2003","text":""},{"location":"blog/2003/page/5/","title":"2003","text":""},{"location":"blog/2003/page/6/","title":"2003","text":""},{"location":"blog/category/personal/page/2/","title":"personal","text":""},{"location":"blog/category/personal/page/3/","title":"personal","text":""},{"location":"blog/category/personal/page/4/","title":"personal","text":""},{"location":"blog/category/personal/page/5/","title":"personal","text":""},{"location":"blog/category/personal/page/6/","title":"personal","text":""},{"location":"blog/category/personal/page/7/","title":"personal","text":""},{"location":"blog/category/personal/page/8/","title":"personal","text":""},{"location":"blog/category/personal/page/9/","title":"personal","text":""},{"location":"blog/category/tech/page/2/","title":"tech","text":""},{"location":"blog/category/tech/page/3/","title":"tech","text":""},{"location":"blog/category/tech/page/4/","title":"tech","text":""}]}